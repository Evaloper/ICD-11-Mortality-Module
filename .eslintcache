[{"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/index.js":"1","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/store.js":"2","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/App/index.js":"3","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/locale/i18n.js":"4","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/locale/locale.js":"5","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/reducers/index.js":"6","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Search/index.js":"7","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/ControlBar/index.js":"8","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Administration/index.js":"9","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/HeaderBar/index.js":"10","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/RegisteredTeiList/index.js":"11","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Form/index.js":"12","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Export/index.js":"13","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Translation/index.js":"14","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/actions/user/index.js":"15","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/actions/metadata/index.js":"16","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/actions/admin/index.js":"17","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/actions/route/index.js":"18","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/reducers/route.js":"19","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/reducers/data.js":"20","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/reducers/metadata.js":"21","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/reducers/admin.js":"22","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/reducers/user.js":"23","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/index.jsx":"24","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Form/Profile.js":"25","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Form/DeathCertificate.js":"26","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Form/Stage.js":"27","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Translation/TranslationTable.js":"28","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Translation/const.js":"29","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Export/Content.js":"30","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/utils/index.js":"31","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/utils/excel.utility.js":"32","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/actions/user/type.js":"33","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/actions/metadata/type.js":"34","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/actions/admin/type.js":"35","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/actions/route/type.js":"36","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/reducers/data-methods.js":"37","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Search/Result.jsx":"38","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Administration/Attributes.jsx":"39","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Administration/FrameA.jsx":"40","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Form/WarningDialog.jsx":"41","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Administration/Selections.jsx":"42","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Administration/AssignUsers.jsx":"43","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Administration/Finish.jsx":"44","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Administration/FrameB.jsx":"45","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Administration/AssignOrgUnits.jsx":"46","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Administration/Certificate.jsx":"47","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Administration/Review.jsx":"48","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/actions/data/type.js":"49","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/run.js":"50","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/utils.js":"51","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/utils/generateChildChart.js":"52","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/WidgetContainer/WidgetContainer.jsx":"53","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/actions/data/index.js":"54","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/hocs/withLoading.js":"55","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Icd11Tool/EmbeddedIcd11Tool.js":"56","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/utils/const.js":"57","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/utils/generateMetadata.js":"58","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Administration/CustomCertificate.jsx":"59","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/utils/generateChildCharts.js":"60","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/InputField/index.js":"61","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/page9/index.js":"62","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/page8/index.js":"63","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/page6/index.js":"64","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/page7/index.js":"65","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/page5/index.js":"66","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/page4/index.js":"67","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/page3/index.js":"68","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/page2/index.js":"69","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/page1/index.js":"70","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/page0/index.js":"71","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/example/index.js":"72","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/utils/certificate.js":"73","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/index.js":"74","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/IconButton/index.jsx":"75","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/page2/stackedBar-chart.js":"76","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/page2/line-chart.js":"77","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/IconButton/const.js":"78","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/example/html-chart.js":"79","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/example/treemap-chart.js":"80","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/example/children-chart.js":"81","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/example/pie-chart.js":"82","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/example/combined-chart.js":"83","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/example/line-chart.js":"84","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/example/stacked-bar-chart.js":"85","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/Nodata.jsx":"86","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/Treemap.jsx":"87","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/Bublemap.jsx":"88","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/Html.jsx":"89","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/example/bar-chart.js":"90","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/example/statistic.js":"91","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/Pie.jsx":"92","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/Line.jsx":"93","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/Statistic.jsx":"94","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/Map.jsx":"95","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/Bar.jsx":"96","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/VerticalStackedBarChart.jsx":"97","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/StackedBarChart.jsx":"98","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/DoubleStackedBarChart.jsx":"99","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/CombinedChart.jsx":"100","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Icd11Tool/RawCodingTool.js":"101"},{"size":531,"mtime":1646206459537,"results":"102","hashOfConfig":"103"},{"size":224,"mtime":1631842942146,"results":"104","hashOfConfig":"103"},{"size":10038,"mtime":1701720247710,"results":"105","hashOfConfig":"103"},{"size":989,"mtime":1695418946906,"results":"106","hashOfConfig":"103"},{"size":18464,"mtime":1698443568157,"results":"107","hashOfConfig":"103"},{"size":540,"mtime":1660864545804,"results":"108","hashOfConfig":"103"},{"size":7285,"mtime":1698251368525,"results":"109","hashOfConfig":"103"},{"size":13425,"mtime":1699502519092,"results":"110","hashOfConfig":"103"},{"size":12321,"mtime":1701891836547,"results":"111","hashOfConfig":"103"},{"size":299,"mtime":1649217083116,"results":"112","hashOfConfig":"103"},{"size":7803,"mtime":1653083857850,"results":"113","hashOfConfig":"103"},{"size":1085,"mtime":1633934573402,"results":"114","hashOfConfig":"103"},{"size":4628,"mtime":1701807873761,"results":"115","hashOfConfig":"103"},{"size":5869,"mtime":1679102035335,"results":"116","hashOfConfig":"103"},{"size":132,"mtime":1660927342422,"results":"117","hashOfConfig":"103"},{"size":2478,"mtime":1679877906713,"results":"118","hashOfConfig":"103"},{"size":1914,"mtime":1678983266404,"results":"119","hashOfConfig":"103"},{"size":136,"mtime":1631842942144,"results":"120","hashOfConfig":"103"},{"size":270,"mtime":1631842942145,"results":"121","hashOfConfig":"103"},{"size":1152,"mtime":1679877462624,"results":"122","hashOfConfig":"103"},{"size":3601,"mtime":1679877857704,"results":"123","hashOfConfig":"103"},{"size":3479,"mtime":1696275484758,"results":"124","hashOfConfig":"103"},{"size":455,"mtime":1660872326433,"results":"125","hashOfConfig":"103"},{"size":6578,"mtime":1657429067294,"results":"126","hashOfConfig":"103"},{"size":10599,"mtime":1699502696476,"results":"127","hashOfConfig":"103"},{"size":3586,"mtime":1649704732154,"results":"128","hashOfConfig":"103"},{"size":36066,"mtime":1701805247665,"results":"129","hashOfConfig":"103"},{"size":1283,"mtime":1699502801588,"results":"130","hashOfConfig":"103"},{"size":63781,"mtime":1698435109952,"results":"131","hashOfConfig":"103"},{"size":1175,"mtime":1645495916861,"results":"132","hashOfConfig":"103"},{"size":8242,"mtime":1649217083117,"results":"133","hashOfConfig":"103"},{"size":740,"mtime":1631842942146,"results":"134","hashOfConfig":"103"},{"size":47,"mtime":1660864464967,"results":"135","hashOfConfig":"103"},{"size":1203,"mtime":1679877743140,"results":"136","hashOfConfig":"103"},{"size":764,"mtime":1678983222419,"results":"137","hashOfConfig":"103"},{"size":44,"mtime":1631842942144,"results":"138","hashOfConfig":"103"},{"size":5099,"mtime":1693615626462,"results":"139","hashOfConfig":"103"},{"size":4120,"mtime":1657428083113,"results":"140","hashOfConfig":"103"},{"size":21966,"mtime":1701887251455,"results":"141","hashOfConfig":"103"},{"size":8653,"mtime":1698430672660,"results":"142","hashOfConfig":"103"},{"size":1067,"mtime":1698341038890,"results":"143","hashOfConfig":"103"},{"size":4112,"mtime":1692766994153,"results":"144","hashOfConfig":"103"},{"size":6421,"mtime":1699643125083,"results":"145","hashOfConfig":"103"},{"size":17817,"mtime":1699502617781,"results":"146","hashOfConfig":"103"},{"size":9166,"mtime":1651355088230,"results":"147","hashOfConfig":"103"},{"size":5195,"mtime":1651354871111,"results":"148","hashOfConfig":"103"},{"size":19759,"mtime":1699502613611,"results":"149","hashOfConfig":"103"},{"size":18641,"mtime":1699502628928,"results":"150","hashOfConfig":"103"},{"size":374,"mtime":1631842942143,"results":"151","hashOfConfig":"103"},{"size":605,"mtime":1657429067301,"results":"152","hashOfConfig":"103"},{"size":4071,"mtime":1647919311472,"results":"153","hashOfConfig":"103"},{"size":1732,"mtime":1695615864380,"results":"154","hashOfConfig":"103"},{"size":6834,"mtime":1699502697840,"results":"155","hashOfConfig":"103"},{"size":1269,"mtime":1631842942143,"results":"156","hashOfConfig":"103"},{"size":507,"mtime":1645495916862,"results":"157","hashOfConfig":"103"},{"size":1022,"mtime":1699502750935,"results":"158","hashOfConfig":"103"},{"size":8798,"mtime":1695667962235,"results":"159","hashOfConfig":"103"},{"size":16363,"mtime":1696627938195,"results":"160","hashOfConfig":"103"},{"size":7328,"mtime":1661897811361,"results":"161","hashOfConfig":"103"},{"size":36540,"mtime":1695686294671,"results":"162","hashOfConfig":"103"},{"size":3925,"mtime":1690573084552,"results":"163","hashOfConfig":"103"},{"size":3435,"mtime":1657429067300,"results":"164","hashOfConfig":"103"},{"size":4458,"mtime":1657429067300,"results":"165","hashOfConfig":"103"},{"size":4495,"mtime":1657429067299,"results":"166","hashOfConfig":"103"},{"size":4564,"mtime":1657429067300,"results":"167","hashOfConfig":"103"},{"size":4318,"mtime":1657429067298,"results":"168","hashOfConfig":"103"},{"size":2623,"mtime":1657429067298,"results":"169","hashOfConfig":"103"},{"size":1919,"mtime":1657429067297,"results":"170","hashOfConfig":"103"},{"size":440,"mtime":1657429067296,"results":"171","hashOfConfig":"103"},{"size":1988,"mtime":1657429067295,"results":"172","hashOfConfig":"103"},{"size":1604,"mtime":1652811881717,"results":"173","hashOfConfig":"103"},{"size":1399,"mtime":1633935164882,"results":"174","hashOfConfig":"103"},{"size":3192,"mtime":1661375697731,"results":"175","hashOfConfig":"103"},{"size":641,"mtime":1647919311468,"results":"176","hashOfConfig":"103"},{"size":292,"mtime":1633935164878,"results":"177","hashOfConfig":"103"},{"size":2423,"mtime":1657429067296,"results":"178","hashOfConfig":"103"},{"size":2405,"mtime":1657429067296,"results":"179","hashOfConfig":"103"},{"size":184,"mtime":1633935164878,"results":"180","hashOfConfig":"103"},{"size":2787,"mtime":1633935164882,"results":"181","hashOfConfig":"103"},{"size":1062,"mtime":1633935164883,"results":"182","hashOfConfig":"103"},{"size":1794,"mtime":1633935164882,"results":"183","hashOfConfig":"103"},{"size":620,"mtime":1633935164883,"results":"184","hashOfConfig":"103"},{"size":958,"mtime":1633935164882,"results":"185","hashOfConfig":"103"},{"size":1055,"mtime":1633935164882,"results":"186","hashOfConfig":"103"},{"size":921,"mtime":1633935164883,"results":"187","hashOfConfig":"103"},{"size":525,"mtime":1652819440550,"results":"188","hashOfConfig":"103"},{"size":1391,"mtime":1633935164880,"results":"189","hashOfConfig":"103"},{"size":2998,"mtime":1653426942973,"results":"190","hashOfConfig":"103"},{"size":154,"mtime":1633935164879,"results":"191","hashOfConfig":"103"},{"size":892,"mtime":1633935164882,"results":"192","hashOfConfig":"103"},{"size":341,"mtime":1633935164883,"results":"193","hashOfConfig":"103"},{"size":438,"mtime":1647919311467,"results":"194","hashOfConfig":"103"},{"size":741,"mtime":1653371726038,"results":"195","hashOfConfig":"103"},{"size":224,"mtime":1633935164880,"results":"196","hashOfConfig":"103"},{"size":2973,"mtime":1699502555679,"results":"197","hashOfConfig":"103"},{"size":744,"mtime":1653372807669,"results":"198","hashOfConfig":"103"},{"size":858,"mtime":1653372899291,"results":"199","hashOfConfig":"103"},{"size":822,"mtime":1653372882682,"results":"200","hashOfConfig":"103"},{"size":953,"mtime":1653420972857,"results":"201","hashOfConfig":"103"},{"size":981,"mtime":1653372924124,"results":"202","hashOfConfig":"103"},{"size":3188,"mtime":1699502769882,"results":"203","hashOfConfig":"103"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},"1d44g3n",{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"206"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"206"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"206"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"206"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"206"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"206"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"206"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"206"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"206"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"206"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"206"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"206"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"206"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"206"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"206"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"206"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"206"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"306","usedDeprecatedRules":"206"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"206"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"206"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"206"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"206"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"206"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"206"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"206"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"206"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"206"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"206"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"206"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"206"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"206"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"206"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"206"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"206"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"206"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"206"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"206"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"206"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"206"},"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/index.js",[],["446","447"],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/store.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/App/index.js",["448"],"import { useEffect, useState } from \"react\";\nimport \"./index.css\";\nimport HeaderBarContainer from \"../HeaderBar\";\nimport ControlBar from \"../ControlBar\";\nimport RegisteredTeiList from \"../RegisteredTeiList\";\nimport SearchForm from \"../Search\";\nimport Administration from \"../Administration\";\nimport Form from \"../Form\";\nimport Export from \"../Export\";\nimport Dashboard from \"../Dashboard\";\nimport Translation from \"../Translation\";\nimport { Hooks, Components } from \"tracker-capture-app-core\";\nimport { InitTranslation } from \"../../locale/i18n\";\n\n/* REDUX */\nimport { connect } from \"react-redux\";\nimport {\n  setTrackerDataElements,\n  setProgramMetadata,\n  setTeas,\n  setUsers,\n  setOrgUnitGroups,\n  setOrgUnitLevels,\n  setOrgUnits,\n  getICD11Options,\n  getTrackedEntityTypes,\n  setUserGroups,\n  setFormMapping,\n  setCertificateTemplate,\n  setFemaleCode,\n  setFullnameOption,\n  setUILocale,\n  setIcdApiToken\n} from \"../../redux/actions/metadata\";\nimport {\n  setFemaleOption,\n  changeCerticateTemplate,\n  setCertificateLogo,\n} from \"../../redux/actions/admin\";\nimport { setUserRole } from \"../../redux/actions/user\";\nimport { changeRoute } from \"../../redux/actions/route\";\nimport localeFile from \"../../locale/locale\";\n/*       */\n\n\nconst { useApi } = Hooks;\nconst { LoadingMask } = Components;\n\nconst App = ({\n  route,\n  setProgramMetadata,\n  setTeas,\n  setTrackerDataElements,\n  setUsers,\n  setOrgUnitGroups,\n  setOrgUnitLevels,\n  setOrgUnits,\n  getICD11Options,\n  getTrackedEntityTypes,\n  setUserGroups,\n  // setFemaleOption,\n  // changeCerticateTemplate,\n  setCertificateLogo,\n  setFormMapping,\n  setCertificateTemplate,\n  setFemaleCode,\n  setFullnameOption,\n  setUserRole,\n  changeRoute,\n  setUILocale,\n  setIcdApiToken\n}) => {\n  const { metadataApi } = useApi();\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    (async () => {\n      /** FOR TRANSLATION */\n      let translationData = await metadataApi.get(\"/api/dataStore/WHO_ICD11_COD/translation\");\n      console.log(\"init translation DataStore\");\n      if (translationData.status) {\n        let array = [];\n        let arrayLanguages = [\n          {\n            label: \"English\",\n            key: \"en\",\n          },\n        ];\n        Object.entries(localeFile.en.translation).forEach((value) => {\n          let object = {\n            key: value[0],\n            translation: { en: value[1] },\n          };\n          array.push(object);\n        });\n        await metadataApi.push(\"/api/dataStore/WHO_ICD11_COD/translation\", {\n          translations: array,\n          languages: arrayLanguages,\n        });\n        translationData = {\n          translations: array,\n          languages: arrayLanguages,\n        }\n      }\n      else{\n        Object.entries(localeFile.en.translation).forEach((value) => {\n          let findKey = translationData.translations.find(e=>e.key === value[0]);\n          if(!findKey){\n            let object = {\n              key: value[0],\n              translation: { en: value[1] },\n            };\n            translationData.translations.push(object);\n          }else{\n            findKey.translation.en = value[1]\n          }\n        })\n        await metadataApi.push(\"/api/dataStore/WHO_ICD11_COD/translation\", {\n          translations: translationData.translations,\n          languages: translationData.languages,\n        },\"PUT\");\n      }\n\n\n\n      Promise.all([\n        metadataApi.get(\"/api/dataStore/WHO_ICD11_COD/program\"),\n        metadataApi.getOrgUnitGroups(),\n        metadataApi.getOrgUnitLevels(),\n        metadataApi.get(\n          \"/api/trackedEntityAttributes.json\",\n          { paging: false },\n          [\"fields=id,displayName,valueType,optionSet,formName\"]\n        ),\n        metadataApi.getTrackerDataElements(),\n        metadataApi.get(\"/api/users.json\", { paging: false }, [\n          \"fields=id,displayName,organisationUnits~size\",\n        ]),\n        metadataApi.get(\"/api/organisationUnits.json\", { paging: false }, [\n          \"fields=id,displayName,path,level\",\n        ]),\n        metadataApi.get(\"/api/trackedEntityTypes.json\", { paging: false }, [\n          \"fields=id,displayName\",\n        ]),\n        metadataApi.get(\"/api/userGroups.json\", { paging: false }, [\n          \"fields=id,displayName\",\n        ]),\n        metadataApi.getMe()\n      ]).then( async (results) => {\n\n        await InitTranslation(translationData,results[9].settings.keyUiLocale);\n        setUILocale(results[9].settings.keyUiLocale)\n\n        // for admin module\n        setOrgUnitGroups(results[1].organisationUnitGroups);\n        setOrgUnitLevels(results[2].organisationUnitLevels);\n        setTeas(results[3].trackedEntityAttributes);\n        setTrackerDataElements(results[4].dataElements);\n        setUsers(results[5].users);\n        setOrgUnits(results[6].organisationUnits);\n        getTrackedEntityTypes(results[7].trackedEntityTypes);\n        setUserGroups(results[8].userGroups);\n\n        // for entry module\n        if (results[0].status) {\n          metadataApi.push(\"/api/dataStore/WHO_ICD11_COD/program\", {\n            id: null,\n          });\n          metadataApi.push(\"/api/dataStore/WHO_ICD11_COD/icdOptionSet\", {\n            id: null,\n          });\n          metadataApi.push(\"/api/dataStore/WHO_ICD11_COD/femaleOption\", {\n            code: null,\n          });\n          metadataApi.push(\"/api/dataStore/WHO_ICD11_COD/fullnameOption\", {\n            fullnameOption: false,\n          });\n          metadataApi.push(\"/api/dataStore/WHO_ICD11_COD/certificateTemplate\", {\n            certificate: null,\n          });\n          metadataApi.push(\"/api/dataStore/WHO_ICD11_COD/formMapping\", {\n            formMapping: null,\n          });\n          metadataApi.push(\"/api/dataStore/WHO_ICD11_COD/fullnameOption\", {\n            fullnameOption: false,\n          });\n          changeRoute(\"administration\");\n          setLoading(false);\n        } else {\n          if (results[0].id !== null) {\n            Promise.all([\n              metadataApi.getProgramMetadata(results[0].id),\n              metadataApi.get(\"/api/dataStore/WHO_ICD11_COD/femaleOption\"),\n              metadataApi.get(\"/api/dataStore/WHO_ICD11_COD/icdOptionSet\"),\n              metadataApi.get(\n                \"/api/dataStore/WHO_ICD11_COD/certificateTemplate\"\n              ),\n              metadataApi.get(\"/api/dataStore/WHO_ICD11_COD/formMapping\"),\n              metadataApi.get(\"/api/dataStore/WHO_ICD11_COD/fullnameOption\"),\n            ]).then( async (res) => {\n              // Set userRoles\n              let roles = {\n                admin: false,\n                data: false,\n                view: false\n              };\n              results[9].userGroups.forEach( userGroup => {\n                const role = res[0].userGroupAccesses.find( ({id}) => id === userGroup.id );\n                if ( role ) {\n                  if ( role.access.charAt(1) === 'w' ) {\n                    roles = {\n                      ...roles,\n                      admin: true\n                    }\n                  }\n                  if ( role.access.charAt(3) === 'w' ) {\n                    roles = {\n                      ...roles,\n                      data: true\n                    }\n                  }\n                  if ( role.access.charAt(0) === 'r' && role.access.charAt(2) === 'r'  ) {\n                    roles = {\n                      ...roles,\n                      view: true\n                    }\n                  }\n                }\n              });\n              setUserRole(roles);\n\n\n              // Set other states\n              setProgramMetadata(res[0]);\n              setFemaleCode(res[1].code);\n              setFullnameOption(res[5].fullnameOption);\n              if (res[3].certificate !== null) setCertificateTemplate(res[3].certificate);\n              setFormMapping(res[4]);\n              changeRoute(\"list\");\n\n              await metadataApi.get(\"/api/options.json\", { paging: false }, [\n                \"fields=id,name,code,attributeValues[value,attribute[id]]\",\n                \"filter=optionSet.id:eq:\" + res[2].id,\n              ])\n              .then(({ options }) => {\n                getICD11Options(options);\n              });\n              \n\n              // Get Token for ICD11 API\n              await fetch(\"https://dhis2.world/services/icd11\", {\n                method: \"POST\"\n              })\n              .then(response => response.json())\n              .then(result => {\n                setIcdApiToken(result.token);\n              })\n              .catch(error => console.log('error', error));\n\n              setLoading(false);\n\n            });\n          } else {\n            changeRoute(\"administration\");\n            setLoading(false);\n          }\n        }\n      });\n    })();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"header-bar-container\">\n        <HeaderBarContainer />\n      </div>\n      {loading ? (\n        <LoadingMask />\n      ) : (\n        <div className=\"app-content\">\n          {!loading && <ControlBar />}\n          {route === \"list\" && <RegisteredTeiList />}\n          {route === \"search\" && <SearchForm />}\n          {route === \"form\" && <Form />}\n          {route === \"administration\" && <Administration />}\n          {route === \"export\" && <Export />}\n          {route === \"dashboard\" && <Dashboard />}\n          {route === \"translation\" && <Translation />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    route: state.route,\n  };\n};\n\nconst mapDispatchToProps = {\n  changeRoute,\n  setUserRole,\n\n  // for admin module\n  setTeas,\n  setTrackerDataElements,\n  setUsers,\n  setUserGroups,\n  setOrgUnitGroups,\n  setOrgUnitLevels,\n  setOrgUnits,\n  getTrackedEntityTypes,\n\n  // for entry module\n  setProgramMetadata,\n  getICD11Options,\n  setFemaleOption,\n  changeCerticateTemplate,\n  setCertificateLogo,\n  setFormMapping,\n  setCertificateTemplate,\n  setFemaleCode,\n  setFullnameOption,\n  setUILocale,\n  setIcdApiToken\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/locale/i18n.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/locale/locale.js",["449"],"const resources = {\n  en: {\n    translation: {\n      selectOrgUnit: \"Select organisation unit\",\n      newRegistration: \"New Registration\",\n      search: \"Search\",\n      exit: \"Exit\",\n      page: \"Page\",\n      profile: \"Profile\",\n      save: \"Save\",\n      cancel: \"Cancel\",\n      certificate: \"Certificate\",\n      causeOfDeath: \"Cause of Death\",\n      frameA: \"Frame A\",\n      frameB: \"Frame B\",\n      medicalData: \"Medical data\",\n      results: \"Results\",\n      surgery: \"Surgery\",\n      mannerOfDeath: \"Manner of Death\",\n      fetalOrInfantDeath: \"Fetal of Infant Death\",\n      pleaseSelectYear: \"Please select year\",\n      run: \"RUN\",\n      anacodExportExcel: \"Anacod Export (Excel)\",\n      mortalityLevels: \"Mortality levels\",\n      mortalityFromBroadCausesOfDeath: \"Mortality from broad causes of death\",\n      mortalityByCauseAgeAndSex: \"Mortality by cause, age and sex\",\n      mortalityFromNcds: \"Mortality from NCDs\",\n      mostFrequentCauseOfDeath: \"Most frequent cause of death\",\n      deathsByIcd11Chapter: \"Deaths by ICD-11 Chapter\",\n      attributes: \"Attributes\",\n      next: \"Next\",\n      defaultAttributes: \"Default attributes\",\n      femaleOption: \"Female option\",\n      item: \"Item\",\n      availableAttributes: \"Available attributes\",\n      selectedAttributes: \"Selected attributes\",\n      add: \"Add\",\n      reload: \"Reload\",\n      translation: \"Translation\",\n      dataEntry: \"Data Entry\",\n      anacodExport: \"Anacod Export\",\n      dashboard: \"Dashboard\",\n      administration: \"Administration\",\n      exitApp: \"Exit App\",\n      orgUnit: \"Org Unit\",\n      addLanguage: \"Add Language\",\n      pleaseSelectLanguage: \"Please select a language\",\n      lastUpdated: \"Last updated\",\n      causeOfDeathApp: \"Cause Of Death App\",\n      inputSearchText: \"Input search text\",\n      select: \"Select\",\n      triggerDesc: \"Click to sort descending\",\n      triggerAsc: \"Click to sort ascending\",\n      cancelSort: \"Click to cancel sorting\",\n      // Administration\n      step1Installation: \"1 - Installation\",\n      step2Attribute: \"2 - Attributes\",\n      step3FrameA: \"3 - Frame A\",\n      step4FrameB: \"4 - Frame B\",\n      step5OUs: \"5 - Assign OrgUnits\",\n      step6Users: \"6 - Assign Users\",\n      step7Review: \"7 - Review & Finish\",\n      errorMissingTET:\n        \"ERROR Please select ALL default attributes and Tracked Entity Type.\",\n      step1Attributes: \"1 - Attributes\",\n      step2Certificate: \"2 - Certificate\",\n      saveSuccessful: \"Successfully Save!\",\n      selectionTitle: \"INSTALLATION OF WHO MCCD PACKAGE\",\n      globalICDTool: \"Use global WHO ICD Tool url\",\n      otherICDTool: \"Use other ICD Tool url\",\n      defaultInstallation: \"Default Installation\",\n      defaultInstallationInfo:\n        \"Use default MCCOD program with minimum configurations\",\n      customInstallation: \"Custom Installation\",\n      customInstallationInfo:\n        \"Use default MCCOD program with additional metadata as you need\",\n      installWithDocker: \"How to install ICD-11 API Server using Docker:\",\n      installationWarning: \"COD app could not start the installation process.\",\n      installationWarningTitle:\n        \"The app setup requires Organisation Units and assigned Users. Please check whether they created.\",\n      backToMaintenance: \"Go to Maintenance app\",\n      trackedEntityType: \"Tracked Entity Type\",\n      systemID: \"COD System ID (auto-generated)\",\n      defaultAttribute: \"Default attributes\",\n      otherAttributes: \"Other attributes\",\n      otherAvailableAttributes: \"Available attributes\",\n      otherSelectedAttributes: \"Selected attributes\",\n      defaultDEsInFrameA: \"Default data elements (cannot be changed)\",\n      otherSectionsInFrameA: \"Other sections\",\n      availableDEs: \"Available data elements\",\n      selectedDEs: \"Selected data elements\",\n      defaultSectionsInFrameB: \"Default sections\",\n      otherSectionsInFrameB: \"Other sections\",\n      OULevel: \"Organisation unit level:\",\n      OUGroup: \"Organisation unit group:\",\n      deselect: \"Deselect\",\n      selectAll: \"Select all\",\n      deselectAll: \"Deselect all\",\n      adminGroup: \"ADMIN GROUP\",\n      captureGroup: \"CAPTURE GROUP\",\n      viewGroup: \"VIEW GROUP\",\n      installing: \"Installing the COD app\",\n      waitForInstalling: \"Please wait untill the process done.\",\n      importAttributes: \"Importing Attributes\",\n      importOptionSets: \"Importing Option Sets\",\n      importTrackedEntityAttributes: \"Importing Tracked Entity Attributes\",\n      importTrackedEntityTypes: \"Importing Tracked Entity Types\",\n      importDataElements: \"Importing Data Elements\",\n      importPrograms: \"Importing Programs\",\n      importProgramStages: \"Importing Program Stages\",\n      importProgramStageSections: \"Importing Program Stage Sections\",\n      importProgramIndicators: \"Importing Program Indicators\",\n      importIndicators: \"Importing Indicators\",\n      importOptions: \"Importing Options\",\n      complete: \"Install Complete\",\n      programID: \"The program id:\",\n      defaultCertificate: \"Default\",\n      customCertificate: \"Custom\",\n      certificateTitle: \"Title\",\n      certificateLogo: \"Logo\",\n      upload: \"Upload\",\n      addItemBody: \"Add an item to Body\",\n      addItemFooter: \"Add an item to Footer\",\n      reviewDefaultCertificate: \"Review\",\n      certificateAddItemTitle: \"Add an item to\",\n      back: \"Back\",\n      install: \"Install\",\n      selectName: \"Section name\",\n      selectNameOption: \"* Select Name Option\",\n      selectTrackedEntityType: \"Select tracked entity type\",\n      femaleOption: \"* Female Option\",\n      selectOption: \"Select option\",\n      selectAttribute: \"Select attribute\",\n      noname: \"No Name\",\n      fullname: \"Fullname\",\n      firstlastname: \"First & Last Name\",\n      firstmiddlelastname: \"First, Middle & Last Name\",\n      firstname: \"First Name\",\n      middlename: \"Middle Name\",\n      lastname: \"Last Name\",\n      // Entry Form\n      print: \"Print\",\n      close: \"Close\",\n      reportedDate: \"Reported Date\",\n      incidentDate: \"Date of Death\",\n      printCertificate: \"Certificate\",\n      reasonLeadingToDeath: \"Disease or condition directly leading to death\",\n      timeFromOnsetToDeath: \"Time from onset to death\",\n      underlying: \"Underlying\",\n      immediate: \"Immediate\",\n      reportDirection:\n        \"Report chain of events in 'due to' order (B - C - D) if applicable. State the underlying cause on the lowest used line, and tick the checkbox for 'Underlying'\",\n      dueTo: \"Due to\",\n      otherReasonLeadingToDeath:\n        \"Other significant conditions contributing to death (time intervals can be included in brackets after the condition)\",\n      underlyingCOD: \"Underlying cause of death\",\n      icd11Chapter: \"ICD-11 Chapter\",\n      icd11Grouping: \"ICD-11 Grouping\",\n      icd10: \"ICD-10\",\n      icd11: \"ICD-11\",\n      surgeryWithin4months: \"Was surgery performed within the last 4 weeks?\",\n      surgeryDate: \"If yes, please specify date of surgery\",\n      surgeryReason:\n        \"If yes, please specify reason for surgery (disease or condition)\",\n      autopsy: \"Was an autopsy requested?\",\n      findings: \"If yes, were the findings used in the certification?\",\n      posisoning: \"If external cause or posisoning, date of injury\",\n      describe:\n        \"Please describe how external cause occurred (if poisoning, please specify poisoning agent)\",\n      occurrencePlace: \"Place of occurrence of the external cause\",\n      occurrenceSpecifyPlace:\n        \"Specify place of occurence of the external cause\",\n      pregnant: \"Multiple pregnancy?\",\n      stillborn: \"Stillborn?\",\n      hoursSurvived: \"If death within 24hrs specify number of hours survived\",\n      birthWeight: \"Birth weight (in grams)\",\n      pregnantWeeks: \"Number of completed weeks of pregnancy\",\n      motherAge: \"Age of mother (in years)\",\n      perinatal:\n        \"If death was perinatal, state conditions of mother that affected the fetus and newborn\",\n      maternal: \"Maternal death\",\n      pregnancyLastYear:\n        \"For women, was the deceased pregnant within the past year?\",\n      timePregnancy: \"If yes, time from pregnancy\",\n      pregnancyToDeath: \"Did the pregnancy contribute to the death?\",\n      warning: \"Warning!!!\",\n      clear: \"Clear\",\n      stay: \"Stay\",\n      leave: \"Leave\",\n      compute: \"Compute\",\n      changes_you_made_may_not_be_saved: \"Changes you made may not be saved.\",\n      note_WHO_digital_open_rule_integrated_cause_of_death_selection_Doris: \"* Note: WHO Digital Open Rule Integrated cause of death Selection (DORIS)\",\n      icd11_tool: \"ICD 11 Coding Tool\",\n      your_selection: \"Your selection is:\",\n      type_to_start_searching: \"Type for start searching\",\n      // Dashboard\n      mortalityFromBoardCausesOfDeath: \"Mortality from broad causes of death\",\n      proportionOfDeathFromBroadCausesAll:\n        \"Proportion of deaths from broad causes (all sexes, all ages)\",\n      distributionOfDeathByBroadCausesAndAgeGroups:\n        \"Distribution of deaths by broad causes and age groups\",\n      overViewDistributionOfDeath:\n        \"Overview of the distribution of causes of total deaths grouped by category\",\n      clickOnBubleForDetail: \"Click on each buble for details\",\n      communicable: \"communicable\",\n      nonCommunicable: \"non-communicable\",\n      externalCauses: \"external causes\",\n      illDefined: \"ill-defined\",\n      numberOfDeathBy: \"Number of Death by\",\n      tuberculosis: \"Tuberculosis\",\n      sexuallyTransmittedDiseasesExcludingHiv:\n        \"Sexually transmitted diseases excluding HIV\",\n      hiv: \"HIV\",\n      diarrhoealDiseases: \"Diarrhoeal diseases\",\n      pertussis: \"Pertussis\",\n      poliomyelitis: \"Poliomyelitis\",\n      diphtheria: \"Diphtheria\",\n      measles: \"Measles\",\n      tetanus: \"Tetanus\",\n      meningitis: \"Meningitis\",\n      hepatitisB: \"Hepatitis B\",\n      hepatitisC: \"Hepatitis C\",\n      malaria: \"Malaria\",\n      tropicalClusterDiseases: \"Tropical-cluster diseases\",\n      lowerRespiratoryInfections: \"Lower respiratory infections\",\n      maternalConditions: \"Maternal conditions\",\n      conditionsArisingDuringThePerinatalPeriod:\n        \"Conditions arising during the perinatal period\",\n      nutritionalDeficiencies: \"Nutritional deficiencies\",\n      mouthAndOropharynxCancers: \"Mouth and oropharynx cancers\",\n      oesophagusCancer: \"Oesophagus cancer\",\n      stomachCancer: \"Stomach cancer\",\n      colonAndRectumCancers: \"Colon and rectum cancers\",\n      liverCancer: \"Liver cancer\",\n      pancreasCancer: \"Pancreas cancer\",\n      tracheaBronchusAndLungCancers: \"Trachea, bronchus and lung cancers\",\n      melanomaAndOtherSkinCancers: \"Melanoma and other skin cancers\",\n      breastCancer: \"Breast cancer\",\n      cervixUteriCancer: \"Cervix uteri cancer\",\n      corpusUteriCancer: \"Corpus uteri cancer\",\n      ovaryCancer: \"Ovary cancer\",\n      prostateCancer: \"Prostate cancer\",\n      bladderCancer: \"Bladder cancer\",\n      lymphomasAndMultipleMyeloma: \"Lymphomas and multiple myeloma\",\n      leukaemia: \"Leukaemia\",\n      alzheimerAndOtherDementias: \"Alzheimer and other dementias\",\n      parkinsonDisease: \"Parkinson disease\",\n      hypertensiveDisease: \"Hypertensive disease\",\n      ischaemicHeartDisease: \"Ischaemic heart disease\",\n      cerebrovascularDisease: \"Cerebrovascular disease\",\n      chronicObstructivePulmonaryDisease:\n        \"Chronic obstructive pulmonary disease\",\n      asthma: \"Asthma\",\n      digestiveDiseases: \"Digestive diseases\",\n      genitoUrinaryDiseases: \"Genito-urinary diseases\",\n      congenitalAnomalies: \"Congenital anomalies\",\n      roadTrafficAccidents: \"Road traffic accidents\",\n      suicide: \"Suicide\",\n      homicide: \"Homicide\",\n      mortaliryFromNcds: \"Mortality from NCDs\",\n      malignantNeoplasms: \"Malignant neoplasms\",\n      diabetesMellitus: \"Diabetes mellitus\",\n      cardiovascularDiseases: \"Cardiovascular diseases\",\n      respiratoryDiseases: \"Respiratory diseases\",\n      numberOfDeathBySexAndAge: \"Number of deaths by sex and age\",\n      numberOfDeathByMonth: \"Number of deaths by month\",\n      pneumonia: \"Pneumonia\",\n      otherDiseasesOfTheDigestiveSystem:\n        \"Other diseases of the digestive system\",\n      otherDirectObstetricDeaths: \"Other direct obstetric deaths\",\n      prematurity: \"Prematurity\",\n      symptomsSignAndAbnormalClinicalAndLaboratoryFindingsNotElsewhereClassified:\n        \"Symptoms sign and abnormal clinical and laboratory findings, not elsewhere classified\",\n      otherAndUnspecifiedCongenitalMalformations:\n        \"Other and unspecified congenital malformations\",\n      otherAndUnspecifiedPerinatalConditions:\n        \"Other and unspecified perinatal conditions\",\n      intrauterineHypoxiaAndBirthAsphyxia:\n        \"Intrauterine hypoxia and birth asphyxia\",\n      name: \"Name\",\n      points: \"Points\",\n      certainInfectiousOrParasiticDiseases:\n        \"Certain infectious or parasitic diseases\",\n      neoplasms: \"Neoplasms\",\n      diseasesOfTheBloodOrBloodFormingOrgans:\n        \"Diseases of the blood or blood-forming organs\",\n      diseasesOfTheImmuneSystem: \"Diseases of the immune system\",\n      endocrineNutritionalOrMetabolicDiseases:\n        \"Endocrine, nutritional or metabolic diseases\",\n      mentalBehaviouralOrNeurodevelopmentalDisorders:\n        \"Mental, behavioural or neurodevelopmental disorders\",\n      sleepWakeDisorders: \"Sleep-wake disorders\",\n      diseasesOfTheNervousSystem: \"Diseases of the nervous system\",\n      diseasesOfTheVisualSystem: \"Diseases of the visual system\",\n      diseasesOfTheEarOrMastoidProcess:\n        \"Diseases of the ear or mastoid process\",\n      diseasesOfTheCirculatorySystem: \"Diseases of the circulatory system\",\n      diseasesOfTheRespiratorySystem: \"Diseases of the respiratory system\",\n      diseasesOfTheDigestiveSystem: \"Diseases of the digestive system\",\n      diseasesOfTheSkin: \"Diseases of the skin\",\n      diseasesOfTheMusculoskeletalSystemOrConnectiveTissue:\n        \"Diseases of the musculoskeletal system or connective tissue\",\n      diseasesOfTheGenitourinarySystem: \"Diseases of the genitourinary system\",\n      conditionsRelatedToSexualHealth: \"Conditions related to sexual health\",\n      pregnancyChildbirthOrThePuerperium:\n        \"Pregnancy, childbirth or the puerperium\",\n      certainConditionsOriginatingInThePerinatalPeriod:\n        \"Certain conditions originating in the perinatal period\",\n      developmentalAnomalies: \"Developmental anomalies\",\n      symptomsSignsOrClinicalFindingsNotElsewhereClassified:\n        \"Symptoms, signs or clinical findings, not elsewhere classified\",\n      injuryPoisoningOrCertainOtherConsequencesOfExternalCauses:\n        \"Injury, poisoning or certain other consequences of external causes\",\n      externalCausesOfMorbidityOrMortality:\n        \"External causes of morbidity or mortality\",\n      factorsInfluencingHealthStatusOrContactWithHealthServices:\n        \"Factors influencing health status or contact with health services\",\n      codesForSpecialPurposes: \"Codes for special purposes\",\n      numberOfMalariaDeathsByMonth: \"Number of malaria deaths by month\",\n      numberOfMalariaDeathsPlaceOfDeath:\n        \"Number of malaria deaths - place of death\",\n      numberOfMalariaDeathsBySex: \"Number of malaria deaths by sex\",\n      numberOfMalariaDeathsBySexAndDetailedAgeGroup:\n        \"Number of malaria deaths by sex and detailed age-group\",\n      numberOfMalariaDeathsAndPercentOfAllMalariaDeathsByBroadAgeGroup:\n        \"Number of malaria deaths and percent of all malaria deaths by broad age-group\",\n      numberOfMalariaDeathsComparedWithOtherCausesOfDeaths:\n        \"Number of malaria deaths compared with other causes of deaths\",\n      percentOfTotalMalariaDeaths: \"% of total malaria deaths\",\n      numberOfMalariaDeaths: \"Number of malaria deaths\",\n      otherCauses: \"Other causes\",\n      numberOfTuberculosisDeathsByMonth:\n        \"Number of tuberculosis deaths by month\",\n      numberOfTuberculosisDeathsByPlaceOfDeath:\n        \"Number of tuberculosis deaths by place of death\",\n      numberOfTuberculosisDeathsBySex: \"Number of tuberculosis deaths by sex\",\n      numberOfTuberculosisDeathsBySexAndDetailedAgeGroup:\n        \"Number of tuberculosis deaths by sex and detailed age-group\",\n      numberOfTuberculosisDeathsAndPercentOfAllTuberculosisDeathsByBroadAgeGroup:\n        \"Number of tuberculosis deaths and percent of all tuberculosis deaths by broad age-group\",\n      numberOfTuberculosisDeathsComparedWithOtherCausesOfDeaths:\n        \"Number of tuberculosis deaths compared with other causes of deaths\",\n      percentOfTotalTuberculosisDeaths: \"% of total tuberculosis deaths\",\n      numberOfTuberculosisDeaths: \"Number of tuberculosis deaths\",\n      numberOfAidsDeathsByMonth: \"Number of AIDS deaths by month\",\n      numberOfAidsDeathsPlaceOfDeath: \"Number of AIDS deaths - place of death\",\n      numberOfAidsDeathsBySex: \"Number of AIDS deaths by sex\",\n      numberOfAidsDeathsBySexAndDetailedAgeGroup:\n        \"Number of AIDS deaths by sex and detailed age-group\",\n      numberOfAidsDeathsAndPercentOfAllAidsDeathsByBroadAgeGroup:\n        \"Number of AIDS deaths and percent of all AIDS deaths by broad age-group\",\n      numberOfAidsDeathsComparedWithOtherCausesOfDeaths:\n        \"Number of AIDS deaths compared with other causes of deaths\",\n      aids: \"AIDS\",\n      percentOfTotalAidsDeaths: \"% of total AIDS deaths\",\n      numberOfAidsDeaths: \"Number of AIDS deaths\",\n      tb: \"TB\",\n      other: \"Other\",\n      numberOfDeath: \"% of Deaths\",\n      percentOfTotalDeathAllCauses: \"% of total deaths all causes\",\n      numberOfDeathsFromTbAidsMalariaAndOtherCausesAgeGroup:\n        \"Number of deaths from TB, AIDS, malaria and other causes - age-group\",\n      distributionOfDeathsByTbAidsAndMalariaBySexAndAge:\n        \"Distribution of deaths by TB, AIDS and malaria by sex and age\",\n      percentageOfDeathsFromTbAidsAndMalariaOutOfAllDeathsFromCommunicableDiseases:\n        \"Percentage of deaths from TB, AIDS and malaria out of all deaths from communicable diseases\",\n      numberOfTbAndAidsDeathsAndPercentOfTheseDeathsOutOfAllDeaths15YearsAndAbove:\n        \"Number of TB and AIDS deaths  and percent of these  deaths out of all deaths: 15 years and above\",\n      //Search\n      list: \"List\",\n      uniqueField: \"Unique Field\",\n      searchableFields: \"Searchable fields\",\n      //Help\n      help: \"Help\",\n      userManual: \"User Manual\",\n      causeOfDeathVersion: \"Cause of Death App (version 1.0.1)\",\n      appFeatures: \"App features\",\n      installation: \"Installation\",\n    },\n  },\n};\nexport default resources;\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/reducers/index.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Search/index.js",["450","451","452"],"import { useState, useEffect } from \"react\";\nimport { Hooks } from \"tracker-capture-app-core\";\nimport { Card, Form, Input, DatePicker, Button, Divider } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport SeartResult from \"./Result\";\nimport \"./index.css\";\nimport { useTranslation } from \"react-i18next\";\n\nconst { useApi } = Hooks;\n\nconst SearchForm = ({ metadata }) => {\n  const { dataApi } = useApi();\n  const { programMetadata } = metadata;\n  const { t } = useTranslation();\n\n  const [searches, setSearches] = useState(\n    programMetadata.trackedEntityAttributes\n      .filter(({ searchable }) => searchable)\n      .map(({ id }) => ({\n        id,\n        value: \"\",\n      }))\n      .reduce(\n        (pre, cur) => ({\n          ...pre,\n          [cur.id]: \"\",\n        }),\n        {}\n      )\n  );\n  const [filters, setFilters] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [data, setData] = useState({\n    pager: {\n      current: 1,\n      pageSize: 10,\n      total: 0,\n    },\n    trackedEntityInstances: [],\n  });\n\n  useEffect(async () => {\n    const teis = await dataApi.searchTei(\n      programMetadata.id,\n      filters,\n      data.pager.pageSize,\n      data.pager.current\n    );\n    setData({\n      trackedEntityInstances: teis.trackedEntityInstances,\n      pager: {\n        current: teis.pager.page,\n        pageSize: teis.pager.pageSize,\n        total: teis.pager.total,\n      },\n    });\n\n    if (filters.length > 0) setOpen(true);\n  }, [filters]);\n\n  const onSearch = (uniqueKeyId) => {\n    if (uniqueKeyId) {\n      setFilters([\n        {\n          attribute: uniqueKeyId,\n          value: searches[uniqueKeyId],\n        },\n      ]);\n    } else {\n      setFilters(\n        programMetadata.trackedEntityAttributes\n          .filter(\n            ({ id, searchable, unique }) =>\n              searchable && !unique && searches[id] !== \"\"\n          )\n          .map(({ id }) => ({\n            attribute: id,\n            value: searches[id],\n          }))\n      );\n    }\n  };\n\n  const handleCloseResult = () => {\n    setOpen(false);\n  };\n\n  const handleChangeCurrentPage = async (page) => {\n    const teis = await dataApi.searchTei(\n      programMetadata.id,\n      filters,\n      data.pager.pageSize,\n      page\n    );\n\n    setData({\n      trackedEntityInstances: teis.trackedEntityInstances,\n      pager: {\n        current: teis.pager.page,\n        pageSize: teis.pager.pageSize,\n        total: teis.pager.total,\n      },\n    });\n  };\n\n  return (\n    <div className=\"search-wrapper\">\n      <SeartResult\n        open={open}\n        handleCancel={handleCloseResult}\n        data={data}\n        handleChangePage={handleChangeCurrentPage}\n      />\n      <div className=\"search-container\">\n        <div className=\"search-content-container\">\n          <div className=\"search-form-container\">\n            <div className=\"search-form\">\n              <Card>\n                <Divider orientation=\"left\">{t(\"uniqueField\")}</Divider>\n                <Form\n                  name=\"basic\"\n                  labelCol={{\n                    span: 4,\n                  }}\n                  wrapperCol={{\n                    span: 20,\n                  }}\n                  initialValues={{\n                    remember: true,\n                  }}\n                >\n                  {programMetadata.trackedEntityAttributes\n                    .filter(({ unique }) => unique)\n                    .map((tea) => (\n                      <>\n                        <Form.Item\n                          label={`${tea.displayFormName}:`}\n                          name={tea.displayName}\n                        >\n                          <Input\n                            onChange={(e) => {\n                              setSearches({\n                                ...searches,\n                                [tea.id]: e.target.value,\n                              });\n                            }}\n                          />\n                        </Form.Item>\n                        <Form.Item\n                          wrapperCol={{\n                            offset: 4,\n                            span: 20,\n                          }}\n                        >\n                          <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            icon={<SearchOutlined />}\n                            onClick={() => onSearch(tea.id)}\n                          >\n                            {t(\"search\")}\n                          </Button>\n                        </Form.Item>\n                      </>\n                    ))}\n                </Form>\n              </Card>\n            </div>\n            <div className=\"search-form\">\n              <Card>\n                <Divider orientation=\"left\">{t(\"searchableFields\")}</Divider>\n                <Form\n                  name=\"basic\"\n                  labelCol={{\n                    span: 4,\n                  }}\n                  wrapperCol={{\n                    span: 20,\n                  }}\n                  initialValues={{\n                    remember: true,\n                  }}\n                >\n                  {programMetadata.trackedEntityAttributes\n                    .filter(({ searchable, unique }) => searchable && !unique)\n                    .map((tea) => {\n                      const value = searches[tea.id];\n                      return (\n                        <Form.Item\n                          label={`${tea.displayFormName}:`}\n                          name={tea.displayName}\n                        >\n                          {tea.valueType === \"DATE\" ? (\n                            <DatePicker\n                              onChange={(date, dateString) => {\n                                setSearches({\n                                  ...searches,\n                                  [tea.id]: dateString,\n                                });\n                              }}\n                            />\n                          ) : (\n                            <Input\n                              onChange={(e) => {\n                                setSearches({\n                                  ...searches,\n                                  [tea.id]: e.target.value,\n                                });\n                              }}\n                            />\n                          )}\n                        </Form.Item>\n                      );\n                    })}\n                  <Form.Item\n                    wrapperCol={{\n                      offset: 4,\n                      span: 20,\n                    }}\n                  >\n                    <Button\n                      type=\"primary\"\n                      htmlType=\"submit\"\n                      icon={<SearchOutlined />}\n                      onClick={() => onSearch()}\n                    >\n                      {t(\"search\")}\n                    </Button>\n                  </Form.Item>\n                </Form>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    metadata: state.metadata,\n  };\n};\n\nexport default connect(mapStateToProps)(SearchForm);\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/ControlBar/index.js",["453","454"],"import { useState, useEffect } from \"react\";\n\nimport { Popover } from \"antd\";\nimport {\n  Button,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  IconButton,\n  Divider,\n  Slide,\n} from \"@mui/material\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCircleQuestion,\n  faCircleInfo,\n  faClose,\n  faArrowLeft,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Components } from \"tracker-capture-app-core\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./index.css\";\n\n/* REDUX */\nimport { connect } from \"react-redux\";\nimport { setSelectedOrgUnit } from \"../../redux/actions/metadata\";\nimport {\n  initNewData,\n  mutateTei,\n  mutateEnrollment,\n  mutateEvent,\n} from \"../../redux/actions/data\";\nimport { changeRoute } from \"../../redux/actions/route\";\n\nimport WarningDialog from \"../Form/WarningDialog\";\n\n/*       */\nconst { OrgUnitSelector } = Components;\n// const { Option } = Select;\n\nconst ControlBar = ({\n  metadata,\n  setSelectedOrgUnit,\n  changeRoute,\n  initNewData,\n  mutateTei,\n  mutateEnrollment,\n  mutateEvent,\n  route,\n  userRoles,\n  currentEventId,\n  isDirty,\n}) => {\n  const [routeText, setRouteText] = useState(\"\");\n\n  const { selectedOrgUnit, programMetadata } = metadata;\n  const { t } = useTranslation();\n\n  const [about, setAbout] = useState(false);\n  const [help, setHelp] = useState(false);\n  const [doc, setDoc] = useState(null);\n  const [exitWarning, setExitWarning] = useState(false);\n\n\n  return (\n    <div className=\"control-bar-container\">\n      <Popover\n        trigger=\"click\"\n        content={\n          <div className=\"orgunit-selector-container\">\n            <OrgUnitSelector\n              selectedOrgUnit={selectedOrgUnit}\n              handleSelectOrgUnit={(orgUnit) => {\n                setSelectedOrgUnit(orgUnit);\n                if (isDirty) {\n                  setRouteText(\"list\");\n                  setExitWarning(true);\n                } else {\n                  changeRoute(\"list\");\n                }\n              }}\n            />\n          </div>\n        }\n        // onVisibleChange={(visible) => {\n        //   console.log(visible);\n        // }}\n      >\n        <div className=\"button-container\">\n          <Button variant=\"outlined\" disabled={!programMetadata}>\n            {selectedOrgUnit ? (\n              <>\n                {t(\"orgUnit\")}: <b>{selectedOrgUnit.displayName} </b>\n              </>\n            ) : (\n              t(\"selectOrgUnit\")\n            )}\n          </Button>\n        </div>\n      </Popover>\n      <div className=\"button-container\">\n        <Button\n          variant=\"contained\"\n          disabled={\n            !selectedOrgUnit ||\n            !programMetadata.organisationUnits.find(\n              (ou) => ou.id === selectedOrgUnit.id\n            )\n          }\n          onClick={() => {\n            if (isDirty) {\n              setRouteText(\"form\");\n              setExitWarning(true);\n            } else {\n              changeRoute(\"form\");\n              initNewData(selectedOrgUnit, programMetadata);\n            }\n          }}\n        >\n          {t(\"newRegistration\")}\n        </Button>\n      </div>\n      <div className=\"button-container\">\n        <Button\n          disabled={!programMetadata}\n          onClick={() => {\n            if (isDirty) {\n              setRouteText(route === \"search\" ? \"list\" : \"search\");\n              setExitWarning(true);\n            } else {\n              changeRoute(route === \"search\" ? \"list\" : \"search\");\n            }\n          }}\n        >\n          {route === \"search\" ? t(\"list\") : t(\"search\")}\n        </Button>\n      </div>\n      <div className=\"button-container menu-button-container\">\n        <FormControl sx={{ m: 1, minWidth: 120 }} size=\"small\">\n          <InputLabel id=\"demo-select-small-label\">Menu</InputLabel>\n          <Select\n            labelId=\"demo-select-small-label\"\n            id=\"demo-select-small\"\n            value={\n              route\n                ? route === \"form\" || route === \"search\"\n                  ? \"list\"\n                  : route\n                : \"list\"\n            }\n            label=\"Menu\"\n            style={{ width: 150 }}\n            onChange={(value) => {\n              if (isDirty) {\n                setRouteText(value.target.value);\n                setExitWarning(true);\n              } else {\n                changeRoute(value.target.value);\n              }\n            }}\n          >\n            {programMetadata !== null &&\n              (userRoles.data || userRoles.admin) && (\n                <MenuItem value=\"list\">{t(\"dataEntry\")}</MenuItem>\n              )}\n            {programMetadata !== null &&\n              (userRoles.view || userRoles.admin) && (\n                <MenuItem value=\"export\">{t(\"anacodExport\")}</MenuItem>\n              )}\n            {programMetadata !== null &&\n              (userRoles.view || userRoles.admin) && (\n                <MenuItem value=\"dashboard\">{t(\"dashboard\")}</MenuItem>\n              )}\n            {userRoles.admin && (\n              <MenuItem value=\"administration\">{t(\"administration\")}</MenuItem>\n            )}\n            {userRoles.admin && (\n              <MenuItem value=\"translation\">{t(\"translation\")}</MenuItem>\n            )}\n          </Select>\n        </FormControl>\n        {/* <div className=\"exit-app-button\">\n          <Button\n            onClick={() => {\n              window.location.href = \"../../../dhis-web-dashboard/\";\n            }}\n          >\n            {t(\"exitApp\")}\n          </Button>\n        </div> */}\n        <div className=\"exit-app-button\">\n          <IconButton\n            size=\"small\"\n            onClick={() => {\n              setHelp(true);\n            }}\n          >\n            <FontAwesomeIcon icon={faCircleQuestion} />\n          </IconButton>\n        </div>\n        <div className=\"exit-app-button\">\n          <IconButton\n            size=\"small\"\n            onClick={() => {\n              setAbout(true);\n            }}\n          >\n            <FontAwesomeIcon icon={faCircleInfo} />\n          </IconButton>\n        </div>\n      </div>\n      <Dialog\n        open={about}\n        fullWidth\n        maxWidth=\"sm\"\n        onClose={() => {\n          setAbout(false);\n        }}\n      >\n        <DialogTitle>\n          About\n          <IconButton\n            aria-label=\"close\"\n            onClick={() => {\n              setAbout(false);\n            }}\n            sx={{\n              position: \"absolute\",\n              right: 8,\n              top: 12,\n            }}\n          >\n            <FontAwesomeIcon icon={faClose} fontSize={24} />\n          </IconButton>\n        </DialogTitle>\n        <Divider />\n        <DialogContent>\n          <div>\n            <strong>Cause of Death App</strong> <i>(version 1.0.1)</i>\n          </div>\n          <div>\n            Developed of HISP Vietnam in collaboration with University of Oslo\n            and WHO\n          </div>\n          <br />\n          <div>DHIS2 version tested:</div>\n          <ul>\n            <li>2.35</li>\n            <li>2.36</li>\n            <li>2.37</li>\n            <li>2.38</li>\n            <li>2.39</li>\n            <li>2.40</li>\n          </ul>\n        </DialogContent>\n      </Dialog>\n      <Dialog\n        open={help}\n        fullWidth\n        maxWidth=\"xl\"\n        onClose={() => {\n          setHelp(false);\n          setDoc(null);\n        }}\n      >\n        <DialogTitle>\n          {t(\"help\")}\n          <IconButton\n            aria-label=\"close\"\n            onClick={() => {\n              setHelp(false);\n              setDoc(null);\n            }}\n            sx={{\n              position: \"absolute\",\n              right: 8,\n              top: 12,\n            }}\n          >\n            <FontAwesomeIcon icon={faClose} fontSize={24} />\n          </IconButton>\n        </DialogTitle>\n        <Divider />\n        <DialogContent>\n          <div className=\"help-container\">\n            <Slide direction=\"right\" in={!doc} mountOnEnter unmountOnExit>\n              <div className=\"help-homepage\">\n                <div className=\"help-title\">{t(\"userManual\")}</div>\n                <div className=\"help-subtitle\">{t(\"causeOfDeathVersion\")}</div>\n                <br />\n                <br />\n                <br />\n                <div className=\"help-title\">{t(\"appFeatures\")}</div>\n                <ul className=\"help-listing\">\n                  <li\n                    onClick={() => {\n                      setDoc({\n                        label: \"dataentry\",\n                        type: \"googleDoc\",\n                        url: \"https://docs.google.com/document/d/e/2PACX-1vT7is5PmIEG0jVWfnT7kGJrwu0Ihj0rGlBsMA8JZWmwFdkK8YHAAW-WxL6FkgbrGX5cAPpyVUChVDlJ/pub?embedded=true\",\n                      });\n                    }}\n                  >\n                    {t(\"dataEntry\")}\n                  </li>\n                  <li\n                    onClick={() => {\n                      setDoc({\n                        label: \"anacod\",\n                        type: \"googleDoc\",\n                        url: \"https://docs.google.com/document/d/e/2PACX-1vQdr2wU1vpl_Aq0qR3tzx4_Ye2MeS4Vl5ngVw4_-URLG9P0y6zpLHtAJj4rJh47QGdN0az0XbbuZt6t/pub?embedded=true\",\n                      });\n                    }}\n                  >\n                    {t(\"anacodExport\")}\n                  </li>\n                  <li\n                    onClick={() => {\n                      setDoc({\n                        label: \"dashboard\",\n                        type: \"googleDoc\",\n                        url: \"https://docs.google.com/document/d/e/2PACX-1vRtwuTMcvKmUBWKoI1Cgt9WLjGLiuA9Ti_0ii9HVSpcMRRlh4rBd99GpalRytZp4N6P05K9QYvYOm62/pub?embedded=true\",\n                      });\n                    }}\n                  >\n                    {t(\"dashboard\")}\n                  </li>\n                  <li\n                    onClick={() => {\n                      setDoc({\n                        label: \"translation\",\n                        type: \"googleDoc\",\n                        url: \"https://docs.google.com/document/d/e/2PACX-1vRTLVO0CS8SyEo7U_WgGMpyZDwFanKJ0ov7nRRyW5p64q4HT563pS_ZgAbf7V2drkaeQlcojnsTQfb4/pub?embedded=true\",\n                      });\n                    }}\n                  >\n                    {t(\"translation\")}\n                  </li>\n                  <li\n                    onClick={() => {\n                      setDoc({\n                        label: \"administration\",\n                        type: \"googleDoc\",\n                        url: \"https://docs.google.com/document/d/e/2PACX-1vSSVBG46xrDYjA1c8gkl3RdY3JcgLgLhf-rQPJHtvf67CnBMoSdlg14vxpKXb1yDpLB8sFTQo1JBJEf/pub?embedded=true\",\n                      });\n                    }}\n                  >\n                    {t(\"administration\")}\n                  </li>\n                  <li\n                    onClick={() => {\n                      setDoc({\n                        label: \"installation\",\n                        type: \"googleDoc\",\n                        url: \"https://docs.google.com/document/d/e/2PACX-1vSQ1HmJ1_VpuKiuWd23N14kDbWLZwyqwqLmqLxAx_aFF5PIqw7w-iCDjIyeaa_O-A/pub?embedded=true\",\n                      });\n                    }}\n                  >\n                    {t(\"installation\")}\n                  </li>\n                </ul>\n              </div>\n            </Slide>\n            <Slide direction=\"left\" in={doc} mountOnEnter unmountOnExit>\n              <div className=\"help-content\">\n                {doc && (\n                  <iframe\n                    src={doc.url + `&time=${new Date()}`}\n                    width=\"750px\"\n                    height=\"100%\"\n                    frameBorder=\"0\"\n                  ></iframe>\n                )}\n              </div>\n            </Slide>\n          </div>\n        </DialogContent>\n        <Divider />\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            size=\"large\"\n            onClick={() => {\n              setDoc(null);\n            }}\n          >\n            <FontAwesomeIcon icon={faArrowLeft} />\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <WarningDialog\n        open={exitWarning}\n        handleCancel={() => {\n          setExitWarning(false);\n        }}\n        handleOk={() => {\n          if (routeText === \"form\") {\n            initNewData(selectedOrgUnit, programMetadata);\n          } else {\n            mutateTei(\"isDirty\", false);\n            mutateEnrollment(\"isDirty\", false);\n            if (currentEventId) {\n              mutateEvent(currentEventId, \"isDirty\", false);\n            }\n          }\n          setExitWarning(false);\n          changeRoute(routeText);\n        }}\n      ></WarningDialog>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    metadata: state.metadata,\n    route: state.route,\n    userRoles: state.user.userRoles,\n    isDirty:\n      (state.data.currentEnrollment && state.data.currentEnrollment.isDirty) ||\n      (state.data.currentTei && state.data.currentTei.isDirty) ||\n      (state.data.currentEvents.length > 0 &&\n        state.data.currentEvents[0].isDirty),\n    currentEventId:\n      state.data.currentEvents.length > 0\n        ? state.data.currentEvents[0].event\n        : null,\n  };\n};\n\nconst mapDispatchToProps = {\n  setSelectedOrgUnit,\n  changeRoute,\n  initNewData,\n  mutateTei,\n  mutateEnrollment,\n  mutateEvent,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ControlBar);\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Administration/index.js",["455"],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/HeaderBar/index.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/RegisteredTeiList/index.js",["456","457","458","459","460","461","462"],"import { useRef, useEffect, useState } from \"react\";\nimport { Table, Tag } from \"antd\";\nimport { Hooks, Components } from \"tracker-capture-app-core\";\nimport \"./index.css\";\nimport { generateTableColumns, generateTableFilter } from \"../../utils/index\";\n/* REDUX */\nimport { connect } from \"react-redux\";\nimport { initData } from \"../../redux/actions/data\";\nimport { changeRoute } from \"../../redux/actions/route\";\nimport { useTranslation } from \"react-i18next\";\n/*       */\n\n/* Components */\nimport { SearchOutlined } from \"@ant-design/icons\";\nconst { useApi } = Hooks;\nconst { LoadingMask } = Components;\n\nconst RegisteredTeiList = ({ metadata, data, initData, changeRoute }) => {\n  const { t } = useTranslation();\n  const { dataApi } = useApi();\n  const { programMetadata, selectedOrgUnit } = metadata;\n  const tableContainer = useRef(null);\n  const [size, setSize] = useState({ height: 0 });\n  const [loadingTable, setLoadingTable] = useState(true);\n  const [loadingPage, setLoadingPage] = useState(true);\n  const [sortTable, setSortTable] = useState(\"order=created:desc\");\n  const [filterTable, setFilterTable] = useState([]);\n\n  const [tableData, setTableData] = useState({\n    columns: null,\n    data: null,\n    pager: null,\n  });\n\n  useEffect(() => {\n    const tableContainerHeight = tableContainer.current.offsetHeight;\n    setSize({\n      ...size,\n      height: tableContainerHeight,\n    });\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      if (!programMetadata || !selectedOrgUnit) return;\n      setLoadingPage(true);\n      setFilterTable([]);\n      setSortTable(\"order=created:desc\");\n      setTableData({\n        ...tableData,\n        columns: null,\n        data: null,\n        pager: null,\n      });\n      const instanceList = await dataApi.getTrackedEntityInstanceListByQuery(\n        selectedOrgUnit.id,\n        programMetadata.id,\n        10,\n        1,\n        \"\",\n        sortTable\n      );\n      setupUI(instanceList);\n    })();\n  }, [\n    programMetadata ? programMetadata.id : null,\n    selectedOrgUnit ? selectedOrgUnit.id : null,\n  ]);\n\n  useEffect(() => {\n    if (selectedOrgUnit) {\n      (async () => {\n        setLoadingTable(true);\n        const instanceList = await dataApi.getTrackedEntityInstanceListByQuery(\n          selectedOrgUnit.id,\n          programMetadata.id,\n          tableData.pager ? tableData.pager.pageSize : 10,\n          tableData.page ? tableData.pager.page : 1,\n          returnFilterString(filterTable),\n          sortTable\n        );\n        setupUI(instanceList);\n      })();\n    }\n  }, [filterTable, sortTable]);\n\n  const returnFilterString = (arr) => {\n    let filterString = \"\";\n    arr.forEach((e) => {\n      if (e.type === \"select\") {\n        filterString += `&attribute=${e.teiId}:EQ:${e.value}`;\n      } else {\n        filterString += `&attribute=${e.teiId}:LIKE:${e.value}`;\n      }\n    });\n    return filterString;\n  };\n\n  const onSort = async (sorter) => {\n    if (sorter) {\n      let orderString = \"\";\n      if (sorter.order === \"descend\") {\n        orderString = `order=${sorter.columnKey}:desc`;\n      } else {\n        if (sorter.order === \"ascend\") {\n          orderString = `order=${sorter.columnKey}:asc`;\n        } else {\n          orderString = `order=lastupdated:desc`;\n        }\n      }\n      setSortTable(orderString);\n    }\n  };\n\n  const onFilter = async (value, teiId, type) => {\n    let arr = [];\n    arr = filterTable;\n    if (value && arr) {\n      let find = arr.findIndex((e) => e.teiId === teiId);\n      if (find >= 0) {\n        arr[find].value = value;\n      } else {\n        arr.push({\n          value,\n          teiId,\n          type: type ? type : null,\n        });\n      }\n    } else {\n      let find = arr.findIndex((e) => e.teiId === teiId);\n      arr.splice(find, 1);\n    }\n    setFilterTable([...arr]);\n  };\n\n  const setupUI = (instanceList) => {\n    let columns = programMetadata.trackedEntityAttributes\n      .filter((tea) => tea.displayInList)\n      .map((tea) => {\n        const teaObject = {\n          title: tea.displayFormName,\n          dataIndex: tea.id,\n          key: tea.id,\n          sorter: true,\n          filterDropdown: generateTableFilter(tea, onFilter),\n          render: generateTableColumns(tea),\n        };\n        return teaObject;\n      });\n    const lastUpdatedObject = {\n      title: t(\"lastUpdated\"),\n      dataIndex: \"lastupdated\",\n      key: \"lastupdated\",\n      sorter: true,\n      // filterDropdown: generateTableFilter(null, onFilter, {\n      //   name: \"lastupdated\",\n      //   type: \"DATE\",\n      // }),\n      render: generateTableColumns(null, { name: \"lastupdated\", type: \"DATE\" }),\n    };\n    columns.unshift(lastUpdatedObject);\n    const data = instanceList.rows.map((row, index) => {\n      const rowObject = {\n        key: index,\n      };\n\n      const teiIdIndex = instanceList.headers.findIndex(\n        (h) => h.name === \"instance\"\n      );\n      rowObject.teiId = row[teiIdIndex];\n\n      columns.forEach((column) => {\n        const columnIndex = instanceList.headers.findIndex((h) => {\n          return h.name === column.dataIndex;\n        });\n        rowObject[column.dataIndex] =\n          columnIndex !== -1 ? row[columnIndex] : \"\";\n      });\n      return rowObject;\n    });\n\n    setLoadingPage(false);\n    setLoadingTable(false);\n    setTableData({\n      ...tableData,\n      columns,\n      data,\n      pager: instanceList.metaData.pager,\n    });\n  };\n\n  const onChangePage = async (page, pageSize) => {\n    setLoadingTable(true);\n    const instanceList = await dataApi.getTrackedEntityInstanceListByQuery(\n      selectedOrgUnit.id,\n      programMetadata.id,\n      pageSize,\n      page,\n      returnFilterString(filterTable),\n      sortTable\n    );\n    setupUI(instanceList);\n  };\n\n  return (\n    <div className=\"registered-tei-list-wrapper\">\n      <div className=\"registered-tei-list-container\" ref={tableContainer}>\n        {selectedOrgUnit ? (\n          !loadingPage ? (\n            <Table\n              onRow={(record, rowIndex) => {\n                return {\n                  onClick: async (event) => {\n                    setLoadingPage(true);\n                    const result = await dataApi.getTrackedEntityInstanceById(\n                      record.teiId,\n                      programMetadata.id\n                    );\n                    setLoadingPage(false);\n                    initData(result, programMetadata);\n                    changeRoute(\"form\");\n                  },\n                };\n              }}\n              sticky\n              tableLayout={\"fixed\"}\n              pagination={\n                tableData.pager\n                  ? {\n                      position: [\"bottomCenter\"],\n                      showSizeChanger: true,\n                      defaultCurrent: tableData.pager.page,\n                      total: tableData.pager.total,\n                      onChange: onChangePage,\n                    }\n                  : null\n              }\n              columns={tableData.columns}\n              dataSource={tableData.data}\n              scroll={{ y: size.height - 200 }}\n              loading={loadingTable}\n              onChange={(pagination, filters, sorter, extra) => {\n                onSort(sorter);\n              }}\n              bordered={true}\n              locale={{\n                triggerDesc: t(\"triggerDesc\"),\n                triggerAsc: t(\"triggerAsc\"),\n                cancelSort: t(\"cancelSort\"),\n              }}\n            />\n          ) : (\n            <LoadingMask />\n          )\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    metadata: state.metadata,\n    data: state.data,\n  };\n};\n\nconst mapDispatchToProps = {\n  initData,\n  changeRoute,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisteredTeiList);\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Form/index.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Export/index.js",["463","464"],"import moment from \"moment\";\n/* REDUX */\nimport { connect } from \"react-redux\";\n/*       */\nimport { Button, Col, Row, Select, message } from \"antd\";\nimport { CaretRightOutlined, FileExcelOutlined } from \"@ant-design/icons\";\nimport \"./index.css\";\nimport { useState } from \"react\";\nimport { writeFile } from \"../../utils/excel.utility\";\nimport { Hooks } from \"tracker-capture-app-core\";\nimport Content from \"./Content\";\nimport XLSX from \"xlsx\";\nimport { useTranslation } from \"react-i18next\";\n\nconst { useApi } = Hooks;\n\nconst { Option } = Select;\nconst OPTIONS = [];\nfor (let i = moment().year(); i >= 1970; i--) {\n  OPTIONS.push(<Option key={i}>{i}</Option>);\n}\n\nconst Export = ({ route }) => {\n  const { t } = useTranslation();\n  const { dataApi } = useApi();\n  const getData = async (year) =>\n    dataApi.pull(\n      `/api/sqlViews/XpI2kVApPIH/data?paging=false&var=year:${year}`\n    );\n  const [periodType, setPeriodType] = useState(\"Yearly\");\n  const [selectedPeriods, selectPeriod] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [data, setData] = useState(null);\n  const [isEnableExport, setIsEnableExport] = useState(false);\n  return (\n    <div className=\"export-wrapper\">\n      <div className=\"export-container\">\n        <Row style={{ width: \"100%\", padding: 9 }} gutter={5}>\n          <Col>\n            {/* <Select\n              style={{ width: 200 }}\n              value={periodType}\n              placeholder=\"Select period type\"\n              onChange={setPeriodType}\n            >\n              {OPTIONS.map((option) => (\n                <Option value={option.value}>{option.label}</Option>\n              ))}\n            </Select> */}\n            <Select\n              mode=\"multiple\"\n              allowClear\n              style={{ width: \"500px\" }}\n              placeholder={t(\"pleaseSelectYear\")}\n              onChange={(value) => {\n                selectPeriod(value);\n              }}\n            >\n              {OPTIONS}\n            </Select>\n          </Col>\n          <Col>\n            <Button\n              loading={isRunning}\n              disabled={!selectedPeriods || isRunning}\n              onClick={async () => {\n                setIsRunning(true);\n                setData(null);\n                const data = {};\n                let error = false;\n                for (let i = 0; i < selectedPeriods.length; i++) {\n                  const year = selectedPeriods[i];\n                  data[year] = await getData(year);\n                  if ( data[year].status && data[year].status === \"ERROR\" ) {\n                    error = true;\n                  }\n                }\n                if( error ) {\n                  message.error(\"ERROR!!! Please run analytics before using ANACoD\")\n                }\n                else {\n                  setData(data);\n                  setIsEnableExport(true);\n                }\n                setIsRunning(false);\n              }}\n              type=\"primary\"\n              icon={<CaretRightOutlined />}\n            >\n              {t(\"run\")}\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              type=\"primary\"\n              disabled={!isEnableExport}\n              icon={<FileExcelOutlined />}\n              onClick={() => {\n                var wb = XLSX.utils.book_new();\n                Object.entries(data)\n                  .sort(([a], [b]) => b - a)\n                  .map(\n                    ([\n                      year,\n                      {\n                        listGrid: { rows, headers },\n                      },\n                    ]) => {\n                      const heads = headers.map(({ name }) => name);\n                      const ws = XLSX.utils.json_to_sheet(\n                        rows.map((row) =>\n                          row.reduce((result, cell, index) => {\n                            result[heads[index]] = cell;\n                            return result;\n                          }, {})\n                        ),\n                        {\n                          header: heads,\n                        }\n                      );\n                      return XLSX.utils.book_append_sheet(wb, ws, year);\n                    }\n                  );\n                writeFile(wb, \"ANACOD.xlsx\");\n              }}\n            >\n              {t(\"anacodExportExcel\")}\n            </Button>\n          </Col>\n        </Row>\n        <Content loading={isRunning} loaded={!!data} data={data} />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    route: state.route,\n  };\n};\n\nexport default connect(mapStateToProps)(Export);\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Translation/index.js",["465","466"],"import { useState, useEffect } from \"react\";\nimport { Tabs, Button, Modal, Select } from \"antd\";\nimport { Hooks, Components } from \"tracker-capture-app-core\";\nimport TranslationTable from \"./TranslationTable\";\nimport \"./index.css\";\nimport { TRANSLATIONS, LOCALES } from \"./const\";\nimport localeFile from \"../../locale/locale\";\nimport { InitTranslation } from \"../../locale/i18n\";\nimport { useTranslation } from \"react-i18next\";\nconst { Option } = Select;\nconst { TabPane } = Tabs;\nconst { useApi } = Hooks;\nconst { LoadingMask } = Components;\n\nconst Translation = () => {\n  const { t } = useTranslation();\n  const { metadataApi } = useApi();\n  const [translations, setTranslations] = useState(null);\n  const [addLanguageModal, setAddLanguageModal] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [languages, setLanguages] = useState(null);\n  const [selectedAddLanguage, setSelectedAddLanguage] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      let result = await metadataApi.get(\n        \"/api/dataStore/WHO_ICD11_COD/translation\"\n      );\n      if (result.status) {\n        let array = [];\n        let arrayLanguages = [\n          {\n            label: \"English\",\n            key: \"en\",\n          },\n        ];\n        Object.entries(localeFile.en.translation).forEach((value) => {\n          let object = {\n            key: value[0],\n            translation: { en: value[1] },\n          };\n          array.push(object);\n        });\n        setTranslations(array);\n        setLanguages(arrayLanguages);\n        await metadataApi.push(\"setLanguages\", {\n          translations: array,\n          languages: arrayLanguages,\n        });\n        setLoading(false);\n      } else {\n        setTranslations(result.translations);\n        setLanguages(result.languages);\n        setLoading(false);\n      }\n    })();\n  }, []);\n\n  const changeTranslation = (key, lang, value) => {\n    const foundIndex = translations.findIndex((t) => t.key === key);\n    translations[foundIndex].translation[lang] = value;\n    setTranslations([...translations]);\n  };\n\n  const addNewLanguage = () => {\n    if (selectedAddLanguage) {\n      let findExistLanguage = languages.find(\n        (e) => e.key === selectedAddLanguage\n      );\n      if (!findExistLanguage) {\n        languages.push({\n          label: LOCALES[selectedAddLanguage],\n          key: selectedAddLanguage,\n        });\n        setLanguages(languages);\n      }\n      setSelectedAddLanguage(null);\n    }\n    setAddLanguageModal(false);\n  };\n\n  const closeAddLanguageModal = () => {\n    setAddLanguageModal(false);\n  };\n\n  const saveTranslation = async () => {\n    setLoading(true);\n    await metadataApi.push(\n      \"/api/dataStore/WHO_ICD11_COD/translation\",\n      {\n        translations: translations,\n        languages: languages,\n      },\n      \"PUT\"\n    );\n    InitTranslation();\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"translation-wrapper\">\n      {loading ? (\n        <LoadingMask />\n      ) : (\n        <div className=\"translation-container\">\n          <Tabs defaultActiveKey=\"1\">\n            <TabPane tab={t(\"dataEntry\")} key=\"1\">\n              <TranslationTable\n                type=\"dataEntry\"\n                translations={translations}\n                changeTranslation={changeTranslation}\n                languages={languages}\n              />\n            </TabPane>\n            <TabPane tab={t(\"anacodExport\")} key=\"2\">\n              <TranslationTable\n                type=\"anacodExport\"\n                translations={translations}\n                changeTranslation={changeTranslation}\n                languages={languages}\n              />\n            </TabPane>\n            <TabPane tab={t(\"dashboard\")} key=\"3\">\n              <TranslationTable\n                type=\"dashboard\"\n                translations={translations}\n                changeTranslation={changeTranslation}\n                languages={languages}\n              />\n            </TabPane>\n            <TabPane tab={t(\"administration\")} key=\"4\">\n              <TranslationTable\n                type=\"administration\"\n                translations={translations}\n                changeTranslation={changeTranslation}\n                languages={languages}\n              />\n            </TabPane>\n            <TabPane tab={t(\"translation\")} key=\"5\">\n              <TranslationTable\n                type=\"translation\"\n                translations={translations}\n                changeTranslation={changeTranslation}\n                languages={languages}\n              />\n            </TabPane>\n          </Tabs>\n          <div className=\"translation-buttons-container\">\n            <div style={{ paddingRight: \"10px\" }}>\n              <Button type=\"primary\" onClick={saveTranslation}>\n                {t(\"save\")}\n              </Button>\n            </div>\n            <Button\n              onClick={() => {\n                setAddLanguageModal(true);\n              }}\n            >\n              {t(\"addLanguage\")}\n            </Button>\n            <Modal\n              title={t(\"addLanguage\")}\n              visible={addLanguageModal}\n              onOk={addNewLanguage}\n              onCancel={closeAddLanguageModal}\n              okText={t(\"add\")}\n              cancelText={t(\"cancel\")}\n            >\n              <Select\n                placeholder={t(\"pleaseSelectLanguage\")}\n                style={{ width: \"100%\" }}\n                showSearch\n                allowClear\n                onChange={(value) => {\n                  setSelectedAddLanguage(value);\n                }}\n              >\n                {Object.keys(LOCALES).map((key) => {\n                  return <Option value={key}>{LOCALES[key]}</Option>;\n                })}\n              </Select>\n            </Modal>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Translation;\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/actions/user/index.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/actions/metadata/index.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/actions/admin/index.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/actions/route/index.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/reducers/route.js",["467"],"import { CHANGE_ROUTE } from \"../actions/route/type\";\n\nconst initialState = null;\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_ROUTE: {\n      return action.payload.route;\n    }\n    default:\n      return state;\n  }\n}\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/reducers/data.js",["468"],"import {\n  MUTATE_TEI,\n  MUTATE_ATTRIBUTE,\n  MUTATE_ENROLLMENT,\n  MUTATE_EVENT,\n  MUTATE_DATAVALUE,\n  INIT_DATA,\n  INIT_NEW_DATA,\n  INIT_NEW_EVENT\n} from \"../actions/data/type\";\nimport {\n  mutateTei,\n  mutateAttribute,\n  mutateEnrollment,\n  mutateEvent,\n  mutateDataValue,\n  initData,\n  initNewData,\n  initNewEvent\n} from \"./data-methods\";\n\nconst initialState = {\n  currentTei: null,\n  currentEnrollment: null,\n  currentEvents: []\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case MUTATE_TEI: {\n      return mutateTei(state, action);\n    }\n    case MUTATE_ATTRIBUTE: {\n      return mutateAttribute(state, action);\n    }\n    case MUTATE_ENROLLMENT: {\n      return mutateEnrollment(state, action);\n    }\n    case MUTATE_EVENT: {\n      return mutateEvent(state, action);\n    }\n    case MUTATE_DATAVALUE: {\n      return mutateDataValue(state, action);\n    }\n    case INIT_NEW_DATA: {\n      return initNewData(state, action);\n    }\n    case INIT_DATA: {\n      return initData(state, action);\n    }\n    case INIT_NEW_EVENT: {\n      return initNewEvent(state, action);\n    }\n    default:\n      return state;\n  }\n}\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/reducers/metadata.js",["469","470"],"import {\n  GET_PROGRAM_METADATA,\n  SET_TRACKER_DATA_ELEMENTS,\n  SET_PROGRAM_METADATA,\n  SET_SELECTED_ORGUNIT,\n  SET_TEAS,\n  SET_USERS,\n  SET_ORGUNIT_GROUPS,\n  SET_ORGUNIT_LEVELS,\n  SET_ORGUNITS,\n  GET_ICD11_OPTIONS,\n  GET_TRACKED_ENTITY_TYPES,\n  SET_USER_GROUPS,\n  SET_FORM_MAPPING,\n  SET_FORM_MAPPING_TEAS,\n  SET_CERTIFICATE_TEMPLATE,\n  SET_FEMALE_CODE,\n  SET_UI_LOCALE,\n  CHANGE_FULLNAMEOPTION,\n  GET_ICD_API_CLIENT_TOKEN\n} from \"../actions/metadata/type\";\n\nconst initialState = {\n  programMetadata: null,\n  selectedOrgUnit: null,\n  orgUnitGroups: null,\n  orgUnitLevels: null,\n  orgUnits: null,\n  icd11Options: null,\n  formMapping: null,\n  certificateTemplate: {\n    title: \"Death Certificate\",\n    logo: null,\n    info: [{\n      label: \"Date of Death\",\n      enrollment: \"incidentDate\"\n    },{\n      label: \"Reported Date\",\n      enrollment: \"enrollmentDate\"\n    }],\n    footer:[{\n      label: \"Institution Name\",\n      enrollment: \"orgUnitName\"\n    },{\n      label: \"Certificate Date\",\n      enrollment: \"enrollmentDate\"\n    }]\n  },\n  femaleCode: \"\",\n  fullnameOption: false,\n  keyUiLocale: \"en\",\n  icdApi_clientToken: \"\"\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_PROGRAM_METADATA: {\n      return {\n        ...state,\n        programMetadata: action.payload.programMetadata\n      };\n    }\n    case SET_SELECTED_ORGUNIT: {\n      return {\n        ...state,\n        selectedOrgUnit: action.payload.selectedOrgUnit\n      };\n    }\n    case SET_ORGUNITS: {\n      return {\n        ...state,\n        orgUnits: action.payload.orgUnits\n      };\n    }\n    case SET_ORGUNIT_GROUPS: {\n      return {\n        ...state,\n        orgUnitGroups: action.payload.orgUnitGroups\n      };\n    }\n    case SET_ORGUNIT_LEVELS: {\n      return {\n        ...state,\n        orgUnitLevels: action.payload.orgUnitLevels\n      };\n    }\n    case SET_TEAS: {\n      return {\n        ...state,\n        trackedEntityAttributes: action.payload.trackedEntityAttributes\n      };\n    }\n    case SET_TRACKER_DATA_ELEMENTS: {\n      return {\n        ...state,\n        dataElements: action.payload.dataElements\n      };\n    }\n    case SET_USERS: {\n      return {\n        ...state,\n        users: action.payload.users\n      };\n    }\n    case GET_ICD11_OPTIONS: {\n      return {\n        ...state,\n        icd11Options: action.payload.options\n      }\n    }\n    case GET_TRACKED_ENTITY_TYPES: {\n      return {\n        ...state,\n        trackedEntityTypes: action.payload.trackedEntityTypes\n      }\n    }\n    case SET_USER_GROUPS: {\n      return {\n        ...state,\n        userGroups: action.payload.userGroups\n      }\n    }\n    case SET_FORM_MAPPING: {\n      return {\n        ...state,\n        formMapping: action.payload.formMapping\n      }\n    }\n    case SET_FORM_MAPPING_TEAS: {\n      return {\n        ...state,\n        formMapping: { \n          ...state.formMapping,\n          attributes: action.payload.teas\n        }\n      }\n    }\n    case SET_CERTIFICATE_TEMPLATE: {\n      return {\n        ...state,\n        certificateTemplate: action.payload.certificateTemplate\n      }\n    }\n    case SET_FEMALE_CODE: {\n      return {\n        ...state,\n        femaleCode: action.payload\n      }\n    }\n    case CHANGE_FULLNAMEOPTION: {\n      return {\n        ...state,\n        fullnameOption: action.payload\n      }\n    }\n    case SET_UI_LOCALE: {\n      return {\n        ...state,\n        keyUiLocale: action.payload\n      }\n    }\n    case GET_ICD_API_CLIENT_TOKEN: {\n      return {\n        ...state,\n        icdApi_clientToken: action.payload\n      }\n    }\n    default:\n      return state;\n  }\n}\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/reducers/admin.js",["471"],"import {\n  CHANGE_STEP,\n  CHANGE_INSTALLATION_TYPE,\n  CHANGE_TEAS,\n  CHANGE_DATA_ELEMENTS,\n  CHANGE_ASSIGN_USERS,\n  ASSIGN_ORGUNITS,\n  CHANGE_ICD11_TOOL_URL,\n  CHANGE_CERTIFICATE_TEMPLATE,\n  SET_CERTIFICATE_LOGO,\n  CHANGE_TRACKED_ENTITY_TYPE,\n  SET_FEMALE_SECTION,\n  SET_INSTALLING_FILE,\n  CHANGE_FULLNAMEOPTION\n} from \"../actions/admin/type\";\n\nconst initialState = {\n  step: 0,\n  type: null,\n  trackedEntityAttributes: [],\n  trackedEntityType: null,\n  femaleOption: null,\n  fullnameOption: \"firstlastname\",\n  dataElements: {\n    frameA: { \n      otherSections: [], \n      defaultSections: require(`../../asset/metadata/programStageSections.json`).programStageSections.slice(0,6) \n    },\n    frameB: { \n      otherSections: [], \n      defaultSections: require(`../../asset/metadata/programStageSections.json`).programStageSections.slice(6,10) \n    }\n  },\n  users: {\n    admin: [],\n    capture: [],\n    view: []\n  },\n  assignedOrgUnits: [],\n  icd11ToolUrl: {\n    type: \"global\",\n    url: \"https://icd11restapi-developer-test.azurewebsites.net/icd/\"\n  },\n  certificateTemplate: null,\n  installingFile: null\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_STEP: {\n      return { ...state, step: action.payload.step };\n    }\n    case CHANGE_INSTALLATION_TYPE: {\n      return { ...state, type: action.payload.type };\n    }\n    case CHANGE_TEAS: {\n      return {\n        ...state,\n        trackedEntityAttributes: action.payload.trackedEntityAttributes\n      };\n    }\n    case CHANGE_DATA_ELEMENTS: {\n      return {\n        ...state,\n        dataElements: {\n          ...state.dataElements,\n          [action.payload.frame]: {\n            ...state.dataElements[action.payload.frame],\n            ...action.payload.section\n          }\n        }\n      };\n    }\n\n    case CHANGE_ASSIGN_USERS: {\n      return {\n        ...state,\n        users: {\n          ...state.users,\n          [action.payload.group]: action.payload.users\n        }\n      };\n    }\n\n    case ASSIGN_ORGUNITS: {\n      return { ...state, assignedOrgUnits: action.payload.orgUnits };\n    }\n    case CHANGE_ICD11_TOOL_URL: {\n      if (action.payload.type !== undefined) {\n        return {\n          ...state,\n          icd11ToolUrl: {\n            ...state.icd11ToolUrl,\n            url: action.payload.url,\n            type: action.payload.type\n          }\n        };\n      } else {\n        return {\n          ...state,\n          icd11ToolUrl: {\n            ...state.icd11ToolUrl,\n            url: action.payload.url\n          }\n        };\n      }\n    }\n\n    case CHANGE_CERTIFICATE_TEMPLATE: {\n      return {\n        ...state,\n        certificateTemplate: action.payload.certificateTemplate\n      }\n    }\n\n    case SET_CERTIFICATE_LOGO: {\n      return {\n        ...state,\n        certificateTemplate: {\n          ...state.certificateTemplate,\n          logo: action.payload.image.image\n        }\n      }\n    }\n\n    case CHANGE_TRACKED_ENTITY_TYPE: {\n      return {\n        ...state,\n        trackedEntityType: action.payload.trackedEntityType\n      }\n    }\n\n    case SET_FEMALE_SECTION: {\n      return {\n        ...state,\n        femaleOption: action.payload\n      }\n    }\n\n    case CHANGE_FULLNAMEOPTION: {\n      return {\n        ...state,\n        fullnameOption: action.payload\n      }\n    }\n\n    case SET_INSTALLING_FILE: {\n      return {\n        ...state,\n        installingFile: action.payload.installingFile\n      }\n    }\n\n    default:\n      return state;\n  }\n}\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/reducers/user.js",["472"],"import {\n    SET_USER_ROLES\n} from \"../actions/user/type\";\n\nconst initialState = {\n    userRoles: {\n        admin: false,\n        data: false,\n        view: false\n    }\n};\n\nexport default function ( state = initialState, action ) {\n    switch ( action.type ) {\n        case SET_USER_ROLES: {\n            return {\n                ...state,\n                userRoles: action.payload\n            }\n        }\n        default:\n            return state;\n    }\n}","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/index.jsx",["473","474"],"import { useEffect, useState } from \"react\";\nimport GridLayout from \"react-grid-layout\";\nimport { WidthProvider } from \"react-grid-layout\";\nimport moment from \"moment\";\nimport WidgetContainer from \"./WidgetContainer/WidgetContainer\";\nimport { Select, Space } from \"antd\";\n\nimport generateChildChart from \"./utils/generateChildChart\";\nimport { AGE_RANGES, SEXES, randomNumber } from \"./pages/utils\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./index.css\";\nimport run from \"./run\";\nconst Layout = WidthProvider(GridLayout);\nconst { Option } = Select;\n\nconst OPTIONS = [];\nfor (let i = moment().year(); i >= 1970; i--) {\n  OPTIONS.push(<Option key={i}>{i}</Option>);\n}\n\nconst ALL_CAUSES = [\n  {label: \"Tuberculosis\", value: \"0030\"},\n  {label: \"Sexually transmitted diseases excluding HIV\", value: \"0040;0050;0060;0070;0080\"},\n  {label: \"HIV\", value: \"0090\"},\n  {label: \"Diarrhoeal diseases\", value: \"0100\"},\n  {label: \"Pertussis\", value: \"0120\"},\n  {label: \"Poliomyelitis\", value: \"0130\"},\n  {label: \"Diphtheria\", value: \"0140\"},\n  {label: \"Measles\", value: \"0150\"},\n  {label: \"Tetanus\", value: \"0160\"},\n  {label: \"Meningitis\", value: \"0170\"},\n  {label: \"Hepatitis B\", value: \"0180\"},\n  {label: \"Hepatitis C\", value: \"0190\"},\n  {label: \"Malaria\", value: \"0200\"},\n  {label: \"Tropical-cluster diseases\", value: \"0210;0220;0230;0240;0250;0260;0270\"},\n  {label: \"Lower respiratory infections\", value: \"0390\"},\n  {label: \"Maternal conditions\", value: \"0420;0430;0440;0450;0460;0470;0480\"},\n  {label: \"Conditions arising during the perinatal period\", value: \"0490;0500;0510;0520\"},\n  {label: \"Nutritional deficiencies\", value: \"0530;0540;0550;0560;0570;0580\"},\n  {label: \"Mouth and oropharynx cancers\", value: \"0610\"},\n  {label: \"Oesophagus cancer\", value: \"0620\"},\n  {label: \"Stomach cancer\", value: \"0630\"},\n  {label: \"Colon and rectum cancers\", value: \"0640\"},\n  {label: \"Liver cancer\", value: \"0650\"},\n  {label: \"Pancreas cancer\", value: \"0660\"},\n  {label: \"Trachea, bronchus and lung cancers\", value: \"0670\"},\n  {label: \"Melanoma and other skin cancers\", value: \"0680\"},\n  {label: \"Breast cancer\", value: \"0690\"},\n  {label: \"Cervix uteri cancer\", value: \"0700\"},\n  {label: \"Corpus uteri cancer\", value: \"0710\"},\n  {label: \"Ovary cancer\", value: \"0720\"},\n  {label: \"Prostate cancer\", value: \"0730\"},\n  {label: \"Bladder cancer\", value: \"0740\"},\n  {label: \"Lymphomas and multiple myeloma\", value: \"0750\"},\n  {label: \"Leukaemia\", value: \"0760\"},\n  {label: \"Alzheimer and other dementias\", value: \"0870\"},\n  {label: \"Parkinson disease\", value: \"0880\"},\n  {label: \"Hypertensive  disease\", value: \"1060\"},\n  {label: \"Ischaemic heart disease\", value: \"1070\"},\n  {label: \"Cerebrovascular disease\", value: \"1080\"},\n  {label: \"Chronic obstructive pulmonary disease\", value: \"1120\"},\n  {label: \"Asthma\", value: \"1130\"},\n  {label: \"Digestive diseases\", value: \"1150\"},\n  {label: \"Genito-urinary diseases\", value: \"1200\"},\n  {label: \"Congenital anomalies\", value: \"1310\"},\n  {label: \"Road traffic accidents\", value: \"1500\"},\n  {label: \"Suicide\", value: \"1570\"},\n  {label: \"Homicide\", value: \"1580\"}\n];\n\nconst Dashboard = () => {\n  const { t } = useTranslation();\n  const [pages, setPages] = useState(run(t));\n  const [selectedPeriods, selectPeriod] = useState(\"2021\");\n  const [selectedPage, setSelectedPage] = useState(pages[0] ? pages[0].id : \"\");\n  const page = pages.find((page) => page.id === selectedPage);\n\n  const [causes, setCauses] = useState([\"0030\",\"0090\",\"0390\",\"0670\",\"0690\",\"1070\",\"1080\",\"1500\",\"1570\"]);\n\n  return page ? (\n    <div className=\"dashboard-container\">\n      <div className=\"page-selector\">\n        <Space>\n          <Select\n            allowClear\n            style={{ width: \"500px\" }}\n            placeholder=\"Please select year\"\n            value={selectedPeriods}\n            onChange={(value) => {\n              selectPeriod(value);\n            }}\n          >\n            {OPTIONS}\n          </Select>\n          <Select\n              value={selectedPage}\n              style={{ width: 300 }}\n              options={pages.map((p) => ({ value: p.id, label: p.label }))}\n              onChange={(value) => {\n                setSelectedPage(value);\n              }}\n              disabled={selectedPeriods.length === 0}\n            />\n        </Space>\n      </div>\n      { selectedPage === \"page2\" && <div className=\"page-selector-cod\">\n        <Select\n          mode=\"multiple\"\n          allowClear\n          style={{ width: \"99%\" }}\n          placeholder=\"Search\"\n          options={[...[{ label: \"All\", value: \"all\" }], ...ALL_CAUSES]}\n          value={causes}\n          onChange={(val) => {\n            if (val[val.length - 1] === \"all\") {\n              setCauses(ALL_CAUSES.map(({ value }) => value));\n            } else {\n              setCauses(val);\n            }\n          }}\n        />\n      </div> }\n      <div className=\"layout-container\">\n      { selectedPage === \"page2\" ? \n          <Layout \n            id=\"grid\" \n            className=\"layout\" \n            cols={98} \n            rowHeight={1}\n            layout={ Array(causes.length).fill().map( (o,index) => ({\n              i: `2.${index + 1}`,\n              x: index % 3 === 0 ? 0 : index % 3 === 1 ? 32 : 64,\n              y: Math.floor(index / 3) * 33,\n              w: 32,\n              h: 33\n            }) )} \n          >\n            {\n              causes.map( (code, index) => ({\n                i: `2.${index + 1}`,\n                children: [\n                  generateChildChart(\"line\", {\n                    title: `Number of Death by ${ALL_CAUSES.find( ({value}) => value === code ).label}`,\n                    dataLabels: SEXES,\n                    dataSets: AGE_RANGES.map((name) => ({\n                      name,\n                      data: Array(SEXES.length)\n                        .fill()\n                        .map(() => randomNumber(0, 30))\n                    })),\n                    colors: [\"#4C7FBC\", \"#ED7B2E\"],\n                    codes: code\n                  })\n                ]\n              }))\n              .map((widget) => {\n                return <WidgetContainer key={widget.i} widget={widget} period={selectedPeriods} />;\n              })\n            }\n          </Layout>\n          :\n          <Layout id=\"grid\" className=\"layout\" cols={98} layout={page.layout} rowHeight={1}>\n            {page.widgets.map((widget) => {\n              return <WidgetContainer key={widget.i} widget={widget} period={selectedPeriods} />;\n            })}\n          </Layout>\n      }\n        \n      </div>\n    </div>\n  ) : null;\n};\n\nexport default Dashboard;\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Form/Profile.js",["475","476"],"import { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUserEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport InputField from \"../InputField\";\nimport { Button, Col, Row, message } from \"antd\";\nimport { Backdrop, CircularProgress } from '@mui/material';\nimport moment from \"moment\";\n/* REDUX */\nimport { connect } from \"react-redux\";\nimport {\n  mutateTei,\n  mutateAttribute,\n  mutateEnrollment,\n  mutateEvent,\n} from \"../../redux/actions/data\";\nimport { changeRoute } from \"../../redux/actions/route\";\n\nimport { useTranslation } from \"react-i18next\";\n\n/*       */\nimport { Hooks } from \"tracker-capture-app-core\";\nimport { generateDhis2Payload } from \"../../utils\";\n\n// Leave page\nimport WarningDialog from \"./WarningDialog\";\n\nconst ButtonGroup = Button.Group;\nconst { useApi\n  // , useRuleEngine \n} = Hooks;\nconst Profile = ({\n  changeRoute,\n  mutateTei,\n  mutateAttribute,\n  mutateEnrollment,\n  mutateEvent,\n  metadata,\n  data,\n  openCertificateModal\n}) => {\n  const { t } = useTranslation();\n  const { dataApi, metadataApi } = useApi();\n  const { currentTei, currentEnrollment, currentEvents } = data;\n  const { programMetadata, formMapping, fullnameOption\n  } = metadata;\n\n  const [loading,setLoading]=useState(false);\n  const [exitWarning,setExitWarning]=useState(false);\n  const [certificate,setCertificate]=useState(false);\n\n  useEffect(() => {\n    if ( getTeaValue(formMapping.attributes[\"system_id\"]) === \"\" ) {\n      metadataApi.get(`/api/trackedEntityAttributes/${formMapping.attributes[\"system_id\"]}/generate.json`)\n      .then(res => {\n        mutateAttribute(formMapping.attributes[\"system_id\"], res.value);\n      });\n    }\n  },[]);\n\n  useEffect(() => {\n    if ( currentEnrollment[\"enrollmentDate\"] && currentEnrollment[\"incidentDate\"] ) {\n      if ( currentEnrollment[\"enrollmentDate\"] < currentEnrollment[\"incidentDate\"] ) {\n        message.error(\"ERROR!!! Reported Date must be greater than incidentDate\")\n      }\n    }\n\n    setCertificate (\n      currentEvents[0] &&\n      currentEvents[0].dataValues &&\n      currentEvents[0].dataValues[formMapping.dataElements[\"underlyingCOD\"]]\n    );\n  }, [data])\n\n  const getTeaMetadata = (attribute) =>\n    programMetadata.trackedEntityAttributes.find(\n      (tea) => tea.id === attribute\n    );\n\n  const getTeaValue = (attribute) => currentTei.attributes[attribute] ? currentTei.attributes[attribute] : \"\";\n\n  const populateInputField = attribute => {\n    const tea = getTeaMetadata(attribute);\n    const value = getTeaValue(attribute);\n    \n    return (\n      <InputField\n        value={ value }\n        valueType={tea.valueType}\n        label={tea.displayFormName}\n        valueSet={tea.valueSet}\n        change={(value) => {\n          mutateAttribute(tea.id, value);\n        }}\n        disabled={attribute === formMapping.attributes[\"system_id\"]}\n      />\n    );\n  };\n\n  /*\n  const hasUnderlying = () => {\n    const currentEvent = data.currentEvents.find((event) => {\n      return event.programStage === formMapping.programStage;\n    });\n    return (\n      currentEvent &&\n      currentEvent.dataValues &&\n      currentEvent.dataValues[formMapping.dataElements[\"underlyingCOD\"]]\n    );\n  };\n  */\n\n  const renderDOBGroup = () => {\n    const dob = getTeaMetadata(formMapping.attributes[\"dob\"]);\n    const age = getTeaMetadata(formMapping.attributes[\"age\"]);\n    const isEstimated = getTeaMetadata(formMapping.attributes[\"estimated_dob\"]);\n    return (\n      <>\n        <Row justify=\"start\" align=\"middle\">\n          <Col>\n            <InputField\n              value={getTeaValue(formMapping.attributes[\"estimated_dob\"])}\n              valueType={isEstimated.valueType}\n              // label={}\n              valueSet={isEstimated.valueSet}\n              change={(value) => {\n                mutateAttribute(isEstimated.id, value);\n              }}\n            />\n          </Col>\n          <Col>\n            <div className=\"input-label\">{isEstimated.displayFormName}</div>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <InputField\n              value={getTeaValue(formMapping.attributes[\"dob\"])}\n              // valueType={dob.valueType}\n              valueType={\"DATE_WITH_RANGE\"}\n              label={dob.displayFormName}\n              valueSet={dob.valueSet}\n              change={(value) => {\n                mutateAttribute(dob.id, value);\n                const age_cal = Math.round(moment(currentEnrollment.incidentDate, \"YYYY-MM-DD\").diff(\n                  moment(getTeaValue(formMapping.attributes[\"dob\"]), \"YYYY-MM-DD\"),\n                  \"years\",\n                  true\n                ));\n                if (age_cal > 150) \n                  message.error(\"Age can't be greater than 150\")\n                else if (age_cal < 0)\n                  message.error(\"Age can't be negative number\")\n                else \n                  mutateAttribute(age.id, age_cal);\n              }}\n              disabledDate={current => current && current >= moment().startOf('day')}\n            />\n          </Col>\n          <Col>\n            <InputField\n              value={getTeaValue(formMapping.attributes[\"age\"])}\n              valueType={age.valueType}\n              label={age.displayFormName}\n              valueSet={age.valueSet}\n              change={(value) => {\n                (value > 150) ?\n                  message.error(\"Age can't be greater than 150\")\n                  : (value < 0) ? \n                    message.error(\"Age can't be negative number\")\n                    : mutateAttribute(age.id, Math.round(value));\n              }}\n            />\n          </Col>\n        </Row>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"profile-section-container\">\n      <Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={loading}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <WarningDialog \n        open={exitWarning}\n        handleCancel={() => {\n          setExitWarning(false);\n        }}\n        handleOk={() => {\n          mutateTei(\"isDirty\", false);\n          mutateEnrollment(\"isDirty\", false);\n          mutateEvent(currentEvents[0].event, \"isDirty\", false);\n          changeRoute(\"list\");\n        }}\n      ></WarningDialog>\n      <div className=\"section-title section-title-profile\">\n        <FontAwesomeIcon icon={faUserEdit} style={{ fontSize: 15 }} />\n        &nbsp; {t(\"profile\")}\n      </div>\n      <div className=\"profile-section\">\n        <div className=\"profile-content\">\n          <InputField\n            value={currentEnrollment.enrollmentDate || \"\"}\n            label={t(\"reportedDate\")}\n            valueType={\"DATE_WITH_RANGE\"}\n            disabledDate={current => current && current >= moment().startOf('day')}\n            change={(value) => {\n              mutateEnrollment(\"enrollmentDate\", value);\n            }}\n          />\n          <InputField\n            value={currentEnrollment.incidentDate || \"\"}\n            label={t(\"incidentDate\")}\n            valueType={\"DATE_WITH_RANGE\"}\n            disabledDate={current => current && current >= moment().startOf('day')}\n            change={(value) => {\n              mutateEnrollment(\"incidentDate\", value);\n              currentEvents.forEach((event) => {\n                mutateEvent(event.event, \"eventDate\", value);\n                mutateEvent(event.event, \"dueDate\", value);\n              });\n            }}\n          />\n          {/* {attributes\n            .slice(0, 3)\n            .map((attribute) => populateInputField(attribute))} */}\n          {populateInputField(formMapping.attributes[\"system_id\"])}\n          {fullnameOption !== \"noname\" && populateInputField(formMapping.attributes[\"given_name\"])}\n          {fullnameOption === \"firstmidlastname\" && populateInputField(formMapping.attributes[\"middle_name\"])}\n          {(fullnameOption !== \"noname\" && fullnameOption !== \"fullname\") && populateInputField(formMapping.attributes[\"family_name\"])}\n          {renderDOBGroup()}\n          {/* {attributes.slice(3).map((attribute) => populateInputField(attribute))} */}\n          {populateInputField(formMapping.attributes[\"sex\"])}\n          {populateInputField(formMapping.attributes[\"address\"])}\n\n\n          {/* For other attributes */}\n          {programMetadata.trackedEntityAttributes.filter( \n            ({id}) => !Object.values(formMapping.attributes).find( tea => tea === id ) \n          ).map( tea => populateInputField(tea.id) )}\n        </div>\n        <div className=\"profile-button\">\n          <ButtonGroup\n            style={{\n              // float: \"right\",\n              padding: \"5px\",\n            }}\n          >\n            <Button\n              type=\"primary\"\n              onClick={async () => {\n                setLoading(true);\n                const { currentTei, currentEnrollment } = generateDhis2Payload(\n                  data,\n                  programMetadata\n                );\n                await dataApi.pushTrackedEntityInstance(\n                  currentTei,\n                  programMetadata.id\n                );\n                await dataApi.pushEnrollment(\n                  currentEnrollment,\n                  programMetadata.id\n                );\n                mutateTei(\"isSaved\", true);\n\n                // Dirty Check\n                mutateTei(\"isDirty\", false);\n                mutateEnrollment(\"isDirty\", false);\n\n\n                // Notification\n                setLoading(false);\n                message.success(\"Profile is saved successfully!\")\n              }}\n            >\n            {\n              t(\"save\")\n            }\n            </Button>\n            <Button\n              type=\"danger\"\n              onClick={() => {\n                if ( currentTei.isDirty || currentEnrollment.isDirty || currentEvents[0].isDirty ) {\n                  setExitWarning(true);\n                }\n                else {\n                  changeRoute(\"list\");\n                }\n              }}\n            >\n            {\n              t(\"cancel\")\n            }\n            </Button>\n            <Button disabled={!certificate} onClick={openCertificateModal}>\n            {\n              t(\"printCertificate\")\n            }\n            </Button>\n          </ButtonGroup>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    metadata: state.metadata,\n    data: state.data,\n  };\n};\nconst mapDispatchToProps = {\n  changeRoute,\n  mutateTei,\n  mutateAttribute,\n  mutateEnrollment,\n  mutateEvent,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Form/DeathCertificate.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Form/Stage.js",["477","478","479","480","481","482","483"],"\n\nimport { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { connect } from \"react-redux\";\n\n/* Styling tools */\nimport {\n  faNotesMedical,\n  // faQuestionCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button, Tabs, message } from \"antd\";\nimport { Backdrop, CircularProgress } from '@mui/material';\nimport moment from \"moment\";\nimport InputField from \"../InputField\";\nimport Icd11Tool from \"../Icd11Tool/EmbeddedIcd11Tool\";\nimport \"./stage.css\";\n\n/* REDUX */\n\nimport {\n  mutateEvent,\n  mutateDataValue,\n  initNewEvent,\n} from \"../../redux/actions/data\";\n\n/* Utils */\nimport { Hooks } from \"tracker-capture-app-core\";\nimport { generateCode, generateDhis2Payload } from \"../../utils\";\nconst ButtonGroup = Button.Group;\nconst { TabPane } = Tabs;\nconst { useApi } = Hooks;\n\n\nconst Stage = ({\n  metadata,\n  data,\n  mutateEvent,\n  mutateDataValue,\n  initNewEvent,\n}) => {\n  const { t } = useTranslation();\n  const { dataApi } = useApi();\n\n  const [icdTool, setIcdTool] = useState(false);\n  const [activeCauseOfDeath, setActiveCauseOfDeath] = useState(\"\");\n  const [causeOfDeaths, setCauseOfDeaths] = useState(null);\n  const [checkBoxUnderlying, setCheckBoxUnderlying] = useState(\"\");\n  const [flagUnderlying, setFlagUnderlying] = useState(false);\n  const [loading,setLoading]=useState(false);\n\n  const {\n    currentEnrollment,\n    currentTei: { attributes },\n    currentEnrollment: { enrollmentDate: currentTeiDateOfDeath }\n  } = data;\n  const { programMetadata, formMapping, icd11Options, femaleCode, icdApi_clientToken, keyUiLocale } = metadata;\n  const currentTeiSexAttributeValue = attributes[formMapping.attributes[\"sex\"]];\n  const currentTeiDateOfBirthAttributeValue = attributes[formMapping.attributes[\"dob\"]];\n  const currentTeiAgeAttributeValue = attributes[formMapping.attributes[\"age\"]];\n\n  const age = currentTeiAgeAttributeValue ? currentTeiAgeAttributeValue : Math.abs(\n    moment(currentTeiDateOfDeath, \"YYYY-MM-DD\").diff(\n      moment(currentTeiDateOfBirthAttributeValue, \"YYYY-MM-DD\"),\n      \"years\",\n      true\n    )\n  );\n  const programStage = programMetadata.programStages.find(\n    (ps) => ps.id === formMapping.programStage\n  );\n  const currentEvent = data.currentEvents.find((event) => {\n    return event.programStage === formMapping.programStage;\n  });\n  const returnInitValue = (de) => {\n    return currentEvent ? (currentEvent.dataValues[de] ? currentEvent.dataValues[de] : \"\") : \"\";\n  };\n  const isShowMaternalDeath = () => currentTeiSexAttributeValue === femaleCode && age >= 10;\n  const isShowFetalOrInfantDeath = () => age <= 1;\n\n  useEffect(() => {\n    if (currentEvent && !isShowFetalOrInfantDeath()) {\n      [\n        formMapping.dataElements[\"multiple_pregnancies\"],\n        formMapping.dataElements[\"stillborn\"],\n        formMapping.dataElements[\"hours_newborn_survived\"],\n        formMapping.dataElements[\"birth_weight\"],\n        formMapping.dataElements[\"completedWeeks_pregnancy\"],\n        formMapping.dataElements[\"age_mother\"],\n        formMapping.dataElements[\"pregnancy_conditions\"],\n      ].map((deId) => mutateDataValue(currentEvent.event, deId, \"\"));\n      mutateEvent(currentEvent.event, \"isDirty\", false);\n    }\n  }, [age]);\n\n  useEffect(() => {\n    if (currentEvent && !isShowMaternalDeath()) {\n      [\n        formMapping.dataElements[\"pregnancy_inLastYear\"], \n        formMapping.dataElements[\"time_from_pregnancy\"], \n        formMapping.dataElements[\"pregnancy_contributed_to_death\"]\n      ].map((deId) =>\n        mutateDataValue(currentEvent.event, deId, \"\")\n      );\n      mutateEvent(currentEvent.event, \"isDirty\", false);\n    }\n  }, [currentTeiSexAttributeValue, age]);\n\n  useEffect(() => {\n    if (!currentEvent) {\n      const eventId = generateCode();\n      initNewEvent(eventId, programStage.id);\n      mutateEvent(eventId, \"eventDate\", currentEnrollment.incidentDate);\n      mutateEvent(eventId, \"dueDate\", currentEnrollment.incidentDate);\n\n      // Dirty Check\n      mutateEvent(eventId, \"isDirty\", false);\n    }\n    const cods = {\n      [formMapping.dataElements[\"codA\"]]: {\n        code: returnInitValue(formMapping.dataElements[\"codA\"]),\n        label: returnInitValue(formMapping.dataElements[\"codA_name\"]),\n        underlying: returnInitValue(formMapping.dataElements[\"codA_underlying\"]),\n        entityId: returnInitValue(formMapping.dataElements[\"codA_entityId\"])\n      },\n      [formMapping.dataElements[\"codB\"]]: {\n        code: returnInitValue(formMapping.dataElements[\"codB\"]),\n        label: returnInitValue(formMapping.dataElements[\"codB_name\"]),\n        underlying: returnInitValue(formMapping.dataElements[\"codB_underlying\"]),\n        entityId: returnInitValue(formMapping.dataElements[\"codB_entityId\"])\n      },\n      [formMapping.dataElements[\"codC\"]]: {\n        code: returnInitValue(formMapping.dataElements[\"codC\"]),\n        label: returnInitValue(formMapping.dataElements[\"codC_name\"]),\n        underlying: returnInitValue(formMapping.dataElements[\"codC_underlying\"]),\n        entityId: returnInitValue(formMapping.dataElements[\"codC_entityId\"])\n      },\n      [formMapping.dataElements[\"codD\"]]: {\n        code: returnInitValue(formMapping.dataElements[\"codD\"]),\n        label: returnInitValue(formMapping.dataElements[\"codD_name\"]),\n        underlying: returnInitValue(formMapping.dataElements[\"codD_underlying\"]),\n        entityId: returnInitValue(formMapping.dataElements[\"codD_entityId\"])\n      },\n    };\n    setCauseOfDeaths(cods);\n  }, []);\n\n  useEffect(() => {\n    causeOfDeaths && setCheckBoxUnderlying(\n      causeOfDeaths[formMapping.dataElements[\"codA\"]].underlying\n        ? formMapping.dataElements[\"codA_underlying\"]\n        : causeOfDeaths[formMapping.dataElements[\"codB\"]].underlying\n        ? formMapping.dataElements[\"codB_underlying\"]\n        : causeOfDeaths[formMapping.dataElements[\"codC\"]].underlying\n        ? formMapping.dataElements[\"codC_underlying\"]\n        : causeOfDeaths[formMapping.dataElements[\"codD\"]].underlying\n        ? formMapping.dataElements[\"codD_underlying\"]\n        : \"\"\n    );\n  }, [causeOfDeaths])\n\n  useEffect(() => {\n    setFlagUnderlying(!flagUnderlying);\n  }, [checkBoxUnderlying])\n\n  useEffect(() => {\n    if ( causeOfDeaths ) {\n      fillUpUnderlying(causeOfDeaths);\n    }\n  }, [flagUnderlying]);\n\n  const setValueIcdField = (cod) => {\n    if (activeCauseOfDeath !== \"\") {\n      mutateDataValue(currentEvent.event, activeCauseOfDeath.code, cod[activeCauseOfDeath.code].code);\n      mutateDataValue(currentEvent.event, activeCauseOfDeath.label, cod[activeCauseOfDeath.code].label);\n      mutateDataValue(currentEvent.event, activeCauseOfDeath.underlying, cod[activeCauseOfDeath.code].underlying);\n      mutateDataValue(currentEvent.event, activeCauseOfDeath.entityId, cod[activeCauseOfDeath.code].entityId);\n\n      // RESET activeCauseOfDeath \n      setActiveCauseOfDeath(\"\");\n    }\n  }\n\n  const fillUpUnderlying = (cod) => {\n    let result = null;\n    for (const [key, value] of Object.entries(cod)) {\n      if (value.underlying) {\n        result = value;\n      }\n    }\n\n    const currentUnderlyingCoD = currentEvent && currentEvent.dataValues[formMapping.dataElements[\"underlyingCOD_code\"]] ? currentEvent.dataValues[formMapping.dataElements[\"underlyingCOD_code\"]] : \"\";\n    // Save values of underlying\n    if (currentEvent) {\n      if (result) {\n        if ( result.code !== currentUnderlyingCoD ) {\n          mutateDataValue(currentEvent.event, formMapping.dataElements[\"underlyingCOD\"], result.code);\n          mutateDataValue(currentEvent.event, formMapping.dataElements[\"underlyingCOD_code\"], result.code);\n          mutateDataValue(currentEvent.event, formMapping.dataElements[\"underlyingCOD_chapter\"], icd11Options.find( option => option.code === result.code).attributeValues.find( attrVal => attrVal.attribute.id === formMapping.optionAttributes[\"chapter\"] ).value);\n          mutateDataValue(currentEvent.event, formMapping.dataElements[\"underlyingCOD_group\"], icd11Options.find( option => option.code === result.code).attributeValues.find( attrVal => attrVal.attribute.id === formMapping.optionAttributes[\"group\"] ).value);\n        }\n      } else {\n        if (currentEvent.isDirty) {\n          mutateDataValue(currentEvent.event, formMapping.dataElements[\"underlyingCOD\"], \"\");\n          mutateDataValue(currentEvent.event, formMapping.dataElements[\"underlyingCOD_code\"], \"\");\n          mutateDataValue(currentEvent.event, formMapping.dataElements[\"underlyingCOD_chapter\"], \"\");\n          mutateDataValue(currentEvent.event, formMapping.dataElements[\"underlyingCOD_group\"], \"\");\n          mutateDataValue(currentEvent.event, formMapping.dataElements[\"underlyingCOD_report\"], \"\");\n        }\n        else {\n          mutateDataValue(currentEvent.event, formMapping.dataElements[\"underlyingCOD\"], \"\");\n          mutateDataValue(currentEvent.event, formMapping.dataElements[\"underlyingCOD_code\"], \"\");\n          mutateDataValue(currentEvent.event, formMapping.dataElements[\"underlyingCOD_chapter\"], \"\");\n          mutateDataValue(currentEvent.event, formMapping.dataElements[\"underlyingCOD_group\"], \"\");\n          mutateDataValue(currentEvent.event, formMapping.dataElements[\"underlyingCOD_report\"], \"\");\n          mutateEvent(currentEvent.event, \"isDirty\", false);\n        }\n        \n      }\n    }\n  };\n\n  // Render Inputs ( text, checkbox - note: not for code and label fields)\n  const renderInputField = (de, extraFunction, placeholder) => {\n    const foundDe = programStage.dataElements.find((dataElement) => dataElement.id === de);\n    if(!foundDe){\n      return null;\n    }\n    let disable = false;\n    if (de === formMapping.dataElements[\"underlyingCOD\"] || \n        de === formMapping.dataElements[\"underlyingCOD_chapter\"] || \n        de === formMapping.dataElements[\"underlyingCOD_group\"] || \n        de === formMapping.dataElements[\"underlyingCOD_code\"]) \n    {\n      disable = true;\n    }\n    if (\n      de === formMapping.dataElements[\"codA_underlying\"] ||\n      de === formMapping.dataElements[\"codB_underlying\"] ||\n      de === formMapping.dataElements[\"codC_underlying\"] ||\n      de === formMapping.dataElements[\"codD_underlying\"]\n    ) {\n      if (checkBoxUnderlying !== \"\" && checkBoxUnderlying !== de) {\n        disable = true;\n      }\n    }\n    return (\n      <InputField\n        value={currentEvent && currentEvent.dataValues[de] ? currentEvent.dataValues[de] : \"\"}\n        change={(value) => {\n          // check if input is underlying checkbox\n          if (extraFunction) {\n            let currentCauseOfDeath = causeOfDeaths;\n            let id = null;\n            switch (de) {\n              case formMapping.dataElements[\"codA_underlying\"]:\n                id = formMapping.dataElements[\"codA\"];\n                break;\n              case formMapping.dataElements[\"codB_underlying\"]:\n                id = formMapping.dataElements[\"codB\"];\n                break;\n              case formMapping.dataElements[\"codC_underlying\"]:\n                id = formMapping.dataElements[\"codC\"];\n                break;\n              case formMapping.dataElements[\"codD_underlying\"]:\n                id = formMapping.dataElements[\"codD\"];\n                break;\n              default:\n                break;\n            }\n            // if (value) {\n            //   setCheckBoxUnderlying(de);\n            // } else {\n            //   setCheckBoxUnderlying(\"\");\n            // }\n            // set underlying\n            if (id) {\n              for (const [key, val] of Object.entries(currentCauseOfDeath)) {\n                if (key === id) {\n                  val.underlying = value;\n                } else {\n                  val.underlying = false;\n                }\n              }\n              // setFlagUnderlying(!flagUnderlying);\n              setCauseOfDeaths({\n                ...causeOfDeaths,\n                ...currentCauseOfDeath\n              });\n            }\n          }\n          mutateDataValue(currentEvent.event, de, value);\n        }}\n        valueType={foundDe.valueType}\n        // label={foundDe.displayFormName}\n        valueSet={foundDe.valueSet}\n        disabled={disable}\n        placeholder={placeholder}\n      />\n    );\n  };\n\n  const renderCauseOfDeathsInputField = (codCode, codName, codEntityId, codUnderlying) => {\n    return (\n      <InputField\n        addonBefore={\n          currentEvent ? currentEvent.dataValues[codCode] ? <b>{currentEvent.dataValues[codCode]}</b> : \"\" : \"\"\n        }\n        value={currentEvent ? (currentEvent.dataValues[codName] ? currentEvent.dataValues[codName] : \"\") : \"\"}\n        valueType=\"TEXT\"\n        click={() => {\n          setActiveCauseOfDeath({\n            // ...activeCauseOfDeath,\n            label: codName,\n            code: codCode,\n            entityId: codEntityId,\n            underlying: codUnderlying\n          });\n          setIcdTool(true);\n        }}\n        placeholder={\"Click here for ICD 11 code\"}\n        allowClear={true}\n        change={ value => {\n          if ( value === \"\" ) {\n            mutateDataValue(currentEvent.event, codCode, \"\");\n            mutateDataValue(currentEvent.event, codName, \"\");\n            mutateDataValue(currentEvent.event, codUnderlying, false);\n            causeOfDeaths[codCode].code = \"\";\n            causeOfDeaths[codCode].label = \"\";\n            causeOfDeaths[codCode].underlying = false;\n            setCauseOfDeaths({ ...causeOfDeaths });\n          }\n        } }\n      />\n    );\n  };\n\n  const renderOtherSection = section => {\n    return (\n      <div className=\"stage-section\">\n        <div className=\"stage-section-title\">{section.name}</div>\n        <div className=\"stage-section-content\">\n          <table className=\"other-section-table\">\n            <tbody>\n            {\n              section.dataElements.map( ({id}) => <tr>\n                <td>{programMetadata.programStages[0].dataElements.find( de => de.id === id ).displayFormName}</td>\n                <td>\n                  {renderInputField(id)}\n                </td>\n              </tr>)\n            }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )\n  }\n\n  const detectUnderlyingCauseOfDeath = async () => {\n    let headers = new Headers();\n    headers.append(\"accept\", \"application/json\");\n    headers.append(\"API-Version\", \"v2\");\n    headers.append(\"Accept-Language\", keyUiLocale);\n    headers.append(\"Authorization\", `Bearer ${icdApi_clientToken}`);\n    const icdApiUrl = `https://id.who.int/icd/release/11/2023-01/doris?causeOfDeathCodeA=${causeOfDeaths[formMapping.dataElements[\"codA\"]].code}&causeOfDeathCodeB=${causeOfDeaths[formMapping.dataElements[\"codB\"]].code}&causeOfDeathCodeC=${causeOfDeaths[formMapping.dataElements[\"codC\"]].code}&causeOfDeathCodeD=${causeOfDeaths[formMapping.dataElements[\"codD\"]].code}`;\n    const result = await fetch(icdApiUrl, {\n      headers: headers\n    })\n    .then((result) => {\n      return result.json();\n    })\n    .catch((err) => {\n      return err;\n    });\n    const underlyingCode = result.stemCode;\n    if ( underlyingCode !== \"\" ) {\n      const cods = {\n        [formMapping.dataElements[\"codA\"]]: {\n          ...causeOfDeaths[formMapping.dataElements[\"codA\"]],\n          underlying: underlyingCode === causeOfDeaths[formMapping.dataElements[\"codA\"]].code,\n        },\n        [formMapping.dataElements[\"codB\"]]: {\n          ...causeOfDeaths[formMapping.dataElements[\"codB\"]],\n          underlying: underlyingCode === causeOfDeaths[formMapping.dataElements[\"codB\"]].code,\n        },\n        [formMapping.dataElements[\"codC\"]]: {\n          ...causeOfDeaths[formMapping.dataElements[\"codC\"]],\n          underlying: underlyingCode === causeOfDeaths[formMapping.dataElements[\"codC\"]].code,\n        },\n        [formMapping.dataElements[\"codD\"]]: {\n          ...causeOfDeaths[formMapping.dataElements[\"codD\"]],\n          underlying: underlyingCode === causeOfDeaths[formMapping.dataElements[\"codD\"]].code,\n        }\n      };\n\n      mutateDataValue(currentEvent.event, formMapping.dataElements[\"codA_underlying\"], cods[formMapping.dataElements[\"codA\"]].underlying);\n      mutateDataValue(currentEvent.event, formMapping.dataElements[\"codB_underlying\"], cods[formMapping.dataElements[\"codB\"]].underlying);\n      mutateDataValue(currentEvent.event, formMapping.dataElements[\"codC_underlying\"], cods[formMapping.dataElements[\"codC\"]].underlying);\n      mutateDataValue(currentEvent.event, formMapping.dataElements[\"codD_underlying\"], cods[formMapping.dataElements[\"codD\"]].underlying);\n      mutateDataValue(currentEvent.event, formMapping.dataElements[\"underlyingCOD_report\"], result.report);\n\n      setCauseOfDeaths(cods);\n    };\n  }\n\n  const getUcodResult = () => currentEvent && currentEvent.dataValues[formMapping.dataElements[\"underlyingCOD_report\"]] ? currentEvent.dataValues[formMapping.dataElements[\"underlyingCOD_report\"]] : t(\"note_WHO_digital_open_rule_integrated_cause_of_death_selection_Doris\");\n\n  return (\n    <div className=\"stage-section-container\">\n      <Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={loading}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <Icd11Tool\n        visible={icdTool}\n        setVisible={setIcdTool}\n        onSelect={(cod) => {\n          const selectedCod = {\n            code: cod.code,\n            label: cod.title\n              .replace(/<em class='found'>/g, \"\")\n              .replace(/<em class='nonwbe'>/g, \"\")\n              .replace(/<[/]em>/g, \"\"),\n            uri: cod.foundationUri\n          };\n          causeOfDeaths[activeCauseOfDeath.code].code = selectedCod.code;\n          causeOfDeaths[activeCauseOfDeath.code].label = selectedCod.label;\n          causeOfDeaths[activeCauseOfDeath.code].underlying = false;\n          causeOfDeaths[activeCauseOfDeath.code].entityId = selectedCod.uri.split(\"/\")[selectedCod.uri.split(\"/\").length - 1];\n          setValueIcdField(causeOfDeaths);\n          setCauseOfDeaths({ ...causeOfDeaths });\n        }}\n        defaultValue={{\n          title: (currentEvent && currentEvent.dataValues[activeCauseOfDeath.label]) || \"\",\n          code: (currentEvent && currentEvent.dataValues[activeCauseOfDeath.code]) || \"\"\n        }}\n      />\n      <div className=\"section-title section-title-stage\">\n        <FontAwesomeIcon icon={faNotesMedical} style={{ fontSize: 15 }} />\n        &nbsp; {t(\"causeOfDeath\")}\n      </div>\n      <div className=\"stage-sections-container\">\n        <Tabs defaultActiveKey=\"1\" type=\"card\">\n          <TabPane tab=\"Frame A\" key=\"a\">\n            <div className=\"tab-container\">\n              <div className=\"stage-section\">\n                <div className=\"stage-section-title\">{t(\"medicalData\")}</div>\n                <div className=\"stage-section-content\">\n                  <table className=\"medical-data-table\">\n                    <tbody>\n                      <tr>\n                        <td\n                          colSpan=\"5\"\n                          style={{\n                            fontWeight: \"bold\",\n                            textAlign: \"left\",\n                            backgroundColor: \"#f5f5f5\"\n                          }}\n                        >\n                        {\n                          t(\"reasonLeadingToDeath\")\n                        }\n                        </td>\n                      </tr>\n                      <tr>\n                        <td colSpan=\"3\" style={{ width: \"70%\" }}>\n                        {t(\"causeOfDeath\")}\n                        </td>\n                        <td>{t(\"timeFromOnsetToDeath\")}</td>\n                        <td>{t(\"underlying\")}</td>\n                      </tr>\n                      <tr>\n                        <td>{t(\"immediate\")}</td>\n                        <td>A</td>\n                        <td>\n                          <div className=\"two-fields-container\">\n                            {renderInputField(formMapping.dataElements[\"codA_other_name\"],undefined,\"Enter Diagnosis (Free text)\")}\n                            {/* {renderInputField(formMapping.dataElements[\"codA_other_name\"])} */}\n                            {renderCauseOfDeathsInputField(\n                              formMapping.dataElements[\"codA\"],\n                              formMapping.dataElements[\"codA_name\"],\n                              formMapping.dataElements[\"codA_entityId\"],\n                              formMapping.dataElements[\"codA_underlying\"]\n                            )}\n                          </div>\n                        </td>\n                        <td>\n                          <div className=\"two-fields-container\">\n                            {renderInputField(formMapping.dataElements[\"codA_time\"])}\n                            {renderInputField(formMapping.dataElements[\"codA_periodType\"])}\n                          </div>\n                        </td>\n                        <td>{renderInputField(formMapping.dataElements[\"codA_underlying\"], \"underlying\")}</td>\n                      </tr>\n                      {/* <tr>\n                        <td\n                          colSpan=\"5\"\n                          style={{\n                            fontWeight: \"bold\",\n                            textAlign: \"left\",\n                            backgroundColor: \"#f5f5f5\"\n                          }}\n                        >\n                        {\n                          t(\"reportDirection\")\n                        }\n                        </td>\n                      </tr>\n                      <tr>\n                        <td colSpan=\"3\">{t(\"causeOfDeath\")}</td>\n                        <td>{t(\"timeFromOnsetToDeath\")}</td>\n                        <td>{t(\"underlying\")}</td>\n                      </tr> */}\n                      <tr>\n                        <td>{t(\"dueTo\")}</td>\n                        <td>B</td>\n                        <td>\n                          <div className=\"two-fields-container\">\n                            {renderInputField(formMapping.dataElements[\"codB_other_name\"],undefined,\"Enter Diagnosis (Free text)\")}\n                            {/* {renderInputField(formMapping.dataElements[\"codB_other_name\"])} */}\n                            {renderCauseOfDeathsInputField(\n                              formMapping.dataElements[\"codB\"],\n                              formMapping.dataElements[\"codB_name\"],\n                              formMapping.dataElements[\"codB_entityId\"],\n                              formMapping.dataElements[\"codB_underlying\"]\n                            )}\n                          </div>\n                        </td>\n                        <td>\n                          <div className=\"two-fields-container\">\n                            {renderInputField(formMapping.dataElements[\"codB_time\"])}\n                            {renderInputField(formMapping.dataElements[\"codB_periodType\"])}\n                          </div>\n                        </td>\n                        <td>{renderInputField(formMapping.dataElements[\"codB_underlying\"], \"underlying\")}</td>\n                      </tr>\n                      <tr>\n                        <td>{t(\"dueTo\")}</td>\n                        <td>C</td>\n                        <td>\n                          <div className=\"two-fields-container\">\n                            {renderInputField(formMapping.dataElements[\"codC_other_name\"],undefined,\"Enter Diagnosis (Free text)\")}\n                            {/* {renderInputField(formMapping.dataElements[\"codC_other_name\"])} */}\n                            {renderCauseOfDeathsInputField(\n                              formMapping.dataElements[\"codC\"],\n                              formMapping.dataElements[\"codC_name\"],\n                              formMapping.dataElements[\"codC_entityId\"],\n                              formMapping.dataElements[\"codC_underlying\"]\n                            )}\n                          </div>\n                        </td>\n                        <td>\n                          <div className=\"two-fields-container\">\n                            {renderInputField(formMapping.dataElements[\"codC_time\"])}\n                            {renderInputField(formMapping.dataElements[\"codC_periodType\"])}\n                          </div>\n                        </td>\n                        <td>{renderInputField(formMapping.dataElements[\"codC_underlying\"], \"underlying\")}</td>\n                      </tr>\n                      <tr>\n                        <td>{t(\"dueTo\")}</td>\n                        <td>D</td>\n                        <td>\n                          <div className=\"two-fields-container\">\n                            {renderInputField(formMapping.dataElements[\"codD_other_name\"],undefined,\"Enter Diagnosis (Free text)\")}\n                            {/* {renderInputField(formMapping.dataElements[\"codD_other_name\"])} */}\n                            {renderCauseOfDeathsInputField(\n                              formMapping.dataElements[\"codD\"],\n                              formMapping.dataElements[\"codD_name\"],\n                              formMapping.dataElements[\"codD_entityId\"],\n                              formMapping.dataElements[\"codD_underlying\"]\n                            )}\n                          </div>\n                        </td>\n                        <td>\n                          <div className=\"two-fields-container\">\n                            {renderInputField(formMapping.dataElements[\"codD_time\"])}\n                            {renderInputField(formMapping.dataElements[\"codD_periodType\"])}\n                          </div>\n                        </td>\n                        <td>{renderInputField(formMapping.dataElements[\"codD_underlying\"], \"underlying\")}</td>\n                      </tr>\n                      <tr>\n                        <td\n                          colSpan=\"5\"\n                          style={{\n                            fontWeight: \"bold\",\n                            textAlign: \"left\",\n                            backgroundColor: \"#f5f5f5\"\n                          }}\n                        >\n                        {\n                          t(\"otherReasonLeadingToDeath\")\n                        }\n                        </td>\n                      </tr>\n                      <tr>\n                        <td colSpan=\"5\">{renderInputField(formMapping.dataElements[\"codOther\"])}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n              <div className=\"stage-section\">\n                <div className=\"stage-section-title\">{t(\"results\")}</div>\n                <div className=\"stage-section-content\">\n                  <table className=\"results-table\">\n                    <tbody>\n                      <tr>\n                        <td>{t(\"icd11\")}</td>\n                        <td className=\"unselectable-field\">\n                          {renderInputField(formMapping.dataElements[\"underlyingCOD_code\"])}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>{t(\"underlyingCOD\")}</td>\n                        <td className=\"unselectable-field\">\n                          {renderInputField(formMapping.dataElements[\"underlyingCOD\"])}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>{t(\"icd11Chapter\")}</td>\n                        <td className=\"unselectable-field\">\n                          {renderInputField(formMapping.dataElements[\"underlyingCOD_chapter\"])}\n                        </td>\n                      </tr>\n                      <tr hidden=\"hidden\">\n                        <td>{t(\"icd11Grouping\")}</td>\n                        <td className=\"unselectable-field\">\n                          {renderInputField(formMapping.dataElements[\"underlyingCOD_group\"])}\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                  <div className=\"results-compute\">\n                    <Button onClick={() => detectUnderlyingCauseOfDeath()}>{\n                      t(\"compute\")\n                    }</Button> \n                    <div><pre>{getUcodResult()}</pre></div>\n                  </div>\n                </div>\n              </div>\n              {formMapping.otherSections.frameA && formMapping.otherSections.frameA.map( section => renderOtherSection(section) )}\n            </div>\n          </TabPane>\n          <TabPane tab=\"Frame B\" key=\"b\">\n            <div className=\"tab-container\">\n              {formMapping.sections.find(({name}) => name === \"Surgery\") && (<div className=\"stage-section\">\n                <div className=\"stage-section-title\">{t(\"surgery\")}</div>\n                <div className=\"stage-section-content\">\n                  <table className=\"surgery-table\">\n                    <tbody>\n                      <tr>\n                        <td>{t(\"surgeryWithin4months\")}</td>\n                        <td>{renderInputField(formMapping.dataElements[\"surgery\"])}</td>\n                        <td>{t(\"surgeryDate\")}</td>\n                        <td>{renderInputField(formMapping.dataElements[\"surgery_date\"])}</td>\n                      </tr>\n                      <tr>\n                        <td colSpan=\"1\">\n                        {\n                          t(\"surgeryReason\")\n                        }\n                        </td>\n                        <td colSpan=\"3\">{renderInputField(formMapping.dataElements[\"surgery_reason\"])}</td>\n                      </tr>\n                      <tr>\n                        <td>{t(\"autopsy\")}</td>\n                        <td>{renderInputField(formMapping.dataElements[\"autopsy\"])}</td>\n                        <td>\n                        {\n                          t(\"findings\")\n                        }\n                        </td>\n                        <td>{renderInputField(formMapping.dataElements[\"autopsy_specified\"])}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>)}\n              {formMapping.sections.find(({name}) => name === \"Manner of death\") && (<div className=\"stage-section\">\n                <div className=\"stage-section-title\">{t(\"mannerOfDeath\")}</div>\n                <div className=\"stage-section-content\">\n                  <table className=\"manner-death-table\">\n                    <tbody>\n                      <tr>\n                        <td>{t(\"mannerOfDeath\")}</td>\n                        <td>{renderInputField(formMapping.dataElements[\"mannerOfDeath\"])}</td>\n                      </tr>\n                      <tr>\n                        <td>{t(\"posisoning\")}</td>\n                        <td>{renderInputField(formMapping.dataElements[\"dateOfInjury\"])}</td>\n                      </tr>\n                      <tr>\n                        <td>{t(\"describe\")}</td>\n                        <td>{renderInputField(formMapping.dataElements[\"externalCause\"])}</td>\n                      </tr>\n                      <tr>\n                        <td>{t(\"occurrencePlace\")}</td>\n                        <td>{renderInputField(formMapping.dataElements[\"externalCause_place\"])}</td>\n                      </tr>\n                      <tr>\n                        <td>{t(\"occurrenceSpecifyPlace\")}</td>\n                        <td>{renderInputField(formMapping.dataElements[\"externalCause_specifiedPlace\"])}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>)}\n              {(formMapping.sections.find(({name}) => name === \"Fetal or infant death\") && isShowFetalOrInfantDeath()) && (<div className=\"stage-section\">\n                <div className=\"stage-section-title\">{t(\"fetalOrInfantDeath\")}</div>\n                <div className=\"stage-section-content\">\n                  <table className=\"infant-death-table\">\n                    <tbody>\n                      <tr>\n                        <td>{t(\"pregnant\")}</td>\n                        <td>{renderInputField(formMapping.dataElements[\"multiple_pregnancies\"])}</td>\n                        <td>{t(\"stillborn\")}</td>\n                        <td>{renderInputField(formMapping.dataElements[\"stillborn\"])}</td>\n                      </tr>\n                      <tr>\n                        <td>{t(\"hoursSurvived\")}</td>\n                        <td>{renderInputField(formMapping.dataElements[\"hours_newborn_survived\"])}</td>\n                        <td>{t(\"birthWeight\")}</td>\n                        <td>{renderInputField(formMapping.dataElements[\"birth_weight\"])}</td>\n                      </tr>\n                      <tr>\n                        <td>{t(\"pregnantWeeks\")}</td>\n                        <td>{renderInputField(formMapping.dataElements[\"completedWeeks_pregnancy\"])}</td>\n                        <td>{t(\"motherAge\")}</td>\n                        <td>{renderInputField(formMapping.dataElements[\"age_mother\"])}</td>\n                      </tr>\n                      <tr>\n                        <td colSpan=\"1\">{t(\"perinatal\")}</td>\n                        <td colSpan=\"3\">{renderInputField(formMapping.dataElements[\"pregnancy_conditions\"])}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>)}\n              {(formMapping.sections.find(({name}) => name === \"Maternal death\") && isShowMaternalDeath()) && (<div className=\"stage-section\">\n                <div className=\"stage-section-title\">{t(\"maternal\")}</div>\n                <div className=\"stage-section-content\">\n                  <table className=\"maternal-death-table\">\n                    <tbody>\n                      <tr>\n                        <td>{t(\"pregnancyLastYear\")}</td>\n                        <td>{renderInputField(formMapping.dataElements[\"pregnancy_inLastYear\"])}</td>\n                      </tr>\n                      <tr>\n                        <td>{t(\"timePregnancy\")}</td>\n                        <td>{renderInputField(formMapping.dataElements[\"time_from_pregnancy\"])}</td>\n                      </tr>\n                      <tr>\n                        <td>{t(\"pregnancyToDeath\")}</td>\n                        <td>{renderInputField(formMapping.dataElements[\"pregnancy_contributed_to_death\"])}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>)}\n              {formMapping.otherSections.frameB && formMapping.otherSections.frameB.map( section => renderOtherSection(section) )}\n            </div>\n          </TabPane>\n        </Tabs>\n        <div className=\"stage-save-button-container\">\n          <ButtonGroup>\n            <Button\n              type=\"primary\"\n              onClick={async () => {\n                setLoading(true);\n                const { currentEvents } = generateDhis2Payload(data, programMetadata);\n                await dataApi.pushEvents({ events: currentEvents });\n\n                // Dirty Check\n                mutateEvent(currentEvents[0].event,\"isDirty\",false);\n\n                // Notification\n                setLoading(false);\n                message.success(\"Saved Successfully!\");\n              }}\n            >\n            {\n              t(\"save\")\n            }\n            </Button>\n            <Button\n              onClick={async () => {\n                setLoading(true);\n                const { currentEvents } = generateDhis2Payload(data, programMetadata);\n                mutateEvent(currentEvents[0].event,\"dataValues\",{});\n                setLoading(false);\n              }}\n            >{\n              t(\"clear\")\n            }</Button>\n          </ButtonGroup>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    metadata: state.metadata,\n    data: state.data\n  };\n};\nconst mapDispatchToProps = { mutateEvent, mutateDataValue, initNewEvent };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stage);\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Translation/TranslationTable.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Translation/const.js",["484"],"const LANGUAGES = [\n  {\n    label: \"English\",\n    key: \"en\",\n  },\n  {\n    label: \"French\",\n    key: \"fr\",\n  }\n];\n\nconst TRANSLATION_KEYS_MAPPING = {\n  dataEntry: [\n    \"causeOfDeathApp\",\n    \"selectOrgUnit\",\n    \"newRegistration\",\n    \"search\",\n    \"list\",\n    \"exit\",\n    \"page\",\n    \"profile\",\n    \"save\",\n    \"clear\",\n    \"cancel\",\n    \"exitApp\",\n    \"orgUnit\",\n    \"certificate\",\n    \"causeOfDeath\",\n    \"frameA\",\n    \"frameB\",\n    \"medicalData\",\n    \"results\",\n    \"surgery\",\n    \"mannerOfDeath\",\n    \"fetalOrInfantDeath\",\n    \"lastUpdated\",\n    \"causeOfDeathApp\",\n    \"inputSearchText\",\n    \"select\",\n    \"triggerDesc\",\n    \"triggerAsc\",\n    \"cancelSort\",\n    \"print\",\n    \"close\",\n    \"reportedDate\",\n    \"incidentDate\",\n    \"printCertificate\",\n    \"reasonLeadingToDeath\",\n    \"timeFromOnsetToDeath\",\n    \"underlying\",\n    \"immediate\",\n    \"reportDirection\",\n    \"dueTo\",\n    \"otherReasonLeadingToDeath\",\n    \"underlyingCOD\",\n    \"icd11Chapter\",\n    \"icd11Grouping\",\n    \"icd11\",\n    \"surgeryWithin4months\",\n    \"surgeryDate\",\n    \"surgeryReason\",\n    \"autopsy\",\n    \"findings\",\n    \"posisoning\",\n    \"describe\",\n    \"occurrencePlace\",\n    \"occurrenceSpecifyPlace\",\n    \"pregnant\",\n    \"stillborn\",\n    \"hoursSurvived\",\n    \"birthWeight\",\n    \"pregnantWeeks\",\n    \"motherAge\",\n    \"perinatal\",\n    \"maternal\",\n    \"pregnancyLastYear\",\n    \"timePregnancy\",\n    \"pregnancyToDeath\",\n    \"warning\",\n    \"changes_you_made_may_not_be_saved\",\n    \"stay\",\n    \"leave\",\n    \"compute\",\n    \"note_WHO_digital_open_rule_integrated_cause_of_death_selection_Doris\",\n    \"icd11_tool\",\n    \"your_selection\",\n    \"type_to_start_searching\"\n  ],\n  anacodExport: [\"pleaseSelectYear\", \"run\", \"anacodExportExcel\"],\n  dashboard: [\n    \"mortalityLevels\",\n    \"mortalityFromBroadCausesOfDeath\",\n    \"mortalityByCauseAgeAndSex\",\n    \"mortalityFromNcds\",\n    \"mostFrequentCauseOfDeath\",\n    \"deathsByIcd11Chapter\",\n    \"mortalityFromBoardCausesOfDeath\",\n    \"proportionOfDeathFromBroadCausesAll\",\n    \"distributionOfDeathByBroadCausesAndAgeGroups\",\n    \"overViewDistributionOfDeath\",\n    \"clickOnBubleForDetail\",\n    \"communicable\",\n    \"nonCommunicable\",\n    \"externalCauses\",\n    \"illDefined\",\n    \"numberOfDeathBy\",\n    \"tuberculosis\",\n    \"sexuallyTransmittedDiseasesExcludingHiv\",\n    \"hiv\",\n    \"diarrhoealDiseases\",\n    \"pertussis\",\n    \"poliomyelitis\",\n    \"diphtheria\",\n    \"measles\",\n    \"tetanus\",\n    \"meningitis\",\n    \"hepatitisB\",\n    \"hepatitisC\",\n    \"malaria\",\n    \"tropicalClusterDiseases\",\n    \"lowerRespiratoryInfections\",\n    \"maternalConditions\",\n    \"conditionsArisingDuringThePerinatalPeriod\",\n    \"nutritionalDeficiencies\",\n    \"mouthAndOropharynxCancers\",\n    \"oesophagusCancer\",\n    \"stomachCancer\",\n    \"colonAndRectumCancers\",\n    \"liverCancer\",\n    \"pancreasCancer\",\n    \"tracheaBronchusAndLungCancers\",\n    \"melanomaAndOtherSkinCancers\",\n    \"breastCancer\",\n    \"cervixUteriCancer\",\n    \"corpusUteriCancer\",\n    \"ovaryCancer\",\n    \"prostateCancer\",\n    \"bladderCancer\",\n    \"lymphomasAndMultipleMyeloma\",\n    \"leukaemia\",\n    \"alzheimerAndOtherDementias\",\n    \"parkinsonDisease\",\n    \"hypertensiveDisease\",\n    \"ischaemicHeartDisease\",\n    \"cerebrovascularDisease\",\n    \"chronicObstructivePulmonaryDisease\",\n    \"asthma\",\n    \"digestiveDiseases\",\n    \"genitoUrinaryDiseases\",\n    \"congenitalAnomalies\",\n    \"roadTrafficAccidents\",\n    \"suicide\",\n    \"homicide\",\n    \"mortaliryFromNcds\",\n    \"malignantNeoplasms\",\n    \"diabetesMellitus\",\n    \"cardiovascularDiseases\",\n    \"respiratoryDiseases\",\n    \"numberOfDeathBySexAndAge\",\n    \"numberOfDeathByMonth\",\n    \"pneumonia\",\n    \"otherDiseasesOfTheDigestiveSystem\",\n    \"otherDirectObstetricDeaths\",\n    \"prematurity\",\n    \"symptomsSignAndAbnormalClinicalAndLaboratoryFindingsNotElsewhereClassified\",\n    \"otherAndUnspecifiedCongenitalMalformations\",\n    \"otherAndUnspecifiedPerinatalConditions\",\n    \"intrauterineHypoxiaAndBirthAsphyxia\",\n    \"name\",\n    \"points\",\n    \"certainInfectiousOrParasiticDiseases\",\n    \"neoplasms\",\n    \"diseasesOfTheBloodOrBloodFormingOrgans\",\n    \"diseasesOfTheImmuneSystem\",\n    \"endocrineNutritionalOrMetabolicDiseases\",\n    \"mentalBehaviouralOrNeurodevelopmentalDisorders\",\n    \"sleepWakeDisorders\",\n    \"diseasesOfTheNervousSystem\",\n    \"diseasesOfTheVisualSystem\",\n    \"diseasesOfTheEarOrMastoidProcess\",\n    \"diseasesOfTheCirculatorySystem\",\n    \"diseasesOfTheRespiratorySystem\",\n    \"diseasesOfTheDigestiveSystem\",\n    \"diseasesOfTheSkin\",\n    \"diseasesOfTheMusculoskeletalSystemOrConnectiveTissue\",\n    \"diseasesOfTheGenitourinarySystem\",\n    \"conditionsRelatedToSexualHealth\",\n    \"pregnancyChildbirthOrThePuerperium\",\n    \"certainConditionsOriginatingInThePerinatalPeriod\",\n    \"developmentalAnomalies\",\n    \"symptomsSignsOrClinicalFindingsNotElsewhereClassified\",\n    \"injuryPoisoningOrCertainOtherConsequencesOfExternalCauses\",\n    \"externalCausesOfMorbidityOrMortality\",\n    \"factorsInfluencingHealthStatusOrContactWithHealthServices\",\n    \"codesForSpecialPurposes\",\n    \"numberOfMalariaDeathsByMonth\",\n    \"numberOfMalariaDeathsPlaceOfDeath\",\n    \"numberOfMalariaDeathsBySex\",\n    \"numberOfMalariaDeathsBySexAndDetailedAgeGroup\",\n    \"numberOfMalariaDeathsAndPercentOfAllMalariaDeathsByBroadAgeGroup\",\n    \"numberOfMalariaDeathsComparedWithOtherCausesOfDeaths\",\n    \"percentOfTotalMalariaDeaths\",\n    \"numberOfMalariaDeaths\",\n    \"otherCauses\",\n    \"numberOfTuberculosisDeathsByMonth\",\n    \"numberOfTuberculosisDeathsByPlaceOfDeath\",\n    \"numberOfTuberculosisDeathsBySex\",\n    \"numberOfTuberculosisDeathsBySexAndDetailedAgeGroup\",\n    \"numberOfTuberculosisDeathsAndPercentOfAllTuberculosisDeathsByBroadAgeGroup\",\n    \"numberOfTuberculosisDeathsComparedWithOtherCausesOfDeaths\",\n    \"percentOfTotalTuberculosisDeaths\",\n    \"numberOfTuberculosisDeaths\",\n    \"numberOfAidsDeathsByMonth\",\n    \"numberOfAidsDeathsPlaceOfDeath\",\n    \"numberOfAidsDeathsBySex\",\n    \"numberOfAidsDeathsBySexAndDetailedAgeGroup\",\n    \"numberOfAidsDeathsAndPercentOfAllAidsDeathsByBroadAgeGroup\",\n    \"numberOfAidsDeathsComparedWithOtherCausesOfDeaths\",\n    \"aids\",\n    \"percentOfTotalAidsDeaths\",\n    \"numberOfAidsDeaths\",\n    \"tb\",\n    \"other\",\n    \"numberOfDeath\",\n    \"percentOfTotalDeathAllCauses\",\n    \"numberOfDeathsFromTbAidsMalariaAndOtherCausesAgeGroup\",\n    \"distributionOfDeathsByTbAidsAndMalariaBySexAndAge\",\n    \"percentageOfDeathsFromTbAidsAndMalariaOutOfAllDeathsFromCommunicableDiseases\",\n    \"numberOfTbAndAidsDeathsAndPercentOfTheseDeathsOutOfAllDeaths15YearsAndAbove\",\n  ],\n  administration: [\n    \"step1Installation\",\n    \"step2Attribute\",\n    \"step3FrameA\",\n    \"step4FrameB\",\n    \"step5OUs\",\n    \"step6Users\",\n    \"step7Review\",\n    \"errorMissingTET\",\n    \"step1Attributes\",\n    \"step2Certificate\",\n    \"saveSuccessful\",\n    \"selectionTitle\",\n    \"globalICDTool\",\n    \"otherICDTool\",\n    \"defaultInstallation\",\n    \"defaultInstallationInfo\",\n    \"customInstallation\",\n    \"customInstallationInfo\",\n    \"installWithDocker\",\n    \"installationWarning\",\n    \"installationWarningTitle\",\n    \"backToMaintenance\",\n    \"trackedEntityType\",\n    \"systemID\",\n    \"defaultAttribute\",\n    \"otherAttributes\",\n    \"otherAvailableAttributes\",\n    \"otherSelectedAttributes\",\n    \"defaultDEsInFrameA\",\n    \"otherSectionsInFrameA\",\n    \"availableDEs\",\n    \"selectedDEs\",\n    \"add\",\n    \"reload\",\n    \"defaultSectionsInFrameB\",\n    \"otherSectionsInFrameB\",\n    \"OULevel\",\n    \"OUGroup\",\n    \"deselect\",\n    \"selectAll\",\n    \"deselectAll\",\n    \"adminGroup\",\n    \"captureGroup\",\n    \"viewGroup\",\n    \"installing\",\n    \"waitForInstalling\",\n    \"importAttributes\",\n    \"importOptionSets\",\n    \"importTrackedEntityAttributes\",\n    \"importTrackedEntityTypes\",\n    \"importDataElements\",\n    \"importPrograms\",\n    \"importProgramStages\",\n    \"importProgramStageSections\",\n    \"importProgramIndicators\",\n    \"importIndicators\",\n    \"importOptions\",\n    \"complete\",\n    \"programID\",\n    \"defaultCertificate\",\n    \"customCertificate\",\n    \"certificateTitle\",\n    \"certificateLogo\",\n    \"upload\",\n    \"addItemBody\",\n    \"addItemFooter\",\n    \"reviewDefaultCertificate\",\n    \"certificateAddItemTitle\",\n    \"back\",\n    \"install\",\n    \"next\",\n    \"save\",\n    \"selectName\",\n    \"selectNameOption\",\n    \"selectTrackedEntityType\",\n    \"femaleOption\",\n    \"selectOption\",\n    \"noname\",\n    \"fullname\",\n    \"firstlastname\",\n    \"firstmiddlelastname\",\n    \"firstname\",\n    \"middlename\",\n    \"lastname\"\n  ],\n  translation: [\n    \"translation\",\n    \"dataEntry\",\n    \"anacodExport\",\n    \"dashboard\",\n    \"administration\",\n    \"addLanguage\",\n    \"pleaseSelectLanguage\",\n  ],\n};\n\nconst TRANSLATIONS = [\n  {\n    key: \"selectOrgUnit\",\n    translation: {\n      en: \"Select organisation unit\",\n      fr: \"Sélectionnez l'unité d'organisation\",\n    },\n  },\n  {\n    key: \"newRegistration\",\n    translation: { en: \"New Registration\", fr: \" Nouvelle inscription\" },\n  },\n  { key: \"search\", translation: { en: \"Search\", fr: \"Chercher\" } },\n  { key: \"exit\", translation: { en: \"Exit\", fr: \"Sortir\" } },\n  { key: \"page\", translation: { en: \"Page\", fr: \"Page\" } },\n  { key: \"profile\", translation: { en: \"Profile\", fr: \"Le profil\" } },\n  { key: \"save\", translation: { en: \"Save\", fr: \"Sauver\" } },\n  { key: \"cancel\", translation: { en: \"Cancel\", fr: \"Annuler\" } },\n  {\n    key: \"certificate\",\n    translation: { en: \"Certificate\", fr: \"Certificat\" },\n  },\n  {\n    key: \"causeOfDeath\",\n    translation: { en: \"Cause of Death\", fr: \"Cause de décès\" },\n  },\n  { key: \"frameA\", translation: { en: \"Frame A\", fr: \"Cadre A\" } },\n  { key: \"frameB\", translation: { en: \"Frame B\", fr: \"Cadre B\" } },\n  {\n    key: \"medicalData\",\n    translation: { en: \"Medical data\", fr: \"Données médicales\" },\n  },\n  { key: \"results\", translation: { en: \"Results\", fr: \"Résultats\" } },\n  { key: \"surgery\", translation: { en: \"Surgery\", fr: \"Opération\" } },\n  {\n    key: \"mannerOfDeath\",\n    translation: { en: \"Manner of Death\", fr: \"Manière de mourir\" },\n  },\n  {\n    key: \"fetalOrInfantDeath\",\n    translation: {\n      en: \"Fetal of Infant Death\",\n      fr: \"Mort fœtale du nourrisson\",\n    },\n  },\n  {\n    key: \"pleaseSelectYear\",\n    translation: {\n      en: \"Please select year\",\n      fr: \"Veuillez sélectionner l'année\",\n    },\n  },\n  { key: \"run\", translation: { en: \"RUN\", fr: \"COURS\" } },\n  {\n    key: \"anacodExportExcel\",\n    translation: {\n      en: \"Anacod Export (Excel)\",\n      fr: \"Export Anacode (Excel)\",\n    },\n  },\n  {\n    key: \"mortalityLevels\",\n    translation: { en: \"Mortality levels\", fr: \"Niveaux de mortalité\" },\n  },\n  {\n    key: \"mortalityFromBroadCausesOfDeath\",\n    translation: {\n      en: \"Mortality from broad causes of death\",\n      fr: \"Mortalité due aux causes générales de décès\",\n    },\n  },\n  {\n    key: \"mortalityByCauseAgeAndSex\",\n    translation: {\n      en: \"Mortality by cause, age and sex\",\n      fr: \"Mortalité par cause, âge et sexe\",\n    },\n  },\n  {\n    key: \"mortalityFromNcds\",\n    translation: { en: \"Mortality from NCDs\", fr: \"Mortalité due aux MNT\" },\n  },\n  {\n    key: \"mostFrequentCauseOfDeath\",\n    translation: {\n      en: \"Most frequent cause of death\",\n      fr: \"Cause de décès la plus fréquente\",\n    },\n  },\n  {\n    key: \"deathsByIcd11Chapter\",\n    translation: {\n      en: \"Deaths by ICD-11 Chapter\",\n      fr: \"Deaths by ICD-11 Chapter\",\n    },\n  },\n  { key: \"attributes\", translation: { en: \"Attributes\" } },\n  { key: \"next\", translation: { en: \"Next\" } },\n  { key: \"defaultAttributes\", translation: { en: \"Default attributes\" } },\n  { key: \"femaleOption\", translation: { en: \"Female option\" } },\n  { key: \"item\", translation: { en: \"Item\" } },\n  { key: \"availableAttributes\", translation: { en: \"Available attributes\" } },\n  { key: \"selectedAttributes\", translation: { en: \"Selected attributes\" } },\n  { key: \"add\", translation: { en: \"Add\", fr: \"Ajouter\" } },\n  { key: \"reload\", translation: { en: \"Reload\", fr: \"Recharger\" } },\n  {\n    key: \"translation\",\n    translation: { en: \"Translation\", fr: \"Traduction\" },\n  },\n  {\n    key: \"dataEntry\",\n    translation: { en: \"Data Entry\", fr: \"Saisie des données\" },\n  },\n  {\n    key: \"anacodExport\",\n    translation: { en: \"Anacod Export\", fr: \"Exportation d'Anacod\" },\n  },\n  {\n    key: \"dashboard\",\n    translation: { en: \"Dashboard\", fr: \"Tableau de bord\" },\n  },\n  {\n    key: \"administration\",\n    translation: { en: \"Administration\", fr: \"Administration\" },\n  },\n  {\n    key: \"exitApp\",\n    translation: { en: \"Exit App\", fr: \"Quitter l'application\" },\n  },\n  {\n    key: \"orgUnit\",\n    translation: { en: \"Org Unit\", fr: \"Unité organisationnelle\" },\n  },\n  {\n    key: \"addLanguage\",\n    translation: { en: \"Add Language\", fr: \"Ajouter une langue\" },\n  },\n  {\n    key: \"pleaseSelectLanguage\",\n    translation: {\n      en: \"Please select a language\",\n      fr: \"Veuillez sélectionner une langue\",\n    },\n  },\n  {\n    key: \"lastUpdated\",\n    translation: { en: \"Last updated\", fr: \"Dernière mise à jour\" },\n  },\n  {\n    key: \"causeOfDeathApp\",\n    translation: {\n      en: \"Cause Of Death App\",\n      fr: \" Application Cause de décès\",\n    },\n  },\n  {\n    key: \"inputSearchText\",\n    translation: {\n      en: \"Input search text\",\n      fr: \"Saisir le texte de recherche\",\n    },\n  },\n  { key: \"select\", translation: { en: \"Select\", fr: \"Sélectionner\" } },\n  {\n    key: \"triggerDesc\",\n    translation: {\n      en: \"Click to sort descending\",\n      fr: \"Cliquez pour trier par ordre décroissant\",\n    },\n  },\n  {\n    key: \"triggerAsc\",\n    translation: {\n      en: \"Click to sort ascending\",\n      fr: \"Cliquez pour trier par ordre croissant\",\n    },\n  },\n  {\n    key: \"cancelSort\",\n    translation: {\n      en: \"Click to cancel sorting\",\n      fr: \"Cliquez pour annuler le tri\",\n    },\n  },\n  {\n    key: \"step1Installation\",\n    translation: { en: \"1 - Installation\", fr: \"1 - Mise en place\" },\n  },\n  {\n    key: \"step2Attribute\",\n    translation: { en: \"2 - Attributes\", fr: \"2 - Attributs\" },\n  },\n  {\n    key: \"step3FrameA\",\n    translation: { en: \"3 - Frame A\", fr: \"3 - Cadre A\" },\n  },\n  {\n    key: \"step4FrameB\",\n    translation: { en: \"4 - Frame B\", fr: \"4 - Cadre B\" },\n  },\n  {\n    key: \"step5OUs\",\n    translation: {\n      en: \"5 - Assign OrgUnits\",\n      fr: \"5 - Attribuer des unités d'organisation\",\n    },\n  },\n  {\n    key: \"step6Users\",\n    translation: {\n      en: \"6 - Assign Users\",\n      fr: \"6 - Attribuer des utilisateurs\",\n    },\n  },\n  {\n    key: \"step7Review\",\n    translation: { en: \"7 - Review & Finish\", fr: \"7 - Réviser et terminer\" },\n  },\n  {\n    key: \"errorMissingTET\",\n    translation: {\n      en: \"ERROR Please select ALL default attributes and Tracked Entity Type.\",\n      fr: \"ERREUR Veuillez sélectionner TOUS les attributs par défaut et le type d'entité suivie.\",\n    },\n  },\n  {\n    key: \"step1Attributes\",\n    translation: { en: \"1 - Attributes\", fr: \"1 - Attributs\" },\n  },\n  {\n    key: \"step2Certificate\",\n    translation: { en: \"2 - Certificate\", fr: \"2 - Certificat\" },\n  },\n  {\n    key: \"saveSuccessful\",\n    translation: { en: \"Successfully Save!\", fr: \"Enregistrer avec succès!\" },\n  },\n  {\n    key: \"selectionTitle\",\n    translation: {\n      en: \"INSTALLATION OF WHO MCCD PACKAGE\",\n      fr: \"INSTALLATION DU PACKAGE WHO MCCD\",\n    },\n  },\n  {\n    key: \"globalICDTool\",\n    translation: {\n      en: \"Use global WHO ICD Tool url\",\n      fr: \"Utiliser l'URL de l'outil ICD global de l'OMS\",\n    },\n  },\n  {\n    key: \"otherICDTool\",\n    translation: {\n      en: \"Use other ICD Tool url\",\n      fr: \"Utiliser une autre URL de l'outil ICD\",\n    },\n  },\n  {\n    key: \"defaultInstallation\",\n    translation: {\n      en: \"Default Installation\",\n      fr: \"Installation par défaut\",\n    },\n  },\n  {\n    key: \"defaultInstallationInfo\",\n    translation: {\n      en: \"Use default MCCOD program with minimum configurations\",\n      fr: \"Utiliser le programme MCCOD par défaut avec des configurations minimales\",\n    },\n  },\n  {\n    key: \"customInstallation\",\n    translation: {\n      en: \"Custom Installation\",\n      fr: \"Installation personnalisée\",\n    },\n  },\n  {\n    key: \"customInstallationInfo\",\n    translation: {\n      en: \"Use default MCCOD program with additional metadata as you need\",\n      fr: \"Utilisez le programme MCCOD par défaut avec des métadonnées supplémentaires selon vos besoins\",\n    },\n  },\n  {\n    key: \"installWithDocker\",\n    translation: {\n      en: \"How to install ICD-11 API Server using Docker:\",\n      fr: \"Comment installer le serveur API ICD-11 à l'aide de Docker:\",\n    },\n  },\n  {\n    key: \"installationWarning\",\n    translation: {\n      en: \"COD app could not start the installation process.\",\n      fr: \"L'application COD n'a pas pu démarrer le processus d'installation.\",\n    },\n  },\n  {\n    key: \"installationWarningTitle\",\n    translation: {\n      en: \"The app setup requires Organisation Units and assigned Users. Please check whether they created.\",\n      fr: \"La configuration de l'application nécessite des unités organisationnelles et des utilisateurs affectés. Veuillez vérifier s'ils ont créé.\",\n    },\n  },\n  {\n    key: \"backToMaintenance\",\n    translation: {\n      en: \"Go to Maintenance app\",\n      fr: \"Accédez à l'application Maintenance\",\n    },\n  },\n  {\n    key: \"trackedEntityType\",\n    translation: { en: \"Tracked Entity Type\", fr: \"Type d'entité suivie\" },\n  },\n  {\n    key: \"systemID\",\n    translation: {\n      en: \"COD System ID (auto-generated)\",\n      fr: \"ID système COD (généré automatiquement)\",\n    },\n  },\n  {\n    key: \"defaultAttribute\",\n    translation: { en: \"Default attributes\", fr: \"Attributs par défaut\" },\n  },\n  {\n    key: \"otherAttributes\",\n    translation: { en: \"Other attributes\", fr: \"Autres attributs\" },\n  },\n  {\n    key: \"otherAvailableAttributes\",\n    translation: { en: \"Available attributes\", fr: \"Attributs disponibles\" },\n  },\n  {\n    key: \"otherSelectedAttributes\",\n    translation: { en: \"Selected attributes\", fr: \"Attributs sélectionnés\" },\n  },\n  {\n    key: \"defaultDEsInFrameA\",\n    translation: {\n      en: \"Default data elements (cannot be changed)\",\n      fr: \"Éléments de données par défaut (ne peuvent pas être modifiés)\",\n    },\n  },\n  {\n    key: \"otherSectionsInFrameA\",\n    translation: { en: \"Other sections\", fr: \"Autres rubriques\" },\n  },\n  {\n    key: \"availableDEs\",\n    translation: {\n      en: \"Available data elements\",\n      fr: \"Éléments de données disponibles\",\n    },\n  },\n  {\n    key: \"selectedDEs\",\n    translation: {\n      en: \"Selected data elements\",\n      fr: \"Éléments de données sélectionnés\",\n    },\n  },\n  {\n    key: \"defaultSectionsInFrameB\",\n    translation: { en: \"Default sections\", fr: \"Rubriques par défaut\" },\n  },\n  {\n    key: \"otherSectionsInFrameB\",\n    translation: { en: \"Other sections\", fr: \"Autres rubriques\" },\n  },\n  {\n    key: \"OULevel\",\n    translation: {\n      en: \"Organisation unit level:\",\n      fr: \"Niveau de l'unité d'organisation:\",\n    },\n  },\n  {\n    key: \"OUGroup\",\n    translation: {\n      en: \"Organisation unit group:\",\n      fr: \"Groupe d'unités d'organisation:\",\n    },\n  },\n  { key: \"deselect\", translation: { en: \"Deselect\", fr: \"Désélectionner\" } },\n  {\n    key: \"selectAll\",\n    translation: { en: \"Select all\", fr: \"Tout sélectionner\" },\n  },\n  {\n    key: \"deselectAll\",\n    translation: { en: \"Deselect all\", fr: \"Tout déselectionner\" },\n  },\n  {\n    key: \"adminGroup\",\n    translation: { en: \"ADMIN GROUP\", fr: \"GROUPE D'ADMINISTRATION\" },\n  },\n  {\n    key: \"captureGroup\",\n    translation: { en: \"CAPTURE GROUP\", fr: \"GROUPE DE CAPTURE\" },\n  },\n  {\n    key: \"viewGroup\",\n    translation: { en: \"VIEW GROUP\", fr: \"VOIR LE GROUPE\" },\n  },\n  {\n    key: \"installing\",\n    translation: {\n      en: \"Installing the COD app\",\n      fr: \"22 / 5,000 Translation results Translation result Installation de l'application COD\",\n    },\n  },\n  {\n    key: \"waitForInstalling\",\n    translation: {\n      en: \"Please wait untill the process done.\",\n      fr: \"Veuillez patienter jusqu'à ce que le processus soit terminé.\",\n    },\n  },\n  {\n    key: \"importAttributes\",\n    translation: {\n      en: \"Importing Attributes\",\n      fr: \"Importation d'attributs\",\n    },\n  },\n  {\n    key: \"importOptionSets\",\n    translation: {\n      en: \"Importing Option Sets\",\n      fr: \"Importation de jeux d'options\",\n    },\n  },\n  {\n    key: \"importTrackedEntityAttributes\",\n    translation: {\n      en: \"Importing Tracked Entity Attributes\",\n      fr: \"Importation des attributs d'entité suivie\",\n    },\n  },\n  {\n    key: \"importTrackedEntityTypes\",\n    translation: {\n      en: \"Importing Tracked Entity Types\",\n      fr: \"Importation de types d'entités suivies\",\n    },\n  },\n  {\n    key: \"importDataElements\",\n    translation: {\n      en: \"Importing Data Elements\",\n      fr: \"Importation d'éléments de données\",\n    },\n  },\n  {\n    key: \"importPrograms\",\n    translation: {\n      en: \"Importing Programs\",\n      fr: \"Importation de programmes\",\n    },\n  },\n  {\n    key: \"importProgramStages\",\n    translation: {\n      en: \"Importing Program Stages\",\n      fr: \"Importation des étapes du programme\",\n    },\n  },\n  {\n    key: \"importProgramStageSections\",\n    translation: {\n      en: \"Importing Program Stage Sections\",\n      fr: \"Importation de sections d'étape de programme\",\n    },\n  },\n  {\n    key: \"importProgramIndicators\",\n    translation: {\n      en: \"Importing Program Indicators\",\n      fr: \"Importation des indicateurs de programme\",\n    },\n  },\n  {\n    key: \"importIndicators\",\n    translation: {\n      en: \"Importing Indicators\",\n      fr: \"Importation d'indicateurs\",\n    },\n  },\n  {\n    key: \"importOptions\",\n    translation: { en: \"Importing Options\", fr: \"Options d'importation\" },\n  },\n  {\n    key: \"complete\",\n    translation: { en: \"Install Complete\", fr: \"Installation terminée\" },\n  },\n  {\n    key: \"programID\",\n    translation: { en: \"The program id:\", fr: \"L'identifiant du programme:\" },\n  },\n  { key: \"defaultCertificate\", translation: { en: \"Default\", fr: \"Défaut\" } },\n  {\n    key: \"customCertificate\",\n    translation: { en: \"Custom\", fr: \"Personnalisé\" },\n  },\n  { key: \"certificateTitle\", translation: { en: \"Title\", fr: \"Titre\" } },\n  { key: \"certificateLogo\", translation: { en: \"Logo\", fr: \"Logo\" } },\n  { key: \"upload\", translation: { en: \"Upload\", fr: \"Télécharger\" } },\n  {\n    key: \"addItemBody\",\n    translation: {\n      en: \"Add an item to Body\",\n      fr: \"Ajouter un élément au corps\",\n    },\n  },\n  {\n    key: \"addItemFooter\",\n    translation: {\n      en: \"Add an item to Footer\",\n      fr: \"Ajouter un élément au pied de page\",\n    },\n  },\n  {\n    key: \"reviewDefaultCertificate\",\n    translation: { en: \"Review\", fr: \"Passer en revue\" },\n  },\n  {\n    key: \"certificateAddItemTitle\",\n    translation: { en: \"Add an item to\", fr: \"Ajouter un élément à\" },\n  },\n  { key: \"print\", translation: { en: \"Print\", fr: \"Imprimer\" } },\n  { key: \"close\", translation: { en: \"Close\", fr: \"Proche\" } },\n  {\n    key: \"reportedDate\",\n    translation: { en: \"Reported Date\", fr: \"Date du rapport\" },\n  },\n  {\n    key: \"incidentDate\",\n    translation: { en: \"Date of Death\", fr: \"Date de décès\" },\n  },\n  {\n    key: \"printCertificate\",\n    translation: { en: \"Certificate\", fr: \"Certificat\" },\n  },\n  {\n    key: \"reasonLeadingToDeath\",\n    translation: {\n      en: \"Disease or condition directly leading to death\",\n      fr: \"Maladie ou affection entraînant directement la mort\",\n    },\n  },\n  {\n    key: \"timeFromOnsetToDeath\",\n    translation: {\n      en: \"Time from onset to death\",\n      fr: \"Délai entre le début et la mort\",\n    },\n  },\n  { key: \"underlying\", translation: { en: \"Underlying\", fr: \"Sous-jacent\" } },\n  { key: \"immediate\", translation: { en: \"Immediate\", fr: \"Immédiat\" } },\n  {\n    key: \"reportDirection\",\n    translation: {\n      en: \"Report chain of events in 'due to' order (B - C - D) if applicable. State the underlying cause on the lowest used line, and tick the checkbox for 'Underlying'\",\n      fr: \"Indiquez la chaîne d'événements dans l'ordre « dû à » (B - C - D), le cas échéant. Indiquez la cause sous-jacente sur la ligne utilisée la plus basse et cochez la case \\\"Sous-jacent\\\"\",\n    },\n  },\n  { key: \"dueTo\", translation: { en: \"Due to\", fr: \"En raison de\" } },\n  {\n    key: \"otherReasonLeadingToDeath\",\n    translation: {\n      en: \"Other significant conditions contributing to death (time intervals can be included in brackets after the condition)\",\n      fr: \"Autres affections importantes contribuant au décès (les intervalles de temps peuvent être inclus entre parenthèses après l'affection)\",\n    },\n  },\n  {\n    key: \"underlyingCOD\",\n    translation: {\n      en: \"Underlying cause of death\",\n      fr: \"Cause sous-jacente du décès\",\n    },\n  },\n  {\n    key: \"icd11Chapter\",\n    translation: { en: \"ICD-11 Chapter\", fr: \"Chapitre CIM-11\" },\n  },\n  {\n    key: \"icd11Grouping\",\n    translation: { en: \"ICD-11 Grouping\", fr: \"Groupement CIM-11\" },\n  },\n  { key: \"icd11\", translation: { en: \"ICD-11\", fr: \"CIM-11\" } },\n  {\n    key: \"surgeryWithin4months\",\n    translation: {\n      en: \"Was surgery performed within the last 4 weeks?\",\n      fr: \"La chirurgie a-t-elle été pratiquée au cours des 4 dernières semaines ?\",\n    },\n  },\n  {\n    key: \"surgeryDate\",\n    translation: {\n      en: \"If yes, please specify date of surgery\",\n      fr: \"Si oui, veuillez préciser la date de l'intervention\",\n    },\n  },\n  {\n    key: \"surgeryReason\",\n    translation: {\n      en: \"If yes, please specify reason for surgery (disease or condition)\",\n      fr: \"Si oui, veuillez préciser la raison de la chirurgie (maladie ou affection)\",\n    },\n  },\n  {\n    key: \"autopsy\",\n    translation: {\n      en: \"Was an autopsy requested?\",\n      fr: \"Une autopsie a-t-elle été demandée ?\",\n    },\n  },\n  {\n    key: \"findings\",\n    translation: {\n      en: \"If yes, were the findings used in the certification?\",\n      fr: \"Si oui, les résultats ont-ils été utilisés dans la certification ?\",\n    },\n  },\n  {\n    key: \"posisoning\",\n    translation: {\n      en: \"If external cause or posisoning, date of injury\",\n      fr: \"Si cause externe ou intoxication, date de la blessure\",\n    },\n  },\n  {\n    key: \"describe\",\n    translation: {\n      en: \"Please describe how external cause occurred (if poisoning, please specify poisoning agent)\",\n      fr: \"Veuillez décrire comment la cause externe s'est produite (en cas d'empoisonnement, veuillez préciser l'agent empoisonnant)\",\n    },\n  },\n  {\n    key: \"occurrencePlace\",\n    translation: {\n      en: \"Place of occurrence of the external cause\",\n      fr: \"Lieu de survenance de la cause externe\",\n    },\n  },\n  {\n    key: \"occurrenceSpecifyPlace\",\n    translation: {\n      en: \"Specify place of occurence of the external cause\",\n      fr: \"Préciser le lieu d'apparition de la cause externe\",\n    },\n  },\n  {\n    key: \"pregnant\",\n    translation: { en: \"Multiple pregnancy?\", fr: \"Grossesse multiple?\" },\n  },\n  { key: \"stillborn\", translation: { en: \"Stillborn?\", fr: \"Mort-né?\" } },\n  {\n    key: \"hoursSurvived\",\n    translation: {\n      en: \"If death within 24hrs specify number of hours survived\",\n      fr: \"Si décès dans les 24h précisez le nombre d'heures de survie\",\n    },\n  },\n  {\n    key: \"birthWeight\",\n    translation: {\n      en: \"Birth weight (in grams)\",\n      fr: \"Poids à la naissance (en grammes)\",\n    },\n  },\n  {\n    key: \"pregnantWeeks\",\n    translation: {\n      en: \"Number of completed weeks of pregnancy\",\n      fr: \"Nombre de semaines de grossesse révolues\",\n    },\n  },\n  {\n    key: \"motherAge\",\n    translation: {\n      en: \"Age of mother (in years)\",\n      fr: \"Âge de la mère (en années)\",\n    },\n  },\n  {\n    key: \"perinatal\",\n    translation: {\n      en: \"If death was perinatal, state conditions of mother that affected the fetus and newborn\",\n      fr: \"Si le décès était périnatal, indiquer les conditions de la mère qui ont affecté le fœtus et le nouveau-né\",\n    },\n  },\n  {\n    key: \"maternal\",\n    translation: { en: \"Maternal death\", fr: \"Décès maternel\" },\n  },\n  {\n    key: \"pregnancyLastYear\",\n    translation: {\n      en: \"For women, was the deceased pregnant within the past year?\",\n      fr: \"Pour les femmes, la personne décédée était-elle enceinte au cours de la dernière année?\",\n    },\n  },\n  {\n    key: \"timePregnancy\",\n    translation: {\n      en: \"If yes, time from pregnancy\",\n      fr: \"Si oui, le temps depuis la grossesse\",\n    },\n  },\n  {\n    key: \"pregnancyToDeath\",\n    translation: {\n      en: \"Did the pregnancy contribute to the death?\",\n      fr: \"La grossesse a-t-elle contribué au décès?\",\n    },\n  },\n  { key: \"mortalityLevel\", translation: { en: \"hehehehe\" } },\n  {\n    key: \"mortalityRateAllAges\",\n    translation: { en: \"Mortality rate, all ages\" },\n  },\n  { key: \"registration\", translation: { en: \"Registration\" } },\n  {\n    key: \"mortalityRateAllAge\",\n    translation: { en: \"Mortality rate, all ages\" },\n  },\n  {\n    key: \"mortalityRateNeonates\",\n    translation: { en: \"Mortality rate, neonates (0-27 days)\" },\n  },\n  {\n    key: \"mortalityRateInfant\",\n    translation: { en: \"Mortality rate, infant (< 1 year of age)\" },\n  },\n  {\n    key: \"mortalityRateChildren\",\n    translation: { en: \"Mortality rate, children < 5 years of age\" },\n  },\n  {\n    key: \"mortalityRateAge0To14\",\n    translation: { en: \"Mortality rate, age 0-14 years \" },\n  },\n  {\n    key: \"mortalityRateAge15To49\",\n    translation: { en: \"Mortality rate, age 15-49 years \" },\n  },\n  {\n    key: \"mortalityRateAgeAbove50\",\n    translation: { en: \"Mortality rate, 50 years and above\" },\n  },\n  {\n    key: \"mortalityRateAge30To70\",\n    translation: { en: \"Mortality rate, age 30-70 years\" },\n  },\n  {\n    key: \"proportionOfDeathFromBroadCauses\",\n    translation: {\n      en: \"Proportion of deaths from broad causes (all sexes, all ages)\",\n    },\n  },\n  {\n    key: \"proportionOfDeathFromBroadCausesAll\",\n    translation: {\n      en: \"Proportion of deaths from broad causes (all sexes, all ages)\",\n      fr: \"Proportion de décès de causes générales (tous sexes, tous âges)\",\n    },\n  },\n  {\n    key: \"mortalityFromBoardCausesOfDeath\",\n    translation: {\n      en: \"Mortality from broad causes of death\",\n      fr: \"Mortality from broad causes of death\",\n    },\n  },\n  {\n    key: \"distributionOfDeathByBroadCausesAndAgeGroups\",\n    translation: {\n      en: \"Distribution of deaths by broad causes and age groups\",\n      fr: \"Répartition des décès par grandes causes et groupes d'âge\",\n    },\n  },\n  {\n    key: \"overViewDistributionOfDeath\",\n    translation: {\n      en: \"Overview of the distribution of causes of total deaths grouped by category\",\n      fr: \"Aperçu de la répartition des causes de décès totaux regroupées par catégorie\",\n    },\n  },\n  {\n    key: \"clickOnBubleForDetail\",\n    translation: {\n      en: \"Click on each buble for details\",\n      fr: \"Cliquez sur chaque bulle pour plus de détails\",\n    },\n  },\n  {\n    key: \"communicable\",\n    translation: { en: \"communicable\", fr: \"transmissible\" },\n  },\n  {\n    key: \"nonCommunicable\",\n    translation: { en: \"non-communicable\", fr: \"non communicable\" },\n  },\n  {\n    key: \"externalCauses\",\n    translation: { en: \"external causes\", fr: \"causes externes\" },\n  },\n  { key: \"illDefined\", translation: { en: \"ill-defined\", fr: \"mal défini\" } },\n  {\n    key: \"numberOfDeathBy\",\n    translation: { en: \"Number of Death by\", fr: \"Nombre de décès par\" },\n  },\n  {\n    key: \"tuberculosis\",\n    translation: { en: \"Tuberculosis\", fr: \"Tuberculose\" },\n  },\n  {\n    key: \"sexuallyTransmittedDiseasesExcludingHiv\",\n    translation: {\n      en: \"Sexually transmitted diseases excluding HIV\",\n      fr: \"Maladies sexuellement transmissibles hors VIH\",\n    },\n  },\n  { key: \"hiv\", translation: { en: \"HIV\", fr: \"VIH\" } },\n  {\n    key: \"diarrhoealDiseases\",\n    translation: { en: \"Diarrhoeal diseases\", fr: \"Maladies diarrhéiques\" },\n  },\n  { key: \"pertussis\", translation: { en: \"Pertussis\", fr: \"Coqueluche\" } },\n  {\n    key: \"poliomyelitis\",\n    translation: { en: \"Poliomyelitis\", fr: \"Poliomyélite\" },\n  },\n  { key: \"diphtheria\", translation: { en: \"Diphtheria\", fr: \"Diphtérie\" } },\n  { key: \"measles\", translation: { en: \"Measles\", fr: \"Rougeole\" } },\n  { key: \"tetanus\", translation: { en: \"Tetanus\", fr: \"Tétanos\" } },\n  { key: \"meningitis\", translation: { en: \"Meningitis\", fr: \"Méningite\" } },\n  { key: \"hepatitisB\", translation: { en: \"Hepatitis B\", fr: \"Hépatite B\" } },\n  { key: \"hepatitisC\", translation: { en: \"Hepatitis C\", fr: \"Hépatite C\" } },\n  { key: \"malaria\", translation: { en: \"Malaria\", fr: \"Paludisme\" } },\n  {\n    key: \"tropicalClusterDiseases\",\n    translation: {\n      en: \"Tropical-cluster diseases\",\n      fr: \"Maladies du cluster tropical\",\n    },\n  },\n  {\n    key: \"lowerRespiratoryInfections\",\n    translation: {\n      en: \"Lower respiratory infections\",\n      fr: \"Infections des voies respiratoires inférieures\",\n    },\n  },\n  {\n    key: \"maternalConditions\",\n    translation: { en: \"Maternal conditions\", fr: \"Conditions maternelles\" },\n  },\n  {\n    key: \"conditionsArisingDuringThePerinatalPeriod\",\n    translation: {\n      en: \"Conditions arising during the perinatal period\",\n      fr: \"Conditions survenant pendant la période périnatale\",\n    },\n  },\n  {\n    key: \"nutritionalDeficiencies\",\n    translation: {\n      en: \"Nutritional deficiencies\",\n      fr: \"Déficiences nutritionnelles\",\n    },\n  },\n  {\n    key: \"mouthAndOropharynxCancers\",\n    translation: {\n      en: \"Mouth and oropharynx cancers\",\n      fr: \"Cancers de la bouche et de l'oropharynx\",\n    },\n  },\n  {\n    key: \"oesophagusCancer\",\n    translation: { en: \"Oesophagus cancer\", fr: \"Cancer de l'œsophage\" },\n  },\n  {\n    key: \"stomachCancer\",\n    translation: { en: \"Stomach cancer\", fr: \"Cancer de l'estomac\" },\n  },\n  {\n    key: \"colonAndRectumCancers\",\n    translation: {\n      en: \"Colon and rectum cancers\",\n      fr: \"Cancers du côlon et du rectum\",\n    },\n  },\n  {\n    key: \"liverCancer\",\n    translation: { en: \"Liver cancer\", fr: \"Cancer du foie\" },\n  },\n  {\n    key: \"pancreasCancer\",\n    translation: { en: \"Pancreas cancer\", fr: \"Cancer du pancréas\" },\n  },\n  {\n    key: \"tracheaBronchusAndLungCancers\",\n    translation: {\n      en: \"Trachea, bronchus and lung cancers\",\n      fr: \"Cancers de la trachée, des bronches et du poumon\",\n    },\n  },\n  {\n    key: \"melanomaAndOtherSkinCancers\",\n    translation: {\n      en: \"Melanoma and other skin cancers\",\n      fr: \"Mélanome et autres cancers de la peau\",\n    },\n  },\n  {\n    key: \"breastCancer\",\n    translation: { en: \"Breast cancer\", fr: \"Cancer du sein\" },\n  },\n  {\n    key: \"cervixUteriCancer\",\n    translation: {\n      en: \"Cervix uteri cancer\",\n      fr: \"Cancer du col de l'utérus\",\n    },\n  },\n  {\n    key: \"corpusUteriCancer\",\n    translation: { en: \"Corpus uteri cancer\", fr: \"Cancer du corps utérin\" },\n  },\n  {\n    key: \"ovaryCancer\",\n    translation: { en: \"Ovary cancer\", fr: \"Cancer de l'ovaire\" },\n  },\n  {\n    key: \"prostateCancer\",\n    translation: { en: \"Prostate cancer\", fr: \"Cancer de la prostate\" },\n  },\n  {\n    key: \"bladderCancer\",\n    translation: { en: \"Bladder cancer\", fr: \"Cancer de la vessie\" },\n  },\n  {\n    key: \"lymphomasAndMultipleMyeloma\",\n    translation: {\n      en: \"Lymphomas and multiple myeloma\",\n      fr: \"Lymphomes et myélome multiple\",\n    },\n  },\n  { key: \"leukaemia\", translation: { en: \"Leukaemia\", fr: \"Leucémie\" } },\n  {\n    key: \"alzheimerAndOtherDementias\",\n    translation: {\n      en: \"Alzheimer and other dementias\",\n      fr: \"Alzheimer et autres démences\",\n    },\n  },\n  {\n    key: \"parkinsonDisease\",\n    translation: { en: \"Parkinson disease\", fr: \"Maladie de Parkinson\" },\n  },\n  {\n    key: \"hypertensiveDisease\",\n    translation: { en: \"Hypertensive disease\", fr: \"Maladie hypertensive\" },\n  },\n  {\n    key: \"ischaemicHeartDisease\",\n    translation: {\n      en: \"Ischaemic heart disease\",\n      fr: \"Cardiopathie ischémique\",\n    },\n  },\n  {\n    key: \"cerebrovascularDisease\",\n    translation: {\n      en: \"Cerebrovascular disease\",\n      fr: \"Maladie cérébrovasculaire\",\n    },\n  },\n  {\n    key: \"chronicObstructivePulmonaryDisease\",\n    translation: {\n      en: \"Chronic obstructive pulmonary disease\",\n      fr: \"Bronchopneumopathie chronique obstructive\",\n    },\n  },\n  { key: \"asthma\", translation: { en: \"Asthma\", fr: \"Asthme\" } },\n  {\n    key: \"digestiveDiseases\",\n    translation: { en: \"Digestive diseases\", fr: \"Maladies digestives\" },\n  },\n  {\n    key: \"genitoUrinaryDiseases\",\n    translation: {\n      en: \"Genito-urinary diseases\",\n      fr: \"Maladies génito-urinaires\",\n    },\n  },\n  {\n    key: \"congenitalAnomalies\",\n    translation: { en: \"Congenital anomalies\", fr: \"Anomalies congénitales\" },\n  },\n  {\n    key: \"roadTrafficAccidents\",\n    translation: {\n      en: \"Road traffic accidents\",\n      fr: \"Accidents de la route\",\n    },\n  },\n  { key: \"suicide\", translation: { en: \"Suicide\", fr: \"Suicide\" } },\n  { key: \"homicide\", translation: { en: \"Homicide\", fr: \"Homicide\" } },\n  {\n    key: \"mortaliryFromNcds\",\n    translation: { en: \"Mortality from NCDs\", fr: \"Mortalité due aux MNT\" },\n  },\n  {\n    key: \"malignantNeoplasms\",\n    translation: { en: \"Malignant neoplasms\", fr: \"Néoplasmes malins\" },\n  },\n  {\n    key: \"diabetesMellitus\",\n    translation: { en: \"Diabetes mellitus\", fr: \"Diabète sucré\" },\n  },\n  {\n    key: \"cardiovascularDiseases\",\n    translation: {\n      en: \"Cardiovascular diseases\",\n      fr: \"Maladies cardiovasculaires\",\n    },\n  },\n  {\n    key: \"respiratoryDiseases\",\n    translation: { en: \"Respiratory diseases\", fr: \"Maladies respiratoires\" },\n  },\n  {\n    key: \"numberOfDeathBySexAndAge\",\n    translation: {\n      en: \"Number of deaths by sex and age\",\n      fr: \"Nombre de décès selon le sexe et l'âge\",\n    },\n  },\n  {\n    key: \"numberOfDeathByMonth\",\n    translation: {\n      en: \"Number of deaths by month\",\n      fr: \"Nombre de décès par mois\",\n    },\n  },\n  { key: \"pneumonia\", translation: { en: \"Pneumonia\", fr: \"Pneumonie\" } },\n  {\n    key: \"otherDiseasesOfTheDigestiveSystem\",\n    translation: {\n      en: \"Other diseases of the digestive system\",\n      fr: \"Autres maladies du système digestif\",\n    },\n  },\n  {\n    key: \"otherDirectObstetricDeaths\",\n    translation: {\n      en: \"Other direct obstetric deaths\",\n      fr: \"Autres décès obstétricaux directs\",\n    },\n  },\n  {\n    key: \"prematurity\",\n    translation: { en: \"Prematurity\", fr: \"Prématurité\" },\n  },\n  {\n    key: \"symptomsSignAndAbnormalClinicalAndLaboratoryFindingsNotElsewhereClassified\",\n    translation: {\n      en: \"Symptoms sign and abnormal clinical and laboratory findings, not elsewhere classified\",\n      fr: \"Symptômes et résultats cliniques et de laboratoire anormaux, non classés ailleurs\",\n    },\n  },\n  {\n    key: \"otherAndUnspecifiedCongenitalMalformations\",\n    translation: {\n      en: \"Other and unspecified congenital malformations\",\n      fr: \"Malformations congénitales autres et non précisées\",\n    },\n  },\n  {\n    key: \"otherAndUnspecifiedPerinatalConditions\",\n    translation: {\n      en: \"Other and unspecified perinatal conditions\",\n      fr: \"Affections périnatales autres et non précisées\",\n    },\n  },\n  {\n    key: \"intrauterineHypoxiaAndBirthAsphyxia\",\n    translation: {\n      en: \"Intrauterine hypoxia and birth asphyxia\",\n      fr: \"Hypoxie intra-utérine et asphyxie à la naissance\",\n    },\n  },\n  { key: \"name\", translation: { en: \"Name\", fr: \"Nom\" } },\n  { key: \"point\", translation: { en: \"Point\" } },\n  { key: \"points\", translation: { en: \"Points\", fr: \"Points\" } },\n  {\n    key: \"certainInfectiousOrParasiticDiseases\",\n    translation: {\n      en: \"Certain infectious or parasitic diseases\",\n      fr: \"Certaines maladies infectieuses ou parasitaires\",\n    },\n  },\n  { key: \"neoplasms\", translation: { en: \"Neoplasms\", fr: \"Tumeurs\" } },\n  {\n    key: \"diseasesOfTheBloodOrBloodFormingOrgans\",\n    translation: {\n      en: \"Diseases of the blood or blood-forming organs\",\n      fr: \"Maladies du sang ou des organes hématopoïétiques\",\n    },\n  },\n  {\n    key: \"diseasesOfTheImmuneSystem\",\n    translation: {\n      en: \"Diseases of the immune system\",\n      fr: \"Maladies du système immunitaire\",\n    },\n  },\n  {\n    key: \"endocrineNutritionalOrMetabolicDiseases\",\n    translation: {\n      en: \"Endocrine, nutritional or metabolic diseases\",\n      fr: \"Maladies endocriniennes, nutritionnelles ou métaboliques\",\n    },\n  },\n  {\n    key: \"mentalBehaviouralOrNeurodevelopmentalDisorders\",\n    translation: {\n      en: \"Mental, behavioural or neurodevelopmental disorders\",\n      fr: \"Troubles mentaux, comportementaux ou neurodéveloppementaux\",\n    },\n  },\n  {\n    key: \"sleepWakeDisorders\",\n    translation: {\n      en: \"Sleep-wake disorders\",\n      fr: \"Troubles veille-sommeil\",\n    },\n  },\n  {\n    key: \"diseasesOfTheNervousSystem\",\n    translation: {\n      en: \"Diseases of the nervous system\",\n      fr: \"Maladies du système nerveux\",\n    },\n  },\n  {\n    key: \"diseasesOfTheVisualSystem\",\n    translation: {\n      en: \"Diseases of the visual system\",\n      fr: \"Maladies du système visuel\",\n    },\n  },\n  {\n    key: \"diseasesOfTheEarOrMastoidProcess\",\n    translation: {\n      en: \"Diseases of the ear or mastoid process\",\n      fr: \"Maladies de l'oreille ou de l'apophyse mastoïdienne\",\n    },\n  },\n  {\n    key: \"diseasesOfTheCirculatorySystem\",\n    translation: {\n      en: \"Diseases of the circulatory system\",\n      fr: \"Maladies du système circulatoire\",\n    },\n  },\n  {\n    key: \"diseasesOfTheRespiratorySystem\",\n    translation: {\n      en: \"Diseases of the respiratory system\",\n      fr: \"Maladies du système respiratoire\",\n    },\n  },\n  {\n    key: \"diseasesOfTheDigestiveSystem\",\n    translation: {\n      en: \"Diseases of the digestive system\",\n      fr: \"Maladies du système digestif\",\n    },\n  },\n  {\n    key: \"diseasesOfTheSkin\",\n    translation: { en: \"Diseases of the skin\", fr: \"Maladies de la peau\" },\n  },\n  {\n    key: \"diseasesOfTheMusculoskeletalSystemOrConnectiveTissue\",\n    translation: {\n      en: \"Diseases of the musculoskeletal system or connective tissue\",\n      fr: \"Maladies du système musculo-squelettique ou du tissu conjonctif\",\n    },\n  },\n  {\n    key: \"diseasesOfTheGenitourinarySystem\",\n    translation: {\n      en: \"Diseases of the genitourinary system\",\n      fr: \"Maladies de l'appareil génito-urinaire\",\n    },\n  },\n  {\n    key: \"conditionsRelatedToSexualHealth\",\n    translation: {\n      en: \"Conditions related to sexual health\",\n      fr: \"Conditions liées à la santé sexuelle\",\n    },\n  },\n  {\n    key: \"pregnancyChildbirthOrThePuerperium\",\n    translation: {\n      en: \"Pregnancy, childbirth or the puerperium\",\n      fr: \"Grossesse, accouchement ou puerpéralité\",\n    },\n  },\n  {\n    key: \"certainConditionsOriginatingInThePerinatalPeriod\",\n    translation: {\n      en: \"Certain conditions originating in the perinatal period\",\n      fr: \"Certaines affections originaires de la période périnatale\",\n    },\n  },\n  {\n    key: \"developmentalAnomalies\",\n    translation: {\n      en: \"Developmental anomalies\",\n      fr: \"Anomalies du développement\",\n    },\n  },\n  {\n    key: \"symptomsSignsOrClinicalFindingsNotElsewhereClassified\",\n    translation: {\n      en: \"Symptoms, signs or clinical findings, not elsewhere classified\",\n      fr: \"Symptômes, signes ou constatations cliniques, non classés ailleurs\",\n    },\n  },\n  {\n    key: \"injuryPoisoningOrCertainOtherConsequencesOfExternalCauses\",\n    translation: {\n      en: \"Injury, poisoning or certain other consequences of external causes\",\n      fr: \"Blessure, empoisonnement ou certaines autres conséquences de causes externes\",\n    },\n  },\n  {\n    key: \"externalCausesOfMorbidityOrMortality\",\n    translation: {\n      en: \"External causes of morbidity or mortality\",\n      fr: \"Causes externes de morbidité ou de mortalité\",\n    },\n  },\n  {\n    key: \"factorsInfluencingHealthStatusOrContactWithHealthServices\",\n    translation: {\n      en: \"Factors influencing health status or contact with health services\",\n      fr: \"Facteurs influençant l'état de santé ou le contact avec les services de santé\",\n    },\n  },\n  {\n    key: \"codesForSpecialPurposes\",\n    translation: {\n      en: \"Codes for special purposes\",\n      fr: \"Codes à des fins spéciales\",\n    },\n  },\n  {\n    key: \"numberOfMalariaDeathsByMonth\",\n    translation: {\n      en: \"Number of malaria deaths by month\",\n      fr: \"Nombre de décès dus au paludisme par mois\",\n    },\n  },\n  {\n    key: \"numberOfMalariaDeathsPlaceOfDeath\",\n    translation: {\n      en: \"Number of malaria deaths - place of death\",\n      fr: \"Nombre de décès dus au paludisme - lieu du décès\",\n    },\n  },\n  {\n    key: \"numberOfMalariaDeathsBySex\",\n    translation: {\n      en: \"Number of malaria deaths by sex\",\n      fr: \"Nombre de décès dus au paludisme par sexe\",\n    },\n  },\n  {\n    key: \"numberOfMalariaDeathsBySexAndDetailedAgeGroup\",\n    translation: {\n      en: \"Number of malaria deaths by sex and detailed age-group\",\n      fr: \"Nombre de décès dus au paludisme par sexe et tranche d'âge détaillée\",\n    },\n  },\n  {\n    key: \"numberOfMalariaDeathsAndPercentOfAllMalariaDeathsByBroadAgeGroup\",\n    translation: {\n      en: \"Number of malaria deaths and percent of all malaria deaths by broad age-group\",\n      fr: \"Nombre de décès dus au paludisme et pourcentage de tous les décès dus au paludisme par grand groupe d'âge\",\n    },\n  },\n  {\n    key: \"numberOfMalariaDeathsComparedWithOtherCausesOfDeaths\",\n    translation: {\n      en: \"Number of malaria deaths compared with other causes of deaths\",\n      fr: \"Nombre de décès dus au paludisme par rapport aux autres causes de décès\",\n    },\n  },\n  { key: \"male\", translation: { en: \"Male\" } },\n  { key: \"female\", translation: { en: \"Female\" } },\n  {\n    key: \"percentOfTotalMalariaDeaths\",\n    translation: {\n      en: \"% of total malaria deaths\",\n      fr: \"% du total des décès dus au paludisme\",\n    },\n  },\n  {\n    key: \"numberOfMalariaDeaths\",\n    translation: {\n      en: \"Number of malaria deaths\",\n      fr: \"Nombre de décès dus au paludisme\",\n    },\n  },\n  {\n    key: \"otherCauses\",\n    translation: { en: \"Other causes\", fr: \"Autres causes\" },\n  },\n  {\n    key: \"numberOfTuberculosisDeathsByMonth\",\n    translation: {\n      en: \"Number of tuberculosis deaths by month\",\n      fr: \"Number of tuberculosis deaths by month\",\n    },\n  },\n  {\n    key: \"numberOfTuberculosisDeathsByPlaceOfDeath\",\n    translation: {\n      en: \"Number of tuberculosis deaths by place of death\",\n      fr: \"Nombre de décès par tuberculose par lieu de décès\",\n    },\n  },\n  {\n    key: \"numberOfTuberculosisDeathsBySex\",\n    translation: {\n      en: \"Number of tuberculosis deaths by sex\",\n      fr: \"Nombre de décès dus à la tuberculose par sexe\",\n    },\n  },\n  {\n    key: \"numberOfTuberculosisDeathsBySexAndDetailedAgeGroup\",\n    translation: {\n      en: \"Number of tuberculosis deaths by sex and detailed age-group\",\n      fr: \"Nombre de décès dus à la tuberculose par sexe et tranche d'âge détaillée\",\n    },\n  },\n  {\n    key: \"numberOfTuberculosisDeathsAndPercentOfAllTuberculosisDeathsByBroadAgeGroup\",\n    translation: {\n      en: \"Number of tuberculosis deaths and percent of all tuberculosis deaths by broad age-group\",\n      fr: \"Nombre de décès dus à la tuberculose et pourcentage de tous les décès dus à la tuberculose par grand groupe d'âge\",\n    },\n  },\n  {\n    key: \"numberOfTuberculosisDeathsComparedWithOtherCausesOfDeaths\",\n    translation: {\n      en: \"Number of tuberculosis deaths compared with other causes of deaths\",\n      fr: \"Nombre de décès dus à la tuberculose par rapport aux autres causes de décès\",\n    },\n  },\n  {\n    key: \"percentOfTotalTuberculosisDeaths\",\n    translation: {\n      en: \"% of total tuberculosis deaths\",\n      fr: \"% du total des décès dus à la tuberculose\",\n    },\n  },\n  {\n    key: \"numberOfTuberculosisDeaths\",\n    translation: {\n      en: \"Number of tuberculosis deaths\",\n      fr: \"Nombre de décès par tuberculose\",\n    },\n  },\n  {\n    key: \"numberOfAidsDeathsByMonth\",\n    translation: {\n      en: \"Number of AIDS deaths by month\",\n      fr: \"Nombre de décès du SIDA par mois\",\n    },\n  },\n  {\n    key: \"numberOfAidsDeathsPlaceOfDeath\",\n    translation: {\n      en: \"Number of AIDS deaths - place of death\",\n      fr: \"Nombre de décès dus au SIDA - lieu du décès\",\n    },\n  },\n  {\n    key: \"numberOfAidsDeathsBySex\",\n    translation: {\n      en: \"Number of AIDS deaths by sex\",\n      fr: \"Nombre de décès dus au SIDA par sexe\",\n    },\n  },\n  {\n    key: \"numberOfAidsDeathsBySexAndDetailedAgeGroup\",\n    translation: {\n      en: \"Number of AIDS deaths by sex and detailed age-group\",\n      fr: \"Nombre de décès dus au SIDA par sexe et tranche d'âge détaillée\",\n    },\n  },\n  {\n    key: \"numberOfAidsDeathsAndPercentOfAllAidsDeathsByBroadAgeGroup\",\n    translation: {\n      en: \"Number of AIDS deaths and percent of all AIDS deaths by broad age-group\",\n      fr: \"Nombre de décès dus au sida et pourcentage de tous les décès dus au sida par grand groupe d'âge\",\n    },\n  },\n  {\n    key: \"numberOfAidsDeathsComparedWithOtherCausesOfDeaths\",\n    translation: {\n      en: \"Number of AIDS deaths compared with other causes of deaths\",\n      fr: \"Nombre de décès dus au sida par rapport aux autres causes de décès\",\n    },\n  },\n  { key: \"aisd\", translation: { en: \"AIDS\" } },\n  { key: \"aids\", translation: { en: \"AIDS\", fr: \"SIDA\" } },\n  {\n    key: \"percentOfTotalAidsDeaths\",\n    translation: {\n      en: \"% of total AIDS deaths\",\n      fr: \"% du total des décès dus au SIDA\",\n    },\n  },\n  {\n    key: \"numberOfAidsDeaths\",\n    translation: {\n      en: \"Number of AIDS deaths\",\n      fr: \"Nombre de décès dus au SIDA\",\n    },\n  },\n  { key: \"tb\", translation: { en: \"TB\", fr: \"TB\" } },\n  { key: \"other\", translation: { en: \"Other\", fr: \"Autre\" } },\n  {\n    key: \"numberOfDeath\",\n    translation: { en: \"% of Deaths\", fr: \"% de décès\" },\n  },\n  {\n    key: \"percentOfTotalDeathAllCauses\",\n    translation: {\n      en: \"% of total deaths all causes\",\n      fr: \"% du total des décès toutes causes\",\n    },\n  },\n  {\n    key: \"numberOfDeathsFromTbAidsMalariaAndOtherCausesAgeGroup\",\n    translation: {\n      en: \"Number of deaths from TB, AIDS, malaria and other causes - age-group\",\n      fr: \"Nombre de décès dus à la tuberculose, au sida, au paludisme et à d'autres causes - groupe d'âge\",\n    },\n  },\n  {\n    key: \"distributionOfDeathsByTbAidsAndMalariaBySexAndAge\",\n    translation: {\n      en: \"Distribution of deaths by TB, AIDS and malaria by sex and age\",\n      fr: \"Répartition des décès par tuberculose, sida et paludisme par sexe et âge\",\n    },\n  },\n  {\n    key: \"percentageOfDeathsFromTbAidsAndMalariaOutOfAllDeathsFromCommunicableDiseases\",\n    translation: {\n      en: \"Percentage of deaths from TB, AIDS and malaria out of all deaths from communicable diseases\",\n      fr: \"Pourcentage de décès dus à la tuberculose, au sida et au paludisme sur l'ensemble des décès dus aux maladies transmissibles\",\n    },\n  },\n  {\n    key: \"numberOfTbAndAidsDeathsAndPercentOfTheseDeathsOutOfAllDeaths15YearsAndAbove\",\n    translation: {\n      en: \"Number of TB and AIDS deaths  and percent of these  deaths out of all deaths: 15 years and above\",\n      fr: \"Nombre de décès dus à la tuberculose et au sida et pourcentage de ces décès sur l'ensemble des décès : 15 ans et plus\",\n    },\n  },\n  { key: \"icd10\", translation: { en: \"ICD-10\" } },\n];\n\nconst LOCALES = {\n  af_NA: \"Afrikaans (Namibia)\",\n  af_ZA: \"Afrikaans (South Africa)\",\n  af: \"Afrikaans\",\n  ak_GH: \"Akan (Ghana)\",\n  ak: \"Akan\",\n  sq_AL: \"Albanian (Albania)\",\n  sq: \"Albanian\",\n  am_ET: \"Amharic (Ethiopia)\",\n  am: \"Amharic\",\n  ar_DZ: \"Arabic (Algeria)\",\n  ar_BH: \"Arabic (Bahrain)\",\n  ar_EG: \"Arabic (Egypt)\",\n  ar_IQ: \"Arabic (Iraq)\",\n  ar_JO: \"Arabic (Jordan)\",\n  ar_KW: \"Arabic (Kuwait)\",\n  ar_LB: \"Arabic (Lebanon)\",\n  ar_LY: \"Arabic (Libya)\",\n  ar_MA: \"Arabic (Morocco)\",\n  ar_OM: \"Arabic (Oman)\",\n  ar_QA: \"Arabic (Qatar)\",\n  ar_SA: \"Arabic (Saudi Arabia)\",\n  ar_SD: \"Arabic (Sudan)\",\n  ar_SY: \"Arabic (Syria)\",\n  ar_TN: \"Arabic (Tunisia)\",\n  ar_AE: \"Arabic (United Arab Emirates)\",\n  ar_YE: \"Arabic (Yemen)\",\n  ar: \"Arabic\",\n  hy_AM: \"Armenian (Armenia)\",\n  hy: \"Armenian\",\n  as_IN: \"Assamese (India)\",\n  as: \"Assamese\",\n  asa_TZ: \"Asu (Tanzania)\",\n  asa: \"Asu\",\n  az_Cyrl: \"Azerbaijani (Cyrillic)\",\n  az_Cyrl_AZ: \"Azerbaijani (Cyrillic, Azerbaijan)\",\n  az_Latn: \"Azerbaijani (Latin)\",\n  az_Latn_AZ: \"Azerbaijani (Latin, Azerbaijan)\",\n  az: \"Azerbaijani\",\n  bm_ML: \"Bambara (Mali)\",\n  bm: \"Bambara\",\n  eu_ES: \"Basque (Spain)\",\n  eu: \"Basque\",\n  be_BY: \"Belarusian (Belarus)\",\n  be: \"Belarusian\",\n  bem_ZM: \"Bemba (Zambia)\",\n  bem: \"Bemba\",\n  bez_TZ: \"Bena (Tanzania)\",\n  bez: \"Bena\",\n  bn_BD: \"Bengali (Bangladesh)\",\n  bn_IN: \"Bengali (India)\",\n  bn: \"Bengali\",\n  bs_BA: \"Bosnian (Bosnia and Herzegovina)\",\n  bs: \"Bosnian\",\n  bg_BG: \"Bulgarian (Bulgaria)\",\n  bg: \"Bulgarian\",\n  my_MM: \"Burmese (Myanmar [Burma])\",\n  my: \"Burmese\",\n  yue_Hant_HK: \"Cantonese (Traditional, Hong Kong SAR China)\",\n  ca_ES: \"Catalan (Spain)\",\n  ca: \"Catalan\",\n  tzm_Latn: \"Central Morocco Tamazight (Latin)\",\n  tzm_Latn_MA: \"Central Morocco Tamazight (Latin, Morocco)\",\n  tzm: \"Central Morocco Tamazight\",\n  chr_US: \"Cherokee (United States)\",\n  chr: \"Cherokee\",\n  cgg_UG: \"Chiga (Uganda)\",\n  cgg: \"Chiga\",\n  zh_Hans: \"Chinese (Simplified Han)\",\n  zh_Hans_CN: \"Chinese (Simplified Han, China)\",\n  zh_Hans_HK: \"Chinese (Simplified Han, Hong Kong SAR China)\",\n  zh_Hans_MO: \"Chinese (Simplified Han, Macau SAR China)\",\n  zh_Hans_SG: \"Chinese (Simplified Han, Singapore)\",\n  zh_Hant: \"Chinese (Traditional Han)\",\n  zh_Hant_HK: \"Chinese (Traditional Han, Hong Kong SAR China)\",\n  zh_Hant_MO: \"Chinese (Traditional Han, Macau SAR China)\",\n  zh_Hant_TW: \"Chinese (Traditional Han, Taiwan)\",\n  zh: \"Chinese\",\n  kw_GB: \"Cornish (United Kingdom)\",\n  kw: \"Cornish\",\n  hr_HR: \"Croatian (Croatia)\",\n  hr: \"Croatian\",\n  cs_CZ: \"Czech (Czech Republic)\",\n  cs: \"Czech\",\n  da_DK: \"Danish (Denmark)\",\n  da: \"Danish\",\n  nl_BE: \"Dutch (Belgium)\",\n  nl_NL: \"Dutch (Netherlands)\",\n  nl: \"Dutch\",\n  dz: \"Dzongkha (Bhutan)\",\n  ebu_KE: \"Embu (Kenya)\",\n  ebu: \"Embu\",\n  en_AS: \"English (American Samoa)\",\n  en_AU: \"English (Australia)\",\n  en_BE: \"English (Belgium)\",\n  en_BZ: \"English (Belize)\",\n  en_BW: \"English (Botswana)\",\n  en_CA: \"English (Canada)\",\n  en_GU: \"English (Guam)\",\n  en_HK: \"English (Hong Kong SAR China)\",\n  en_IN: \"English (India)\",\n  en_IE: \"English (Ireland)\",\n  en_IL: \"English (Israel)\",\n  en_JM: \"English (Jamaica)\",\n  en_MT: \"English (Malta)\",\n  en_MH: \"English (Marshall Islands)\",\n  en_MU: \"English (Mauritius)\",\n  en_NA: \"English (Namibia)\",\n  en_NZ: \"English (New Zealand)\",\n  en_MP: \"English (Northern Mariana Islands)\",\n  en_PK: \"English (Pakistan)\",\n  en_PH: \"English (Philippines)\",\n  en_SG: \"English (Singapore)\",\n  en_ZA: \"English (South Africa)\",\n  en_TT: \"English (Trinidad and Tobago)\",\n  en_UM: \"English (U.S. Minor Outlying Islands)\",\n  en_VI: \"English (U.S. Virgin Islands)\",\n  en_GB: \"English (United Kingdom)\",\n  en_US: \"English (United States)\",\n  en_ZW: \"English (Zimbabwe)\",\n  en: \"English\",\n  eo: \"Esperanto\",\n  et_EE: \"Estonian (Estonia)\",\n  et: \"Estonian\",\n  ee_GH: \"Ewe (Ghana)\",\n  ee_TG: \"Ewe (Togo)\",\n  ee: \"Ewe\",\n  fo_FO: \"Faroese (Faroe Islands)\",\n  fo: \"Faroese\",\n  fil_PH: \"Filipino (Philippines)\",\n  fil: \"Filipino\",\n  fi_FI: \"Finnish (Finland)\",\n  fi: \"Finnish\",\n  fr_BE: \"French (Belgium)\",\n  fr_BJ: \"French (Benin)\",\n  fr_BF: \"French (Burkina Faso)\",\n  fr_BI: \"French (Burundi)\",\n  fr_CM: \"French (Cameroon)\",\n  fr_CA: \"French (Canada)\",\n  fr_CF: \"French (Central African Republic)\",\n  fr_TD: \"French (Chad)\",\n  fr_KM: \"French (Comoros)\",\n  fr_CG: \"French (Congo - Brazzaville)\",\n  fr_CD: \"French (Congo - Kinshasa)\",\n  fr_CI: \"French (Côte d’Ivoire)\",\n  fr_DJ: \"French (Djibouti)\",\n  fr_GQ: \"French (Equatorial Guinea)\",\n  fr_FR: \"French (France)\",\n  fr_GA: \"French (Gabon)\",\n  fr_GP: \"French (Guadeloupe)\",\n  fr_GN: \"French (Guinea)\",\n  fr_LU: \"French (Luxembourg)\",\n  fr_MG: \"French (Madagascar)\",\n  fr_ML: \"French (Mali)\",\n  fr_MQ: \"French (Martinique)\",\n  fr_MC: \"French (Monaco)\",\n  fr_NE: \"French (Niger)\",\n  fr_RW: \"French (Rwanda)\",\n  fr_RE: \"French (Réunion)\",\n  fr_BL: \"French (Saint Barthélemy)\",\n  fr_MF: \"French (Saint Martin)\",\n  fr_SN: \"French (Senegal)\",\n  fr_CH: \"French (Switzerland)\",\n  fr_TG: \"French (Togo)\",\n  fr: \"French\",\n  ff_SN: \"Fulah (Senegal)\",\n  ff: \"Fulah\",\n  gl_ES: \"Galician (Spain)\",\n  gl: \"Galician\",\n  lg_UG: \"Ganda (Uganda)\",\n  lg: \"Ganda\",\n  ka_GE: \"Georgian (Georgia)\",\n  ka: \"Georgian\",\n  de_AT: \"German (Austria)\",\n  de_BE: \"German (Belgium)\",\n  de_DE: \"German (Germany)\",\n  de_LI: \"German (Liechtenstein)\",\n  de_LU: \"German (Luxembourg)\",\n  de_CH: \"German (Switzerland)\",\n  de: \"German\",\n  de: \"German\",\n  el_CY: \"Greek (Cyprus)\",\n  el_GR: \"Greek (Greece)\",\n  el: \"Greek\",\n  gu_IN: \"Gujarati (India)\",\n  gu: \"Gujarati\",\n  guz_KE: \"Gusii (Kenya)\",\n  guz: \"Gusii\",\n  ha_Latn: \"Hausa (Latin)\",\n  ha_Latn_GH: \"Hausa (Latin, Ghana)\",\n  ha_Latn_NE: \"Hausa (Latin, Niger)\",\n  ha_Latn_NG: \"Hausa (Latin, Nigeria)\",\n  ha: \"Hausa\",\n  haw_US: \"Hawaiian (United States)\",\n  haw: \"Hawaiian\",\n  he_IL: \"Hebrew (Israel)\",\n  he: \"Hebrew\",\n  hi_IN: \"Hindi (India)\",\n  hi: \"Hindi\",\n  hu_HU: \"Hungarian (Hungary)\",\n  hu: \"Hungarian\",\n  is_IS: \"Icelandic (Iceland)\",\n  is: \"Icelandic\",\n  ig_NG: \"Igbo (Nigeria)\",\n  ig: \"Igbo\",\n  id_ID: \"Indonesian (Indonesia)\",\n  id: \"Indonesian\",\n  ga_IE: \"Irish (Ireland)\",\n  ga: \"Irish\",\n  it_IT: \"Italian (Italy)\",\n  it_CH: \"Italian (Switzerland)\",\n  it: \"Italian\",\n  ja_JP: \"Japanese (Japan)\",\n  ja: \"Japanese\",\n  kea_CV: \"Kabuverdianu (Cape Verde)\",\n  kea: \"Kabuverdianu\",\n  kab_DZ: \"Kabyle (Algeria)\",\n  kab: \"Kabyle\",\n  kl_GL: \"Kalaallisut (Greenland)\",\n  kl: \"Kalaallisut\",\n  kln_KE: \"Kalenjin (Kenya)\",\n  kln: \"Kalenjin\",\n  kam_KE: \"Kamba (Kenya)\",\n  kam: \"Kamba\",\n  kn_IN: \"Kannada (India)\",\n  kn: \"Kannada\",\n  kk_Cyrl: \"Kazakh (Cyrillic)\",\n  kk_Cyrl_KZ: \"Kazakh (Cyrillic, Kazakhstan)\",\n  kk: \"Kazakh\",\n  km_KH: \"Khmer (Cambodia)\",\n  km: \"Khmer\",\n  ki_KE: \"Kikuyu (Kenya)\",\n  ki: \"Kikuyu\",\n  rw_RW: \"Kinyarwanda (Rwanda)\",\n  rw: \"Kinyarwanda\",\n  kok_IN: \"Konkani (India)\",\n  kok: \"Konkani\",\n  ko_KR: \"Korean (South Korea)\",\n  ko: \"Korean\",\n  khq_ML: \"Koyra Chiini (Mali)\",\n  khq: \"Koyra Chiini\",\n  ses_ML: \"Koyraboro Senni (Mali)\",\n  ses: \"Koyraboro Senni\",\n  lag_TZ: \"Langi (Tanzania)\",\n  lag: \"Langi\",\n  lv_LV: \"Latvian (Latvia)\",\n  lv: \"Latvian\",\n  lt_LT: \"Lithuanian (Lithuania)\",\n  lt: \"Lithuanian\",\n  luo_KE: \"Luo (Kenya)\",\n  luo: \"Luo\",\n  luy_KE: \"Luyia (Kenya)\",\n  luy: \"Luyia\",\n  mk_MK: \"Macedonian (Macedonia)\",\n  mk: \"Macedonian\",\n  jmc_TZ: \"Machame (Tanzania)\",\n  jmc: \"Machame\",\n  kde_TZ: \"Makonde (Tanzania)\",\n  kde: \"Makonde\",\n  mg_MG: \"Malagasy (Madagascar)\",\n  mg: \"Malagasy\",\n  ms_BN: \"Malay (Brunei)\",\n  ms_MY: \"Malay (Malaysia)\",\n  ms: \"Malay\",\n  ml_IN: \"Malayalam (India)\",\n  ml: \"Malayalam\",\n  mt_MT: \"Maltese (Malta)\",\n  mt: \"Maltese\",\n  gv_GB: \"Manx (United Kingdom)\",\n  gv: \"Manx\",\n  mr_IN: \"Marathi (India)\",\n  mr: \"Marathi\",\n  mas_KE: \"Masai (Kenya)\",\n  mas_TZ: \"Masai (Tanzania)\",\n  mas: \"Masai\",\n  mer_KE: \"Meru (Kenya)\",\n  mer: \"Meru\",\n  mfe_MU: \"Morisyen (Mauritius)\",\n  mfe: \"Morisyen\",\n  naq_NA: \"Nama (Namibia)\",\n  naq: \"Nama\",\n  ne_IN: \"Nepali (India)\",\n  ne_NP: \"Nepali (Nepal)\",\n  ne: \"Nepali\",\n  nd_ZW: \"North Ndebele (Zimbabwe)\",\n  nd: \"North Ndebele\",\n  nb_NO: \"Norwegian Bokmål (Norway)\",\n  nb: \"Norwegian Bokmål\",\n  nn_NO: \"Norwegian Nynorsk (Norway)\",\n  nn: \"Norwegian Nynorsk\",\n  nyn_UG: \"Nyankole (Uganda)\",\n  nyn: \"Nyankole\",\n  or_IN: \"Oriya (India)\",\n  or: \"Oriya\",\n  om_ET: \"Oromo (Ethiopia)\",\n  om_KE: \"Oromo (Kenya)\",\n  om: \"Oromo\",\n  ps_AF: \"Pashto (Afghanistan)\",\n  ps: \"Pashto\",\n  fa_AF: \"Persian (Afghanistan)\",\n  fa_IR: \"Persian (Iran)\",\n  fa: \"Persian\",\n  pl_PL: \"Polish (Poland)\",\n  pl: \"Polish\",\n  pt_BR: \"Portuguese (Brazil)\",\n  pt_GW: \"Portuguese (Guinea-Bissau)\",\n  pt_MZ: \"Portuguese (Mozambique)\",\n  pt_PT: \"Portuguese (Portugal)\",\n  pt: \"Portuguese\",\n  pa_Arab: \"Punjabi (Arabic)\",\n  pa_Arab_PK: \"Punjabi (Arabic, Pakistan)\",\n  pa_Guru: \"Punjabi (Gurmukhi)\",\n  pa_Guru_IN: \"Punjabi (Gurmukhi, India)\",\n  pa: \"Punjabi\",\n  ro_MD: \"Romanian (Moldova)\",\n  ro_RO: \"Romanian (Romania)\",\n  ro: \"Romanian\",\n  rm_CH: \"Romansh (Switzerland)\",\n  rm: \"Romansh\",\n  rof_TZ: \"Rombo (Tanzania)\",\n  rof: \"Rombo\",\n  ru_MD: \"Russian (Moldova)\",\n  ru_RU: \"Russian (Russia)\",\n  ru_UA: \"Russian (Ukraine)\",\n  ru: \"Russian\",\n  rwk_TZ: \"Rwa (Tanzania)\",\n  rwk: \"Rwa\",\n  saq_KE: \"Samburu (Kenya)\",\n  saq: \"Samburu\",\n  sg_CF: \"Sango (Central African Republic)\",\n  sg: \"Sango\",\n  seh_MZ: \"Sena (Mozambique)\",\n  seh: \"Sena\",\n  sr_Cyrl: \"Serbian (Cyrillic)\",\n  sr_Cyrl_BA: \"Serbian (Cyrillic, Bosnia and Herzegovina)\",\n  sr_Cyrl_ME: \"Serbian (Cyrillic, Montenegro)\",\n  sr_Cyrl_RS: \"Serbian (Cyrillic, Serbia)\",\n  sr_Latn: \"Serbian (Latin)\",\n  sr_Latn_BA: \"Serbian (Latin, Bosnia and Herzegovina)\",\n  sr_Latn_ME: \"Serbian (Latin, Montenegro)\",\n  sr_Latn_RS: \"Serbian (Latin, Serbia)\",\n  sr: \"Serbian\",\n  sn_ZW: \"Shona (Zimbabwe)\",\n  sn: \"Shona\",\n  ii_CN: \"Sichuan Yi (China)\",\n  ii: \"Sichuan Yi\",\n  si_LK: \"Sinhala (Sri Lanka)\",\n  si: \"Sinhala\",\n  sk_SK: \"Slovak (Slovakia)\",\n  sk: \"Slovak\",\n  sl_SI: \"Slovenian (Slovenia)\",\n  sl: \"Slovenian\",\n  xog_UG: \"Soga (Uganda)\",\n  xog: \"Soga\",\n  so_DJ: \"Somali (Djibouti)\",\n  so_ET: \"Somali (Ethiopia)\",\n  so_KE: \"Somali (Kenya)\",\n  so_SO: \"Somali (Somalia)\",\n  so: \"Somali\",\n  es_AR: \"Spanish (Argentina)\",\n  es_BO: \"Spanish (Bolivia)\",\n  es_CL: \"Spanish (Chile)\",\n  es_CO: \"Spanish (Colombia)\",\n  es_CR: \"Spanish (Costa Rica)\",\n  es_DO: \"Spanish (Dominican Republic)\",\n  es_EC: \"Spanish (Ecuador)\",\n  es_SV: \"Spanish (El Salvador)\",\n  es_GQ: \"Spanish (Equatorial Guinea)\",\n  es_GT: \"Spanish (Guatemala)\",\n  es_HN: \"Spanish (Honduras)\",\n  es_419: \"Spanish (Latin America)\",\n  es_MX: \"Spanish (Mexico)\",\n  es_NI: \"Spanish (Nicaragua)\",\n  es_PA: \"Spanish (Panama)\",\n  es_PY: \"Spanish (Paraguay)\",\n  es_PE: \"Spanish (Peru)\",\n  es_PR: \"Spanish (Puerto Rico)\",\n  es_ES: \"Spanish (Spain)\",\n  es_US: \"Spanish (United States)\",\n  es_UY: \"Spanish (Uruguay)\",\n  es_VE: \"Spanish (Venezuela)\",\n  es: \"Spanish\",\n  sw_KE: \"Swahili (Kenya)\",\n  sw_TZ: \"Swahili (Tanzania)\",\n  sw: \"Swahili\",\n  sv_FI: \"Swedish (Finland)\",\n  sv_SE: \"Swedish (Sweden)\",\n  sv: \"Swedish\",\n  gsw_CH: \"Swiss German (Switzerland)\",\n  gsw: \"Swiss German\",\n  shi_Latn: \"Tachelhit (Latin)\",\n  shi_Latn_MA: \"Tachelhit (Latin, Morocco)\",\n  shi_Tfng: \"Tachelhit (Tifinagh)\",\n  shi_Tfng_MA: \"Tachelhit (Tifinagh, Morocco)\",\n  shi: \"Tachelhit\",\n  dav_KE: \"Taita (Kenya)\",\n  dav: \"Taita\",\n  ta_IN: \"Tamil (India)\",\n  ta_LK: \"Tamil (Sri Lanka)\",\n  ta: \"Tamil\",\n  te_IN: \"Telugu (India)\",\n  te: \"Telugu\",\n  teo_KE: \"Teso (Kenya)\",\n  teo_UG: \"Teso (Uganda)\",\n  teo: \"Teso\",\n  th_TH: \"Thai (Thailand)\",\n  th: \"Thai\",\n  bo_CN: \"Tibetan (China)\",\n  bo_IN: \"Tibetan (India)\",\n  bo: \"Tibetan\",\n  ti_ER: \"Tigrinya (Eritrea)\",\n  ti_ET: \"Tigrinya (Ethiopia)\",\n  ti: \"Tigrinya\",\n  to_TO: \"Tonga (Tonga)\",\n  to: \"Tonga\",\n  tr_TR: \"Turkish (Turkey)\",\n  tr: \"Turkish\",\n  uk_UA: \"Ukrainian (Ukraine)\",\n  uk: \"Ukrainian\",\n  ur_IN: \"Urdu (India)\",\n  ur_PK: \"Urdu (Pakistan)\",\n  ur: \"Urdu\",\n  uz_Arab: \"Uzbek (Arabic)\",\n  uz_Arab_AF: \"Uzbek (Arabic, Afghanistan)\",\n  uz_Cyrl: \"Uzbek (Cyrillic)\",\n  uz_Cyrl_UZ: \"Uzbek (Cyrillic, Uzbekistan)\",\n  uz_Latn: \"Uzbek (Latin)\",\n  uz_Latn_UZ: \"Uzbek (Latin, Uzbekistan)\",\n  uz: \"Uzbek\",\n  vi_VN: \"Vietnamese (Vietnam)\",\n  vi: \"Vietnamese\",\n  vun_TZ: \"Vunjo (Tanzania)\",\n  vun: \"Vunjo\",\n  cy_GB: \"Welsh (United Kingdom)\",\n  cy: \"Welsh\",\n  yo_NG: \"Yoruba (Nigeria)\",\n  yo: \"Yoruba\",\n  zu_ZA: \"Zulu (South Africa)\",\n  zu: \"Zulu\",\n};\nexport { LANGUAGES, TRANSLATION_KEYS_MAPPING, TRANSLATIONS, LOCALES };\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Export/Content.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/utils/index.js",["485","486","487","488"],"import moment from \"moment\";\nimport InputField from \"../components/InputField\";\nimport { Select, Input, DatePicker } from \"antd\";\nimport i18n from \"i18next\";\nconst { Option } = Select;\nconst { Search } = Input;\n\nconst sample = (d, fn = Math.random) => {\n  if (d.length === 0) {\n    return;\n  }\n  return d[Math.round(fn() * (d.length - 1))];\n};\n\nexport const generateCode = (limit = 11, fn = Math.random) => {\n  const allowedLetters = [\"abcdefghijklmnopqrstuvwxyz\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"].join(\"\");\n  const allowedChars = [\"0123456789\", allowedLetters].join(\"\");\n  const arr = [sample(allowedLetters, fn)]; // sample 1 to make sure it starts with a letter\n  for (let i = 0; i < limit - 1; i++) {\n    arr.push(sample(allowedChars, fn));\n  }\n  return arr.join(\"\");\n};\n\nexport const convertValue = (valueType, value) => {\n  switch (valueType) {\n    case \"TEXT\":\n    case \"INTEGER_POSITIVE\":\n    case \"INTEGER_NEGATIVE\":\n    case \"INTEGER_ZERO_OR_POSITIVE\":\n    case \"PERCENTAGE\":\n    case \"NUMBER\":\n    case \"INTEGER\":\n    case \"PHONE_NUMBER\":\n    case \"EMAIL\":\n    case \"LONG_TEXT\":\n      return value;\n    case \"DATE\":\n      return moment(value).format(\"YYYY-MM-DD\");\n    case \"DATETIME\":\n      return moment(value);\n    case \"TIME\":\n      return moment(value);\n    case \"BOOLEAN\":\n      return value;\n    case \"TRUE_ONLY\":\n      return value;\n    case \"AGE\":\n      return moment(value);\n    default:\n      return <span>UNSUPPORTED VALUE TYPE</span>;\n  }\n};\n\nexport const convertValueBack = (valueType, value) => {\n  switch (valueType) {\n    case \"TEXT\":\n    case \"INTEGER_POSITIVE\":\n    case \"INTEGER_NEGATIVE\":\n    case \"INTEGER_ZERO_OR_POSITIVE\":\n    case \"PERCENTAGE\":\n    case \"NUMBER\":\n    case \"INTEGER\":\n    case \"PHONE_NUMBER\":\n    case \"EMAIL\":\n    case \"LONG_TEXT\":\n      return value;\n    case \"DATE\":\n      return moment(value).format(\"YYYY-MM-DD\");\n    case \"DATETIME\":\n      return moment(value);\n    case \"TIME\":\n      return moment(value);\n    case \"BOOLEAN\":\n      return value + \"\";\n    case \"TRUE_ONLY\":\n      return value ? value + \"\" : \"\";\n    case \"AGE\":\n      return moment(value).format(\"YYYY-MM-DD\");\n    default:\n      return <span>UNSUPPORTED VALUE TYPE</span>;\n  }\n};\n\nexport const generateDhis2Payload = (data, programMetadata) => {\n  const newData = JSON.parse(JSON.stringify(data));\n  let { currentTei, currentEnrollment, currentEvents } = newData;\n  currentTei.attributes = Object.keys(currentTei.attributes).map((attribute) => {\n    const attributeMetadata = programMetadata.trackedEntityAttributes.find((attr) => attr.id === attribute);\n    return {\n      attribute,\n      value: convertValueBack(attributeMetadata.valueType, currentTei.attributes[attribute])\n    };\n  });\n  currentEnrollment.enrollmentDate = moment(currentEnrollment.enrollmentDate).format(\"YYYY-MM-DD\");\n  currentEnrollment.incidentDate = moment(currentEnrollment.incidentDate).format(\"YYYY-MM-DD\");\n\n  currentEvents = currentEvents.map((event) => {\n    const programStage = programMetadata.programStages.find((ps) => ps.id === event.programStage);\n    event.dataValues = Object.keys(event.dataValues).map((dataElement) => {\n      const dataElementMetadata = programStage.dataElements.find((de) => de.id === dataElement);\n      return {\n        dataElement,\n        value: convertValueBack(dataElementMetadata.valueType, event.dataValues[dataElement])\n      };\n    });\n    event.eventDate = moment(event.eventDate).format(\"YYYY-MM-DD\");\n    event.dueDate = moment(event.dueDate).format(\"YYYY-MM-DD\");\n    return event;\n  });\n\n  return { currentTei, currentEnrollment, currentEvents };\n};\n\nexport const generateTableColumns = (metadata, external) => {\n  let render = null;\n  if (external) {\n    switch (external.type) {\n      case \"DATE\":\n        render = (value) => {\n          return value ? moment(value).format(\"YYYY-MM-DD\") : \"\";\n        };\n        break;\n      default:\n        render = (value) => {\n          return value ? value : \"\";\n        };\n        break;\n    }\n  } else {\n    if (metadata.valueSet) {\n      render = (value) => {\n        let find = metadata.valueSet.find((e) => {\n          return e.value === value;\n        });\n        if (find) {\n          value = find.label;\n        }\n        return value;\n      };\n    } else {\n      switch (metadata.valueType) {\n        case \"TRUE_ONLY\":\n        case \"BOOLEAN\":\n          render = (value) => {\n            if (value == true || value == \"true\") {\n              value = \"Yes\";\n            }\n            if (value == false || value == \"false\") {\n              value = \"No\";\n            }\n            return value ? value : \"\";\n          };\n          break;\n        case \"DATE\":\n          render = (value) => {\n            return value ? moment(value).format(\"YYYY-MM-DD\") : \"\";\n          };\n          break;\n        default:\n          render = (value) => {\n            return value ? value : \"\";\n          };\n          break;\n      }\n    }\n  }\n  return render;\n};\n\nexport const generateTableFilter = (metadata, onFilter, external) => {\n  let render = null;\n  if (external) {\n    switch (external.type) {\n      case \"DATE\":\n        render = (\n          <div style={{ padding: \"20px\" }}>\n            <DatePicker\n              id={external.name}\n              style={{ width: 250 }}\n              onChange={(value) => {\n                onFilter(value ? moment(value).format(\"YYYY-MM-DD\") : value, external.name);\n              }}\n            />\n          </div>\n        );\n        break;\n      default:\n        render = (value) => {\n          return value ? value : \"\";\n        };\n        break;\n    }\n  } else {\n    if (metadata.valueSet) {\n      render = (\n        <div style={{ padding: \"20px\" }}>\n          <Select\n            style={{ width: 250 }}\n            allowClear\n            showSearch\n            placeholder={`${i18n.t(\"select\")}...`}\n            onChange={(value) => {\n              onFilter(value, metadata.id, \"select\");\n            }}\n          >\n            {metadata.valueSet.map((option) => {\n              return <Option value={option.value}>{option.label}</Option>;\n            })}\n          </Select>\n        </div>\n      );\n    } else {\n      switch (metadata.valueType) {\n        case \"TRUE_ONLY\":\n        case \"BOOLEAN\":\n          <div style={{ padding: \"20px\" }}>\n            <Select\n              style={{ width: 250 }}\n              allowClear\n              placeholder={`${i18n.t(\"select\")}...`}\n              onChange={(value) => {\n                onFilter(value, metadata.id);\n              }}\n            >\n              <Option value=\"true\">Yes</Option>\n              <Option value=\"false\">No</Option>\n            </Select>\n          </div>;\n\n          break;\n        case \"DATE\":\n          render = (\n            <div style={{ padding: \"20px\" }}>\n              <DatePicker\n                id={metadata.id}\n                style={{ width: 250 }}\n                onChange={(value) => {\n                  onFilter(value ? moment(value).format(\"YYYY-MM-DD\") : value, metadata.id);\n                }}\n              />\n            </div>\n          );\n          break;\n        default:\n          // render = (<Input style={{ width: 200 }} placeholder=\"Text Here...\" allowClear onChange={onFilter}/>)\n          render = (\n            <div style={{ padding: \"20px\" }}>\n              <Search\n                id={metadata.id}\n                placeholder={i18n.t(\"inputSearchText\")}\n                allowClear\n                onSearch={(value) => {\n                  onFilter(value, metadata.id);\n                }}\n                style={{ width: 250 }}\n              />\n            </div>\n          );\n          break;\n      }\n    }\n  }\n  return render;\n};\n\nexport const generateEditableDataValueCells = (metadata, mutateDataValue) => {\n  let render = (value, record) => {\n    return (\n      <InputField\n        value={value}\n        valueSet={metadata.valueSet ? metadata.valueSet : null}\n        // label={metadata.displayFormName}\n        valueType={metadata.valueType}\n        change={(value) => {\n          mutateDataValue(record.eventId, metadata.id, value);\n        }}\n      />\n    );\n  };\n  return render;\n};\nexport const numberWithCommas = (number) => {\n  return number.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\n};\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/utils/excel.utility.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/actions/user/type.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/actions/metadata/type.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/actions/admin/type.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/actions/route/type.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/reducers/data-methods.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Search/Result.jsx",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Administration/Attributes.jsx",["489","490"],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Administration/FrameA.jsx",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Form/WarningDialog.jsx",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Administration/Selections.jsx",["491"],"import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck, faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { Radio, Input, Result, Button } from \"antd\";\n/* REDUX */\nimport { connect } from \"react-redux\";\nimport { changeStep, changeIcd11ToolUrl, changeInstallationType } from \"../../redux/actions/admin\";\nimport { useTranslation } from \"react-i18next\";\n/*       */\n\nconst Selections = ({ \n  changeStep, \n  changeIcd11ToolUrl, \n  changeInstallationType, \n  admin,\n  metadata: {\n    orgUnits,\n    users\n  } \n}) => {\n  const { t } = useTranslation();\n  const onChangeRadio = (e) => {\n    if (e.target.value === \"global\") {\n      changeIcd11ToolUrl(\"https://icd11restapi-developer-test.azurewebsites.net/icd/\", \"global\");\n    } else {\n      changeIcd11ToolUrl(\"\", e.target.value);\n    }\n  };\n  const onChangeInput = (e) => {\n    let type = admin.icd11ToolUrl.type;\n    changeIcd11ToolUrl(e.target.value, type);\n  };\n  return (\n    <div className=\"administration-selections-container\">\n      {( orgUnits.length > 0 && users.filter(({organisationUnits}) => organisationUnits > 0).length > 0 ) ? \n          <>  \n            <div className=\"administration-selections-title\">{t(\"selectionTitle\")}</div>\n            <div className=\"administration-selections-title\">\n              <Radio.Group name=\"radiogroup\" onChange={onChangeRadio} value={admin.icd11ToolUrl.type}>\n                <Radio value={\"global\"}>{t(\"globalICDTool\")}</Radio>\n                <Radio value={\"other\"}>{t(\"otherICDTool\")}</Radio>\n              </Radio.Group>\n            </div>\n            <div className=\"administration-selections-title\">\n              <Input\n                placeholder=\"Input Url\"\n                style={{ width: \"400px\" }}\n                value={admin.icd11ToolUrl.url}\n                disabled={admin.icd11ToolUrl.type === \"global\" ? true : false}\n                onChange={onChangeInput}\n              />\n            </div>\n            <div className=\"administration-selections-buttons-container\">\n              <div\n                onClick={() => {\n                  changeInstallationType(\"default\");\n                  changeStep(4);\n                }}\n              >\n                <div className=\"administration-selection\">{t(\"defaultInstallation\")}</div>\n                <FontAwesomeIcon icon={faCheck} style={{ fontSize: 80, color: \"#ffffff\" }} />\n                <div className=\"administration-selection-info\">{t(\"defaultInstallationInfo\")}</div>\n              </div>\n              <div\n                onClick={() => {\n                  changeInstallationType(\"custom\");\n                  changeStep(1);\n                }}\n              >\n                <div className=\"administration-selection\">{t(\"customInstallation\")}</div>\n                <FontAwesomeIcon icon={faCog} style={{ fontSize: 80, color: \"#ffffff\" }} />\n                <div className=\"administration-selection-info\">{t(\"customInstallationInfo\")}</div>\n              </div>\n            </div>\n            <div className=\"administration-selections-title\">{t(\"installWithDocker\")}</div>\n            <div style={{ width: \"100%\", textAlign: \"center\" }}>\n              <a target=\"_blank\" href=\"https://icd.who.int/icdapi/docs2/ICDAPI-DockerContainer\">\n                https://icd.who.int/icdapi/docs2/ICDAPI-DockerContainer\n              </a>\n            </div>\n          </> :\n          <Result\n            status=\"warning\"\n            title={t(\"installationWarning\")}\n            subTitle={t(\"installationWarningTitle\")}\n            extra={\n              <Button type=\"primary\"\n                onClick={() => {\n                  window.location.href = \"../../../dhis-web-maintenance/\";\n                }}\n              >\n                {t(\"backToMaintenance\")}\n              </Button>\n            }\n          />\n      }\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    admin: state.admin,\n    metadata: state.metadata\n  };\n};\n\nconst mapDispatchToProps = {\n  changeStep,\n  changeIcd11ToolUrl,\n  changeInstallationType\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Selections);\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Administration/AssignUsers.jsx",["492","493","494"],"import { Card, Select, Transfer, Button, Row, Col } from \"antd\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\n/* REDUX */\nimport { connect } from \"react-redux\";\nimport { changeAssignUsers } from \"../../redux/actions/admin\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\n/*       */\n\nconst AssignUsers = ({\n  admin: {\n    users: { admin: adminUsers, capture: captureUsers, view: viewUsers },\n  },\n  existedUserGroups,\n  changeAssignAdminUsers,\n  changeAssignCaptureUsers,\n  changeAssignViewUsers,\n}) => {\n  const { t } = useTranslation();\n  const [selectedKeys, setSelectedKeys] = useState({\n    admin: [],\n    capture: [],\n    view: [],\n  });\n  const changeSelectedKeys = (group) => (\n    sourceSelectedKeys,\n    targetSelectedKeys\n  ) =>\n    setSelectedKeys({\n      ...selectedKeys,\n      [group]: [].concat(sourceSelectedKeys).concat(targetSelectedKeys),\n    });\n  const showedUsers = (group) => {\n    // const map = {\n    //   admin: adminUsers,\n    //   capture: captureUsers,\n    //   view: viewUsers,\n    // };\n    // const users = [];\n    // const arr = Object.entries(map).map(([name, groupUsers]) => {\n    //   if (name !== group) {\n    //     return;\n    //   }\n    //   users.concat(groupUsers);\n    // });\n    // return existedUsers.filter((user) => !arr.includes[user.id]);\n    return existedUserGroups;\n  };\n\n  const onChange = (group) => (nextTargetKeys, direction, moveKeys) => {\n    switch (group) {\n      case \"admin\": {\n        changeAssignAdminUsers(nextTargetKeys);\n        break;\n      }\n      case \"capture\": {\n        changeAssignCaptureUsers(nextTargetKeys);\n        break;\n      }\n      case \"view\": {\n        changeAssignViewUsers(nextTargetKeys);\n        break;\n      }\n    }\n  };\n\n  // const onSelectChange = (group) => (\n  //   sourceSelectedKeys,\n  //   targetSelectedKeys\n  // ) => {\n  //   setSelectedKeys([...sourceSelectedKeys, ...targetSelectedKeys]);\n  // };\n\n  return (\n    <div className=\"administration-users-container\">\n      <Row style={{ margin: 10, width: \"100%\", height: \"100%\" }} gutter={16}>\n        <Col xs={8}>\n          <Card\n            style={{ height: \"100%\" }}\n            size=\"small\"\n            title={\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                {t(\"adminGroup\")}\n                <FontAwesomeIcon\n                  onClick={() => {}}\n                  icon={faInfoCircle}\n                  style={{\n                    marginLeft: 5,\n                    fontSize: 17,\n                    color: \"#878787\",\n                    cursor: \"pointer\",\n                  }}\n                />\n              </div>\n            }\n          >\n            <Transfer\n              showSearch\n              pagination={{\n                pageSize: 20,\n              }}\n              listStyle={{\n                width: \"50%\",\n                height: \"63vh\"\n              }}\n              dataSource={existedUserGroups.map(({ id, displayName }) => ({\n                key: id,\n                title: displayName,\n              }))}\n              // dataSource={existedUsers}\n              targetKeys={adminUsers}\n              selectedKeys={selectedKeys.admin}\n              render={(item) => item.title}\n              onChange={onChange(\"admin\")}\n              onSelectChange={changeSelectedKeys(\"admin\")}\n            />\n          </Card>\n        </Col>\n        <Col xs={8}>\n          <Card\n            style={{ height: \"100%\" }}\n            size=\"small\"\n            title={\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                {t(\"captureGroup\")}\n                <FontAwesomeIcon\n                  onClick={() => {}}\n                  icon={faInfoCircle}\n                  style={{\n                    marginLeft: 5,\n                    fontSize: 17,\n                    color: \"#878787\",\n                    cursor: \"pointer\",\n                  }}\n                />\n              </div>\n            }\n          >\n            <Transfer\n              showSearch\n              pagination={{\n                pageSize: 20,\n              }}\n              listStyle={{\n                width: \"50%\",\n                height: \"63vh\"\n              }}\n              dataSource={showedUsers(\"capture\").map(({ id, displayName }) => ({\n                key: id,\n                title: displayName,\n              }))}\n              targetKeys={captureUsers}\n              selectedKeys={selectedKeys.capture}\n              render={(item) => item.title}\n              onChange={onChange(\"capture\")}\n              onSelectChange={changeSelectedKeys(\"capture\")}\n            />\n          </Card>\n        </Col>\n        <Col xs={8}>\n          <Card\n            style={{ height: \"100%\" }}\n            size=\"small\"\n            title={\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                {t(\"viewGroup\")}\n                <FontAwesomeIcon\n                  onClick={() => {}}\n                  icon={faInfoCircle}\n                  style={{\n                    marginLeft: 5,\n                    fontSize: 17,\n                    color: \"#878787\",\n                    cursor: \"pointer\",\n                  }}\n                />\n              </div>\n            }\n          >\n            <Transfer\n              showSearch\n              pagination={{\n                pageSize: 20,\n              }}\n              listStyle={{\n                width: \"50%\",\n                height: \"63vh\"\n              }}\n              dataSource={showedUsers(\"view\").map(({ id, displayName }) => ({\n                key: id,\n                title: displayName,\n              }))}\n              targetKeys={viewUsers}\n              selectedKeys={selectedKeys.view}\n              render={(item) => item.title}\n              onChange={onChange(\"view\")}\n              onSelectChange={changeSelectedKeys(\"view\")}\n            />\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    admin: state.admin,\n    existedUserGroups: state.metadata.userGroups,\n  };\n};\n\nconst mapDispatchToProps = {\n  changeAssignAdminUsers: changeAssignUsers(\"admin\"),\n  changeAssignCaptureUsers: changeAssignUsers(\"capture\"),\n  changeAssignViewUsers: changeAssignUsers(\"view\"),\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AssignUsers);\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Administration/Finish.jsx",["495","496"],"import { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    Result,\n    Modal, \n    Button\n    // Row,\n    // Col,\n    // Button,\n    // Checkbox\n} from \"antd\";\nimport { CloseCircleOutlined, CheckCircleOutlined } from '@ant-design/icons';\nimport { Hooks, Components } from \"tracker-capture-app-core\";\nimport { useTranslation } from \"react-i18next\";\nimport { setProgramMetadata, getICD11Options, setFemaleCode, setCertificateTemplate, setTeas, setTrackerDataElements } from \"../../redux/actions/metadata\";\nimport { setUserRole } from \"../../redux/actions/user\";\n// import { getICD11Options } from \"../../redux/actions/admin\";\nconst { useApi } = Hooks;\nconst { LoadingMask } = Components;\n\nconst Finish = ({\n    open,\n    metadata,\n    programMetadata,\n    formMapping,\n    femaleOption,\n    fullnameOption,\n    setProgramMetadata,\n    getICD11Options,\n    setFemaleCode,\n    setCertificateTemplate, setTeas, setTrackerDataElements, setUserRole\n}) => {\n    const { t } = useTranslation();\n    const { metadataApi } = useApi();\n    \n    const [results, setResults] = useState({});\n    const [status, setStatus] = useState({\n        title: t(\"installing\"),\n        subTitle: t(\"waitForInstalling\"),\n        status: \"installing\"\n    })\n\n    const importMetadata = async () => {\n        let temp = {};\n\n        setStatus({...status, subTitle: \"Loading metadata ...\"});\n        const icd11Options = require(\"../../asset/metadata/icd11_options.json\");\n        \n        if (metadata[\"attributes\"]) {\n            setStatus({...status, subTitle: t(\"importAttributes\")});\n            await metadataApi.push(`/api/metadata`, { attributes: metadata[\"attributes\"]})\n            .then(response => {\n                temp = {\n                    ...temp,\n                    attributes: response\n                };\n                setResults(temp);\n            });\n        }\n        if (metadata[\"legendSets\"]) {\n            setStatus({...status, subTitle: t(\"legendSets\")});\n            await metadataApi.push(`/api/metadata`, { legendSets: metadata[\"legendSets\"]})\n            .then(response => {\n                temp = {\n                    ...temp,\n                    legendSets: response\n                };\n                setResults(temp);\n            });\n        }\n        if (metadata[\"optionSets\"]) {\n            setStatus({...status, subTitle: t(\"importOptionSets\")});\n            await metadataApi.push(`/api/metadata`, { optionSets: metadata[\"optionSets\"]})\n            .then(response => {\n                temp = {\n                    ...temp,\n                    optionSets: response\n                };\n                setResults(temp);\n            });\n        }\n\n        // metadataApi.push(`/api/metadata`, icd11Options )\n        // .then(response => {\n        //     temp = {\n        //         ...temp,\n        //         icd11Options: response\n        //     };\n        //     setResults(temp);\n        // });\n        metadataApi.push(`/api/metadata?importStrategy=CREATE_AND_UPDATE&async=true`, icd11Options )\n        .then(async response => {\n            let importComplete = false;\n            while (!importComplete) {\n                const importReport = await metadataApi.get(response.response.relativeNotifierEndpoint);\n                if ( importReport.find(report => report.completed) ) {\n                    importComplete = true;\n                    temp = {\n                        ...temp,\n                        icd11Options: response\n                    };\n                    setResults(temp);\n                }\n                else {\n                    if ( Object.keys(results).length === Object.keys(metadata).length ) {\n                        setStatus({...status, subTitle: \"Import ICD11 options\"});\n                    }\n                }\n            }\n        });\n\n        if (metadata[\"options\"]) {\n            setStatus({...status, subTitle: t(\"importOptions\")});\n            await metadataApi.push(`/api/metadata`, { options: metadata[\"options\"]})\n            .then(async response => {\n                temp = {\n                    ...temp,\n                    options: response\n                };\n                setResults(temp);\n            });\n        }\n\n        if (metadata[\"trackedEntityAttributes\"]) {\n            setStatus({...status, subTitle: t(\"importTrackedEntityAttributes\")});\n            await metadataApi.push(`/api/metadata`, { trackedEntityAttributes: metadata[\"trackedEntityAttributes\"]})\n            .then(response => {\n                temp = {\n                    ...temp,\n                    trackedEntityAttributes: response\n                };\n                setResults(temp);\n            });\n        }\n        if (metadata[\"trackedEntityTypes\"]) {\n            setStatus({...status, subTitle: t(\"importTrackedEntityTypes\")});\n            await metadataApi.push(`/api/metadata`, { trackedEntityTypes: metadata[\"trackedEntityTypes\"]})\n            .then(response => {\n                temp = {\n                    ...temp,\n                    trackedEntityTypes: response\n                };\n                setResults(temp);\n            });\n        }\n        if (metadata[\"dataElements\"]) {\n            setStatus({...status, subTitle: t(\"importDataElements\")});\n            await metadataApi.push(`/api/metadata`, { dataElements: metadata[\"dataElements\"]})\n            .then(response => {\n                temp = {\n                    ...temp,\n                    dataElements: response\n                };\n                setResults(temp);\n            });\n        }\n        if (metadata[\"programs\"]) {\n            setStatus({...status, subTitle: t(\"importPrograms\")});\n            await metadataApi.push(`/api/metadata`, { programs: metadata[\"programs\"]})\n            .then(response => {\n                temp = {\n                    ...temp,\n                    programs: response\n                };\n                setResults(temp);\n            });\n        }\n        if (metadata[\"programStages\"]) {\n            setStatus({...status, subTitle: t(\"importProgramStages\")});\n            await metadataApi.push(`/api/metadata`, { programStages: metadata[\"programStages\"]})\n            .then(response => {\n                temp = {\n                    ...temp,\n                    programStages: response\n                };\n                setResults(temp);\n            });\n        }\n        if (metadata[\"programStageSections\"]) {\n            setStatus({...status, subTitle: t(\"importProgramStageSections\")});\n            await metadataApi.push(`/api/metadata`, { programStageSections: metadata[\"programStageSections\"]})\n            .then(response => {\n                temp = {\n                    ...temp,\n                    programStageSections: response\n                };\n                setResults(temp);\n            });\n        }\n        if (metadata[\"programIndicators\"]) {\n            setStatus({...status, subTitle: t(\"programIndicators\")});\n            await metadataApi.push(`/api/metadata`, { programIndicators: metadata[\"programIndicators\"]})\n            .then(response => {\n                temp = {\n                    ...temp,\n                    programIndicators: response\n                };\n                setResults(temp);\n            });\n        }\n        if (metadata[\"indicatorTypes\"]) {\n            setStatus({...status, subTitle: t(\"indicatorTypes\")});\n            await metadataApi.push(`/api/metadata`, { indicatorTypes: metadata[\"indicatorTypes\"]})\n            .then(response => {\n                temp = {\n                    ...temp,\n                    indicatorTypes: response\n                };\n                setResults(temp);\n            });\n        }\n        if (metadata[\"indicators\"]) {\n            setStatus({...status, subTitle: t(\"indicators\")});\n            await metadataApi.push(`/api/metadata`, { indicators: metadata[\"indicators\"]})\n            .then(response => {\n                temp = {\n                    ...temp,\n                    indicators: response\n                };\n                setResults(temp);\n            });\n        }\n        if (metadata[\"sqlViews\"]) {\n            setStatus({...status, subTitle: t(\"sqlViews\")});\n            await metadataApi.push(`/api/metadata`, { sqlViews: metadata[\"sqlViews\"]})\n            .then(response => {\n                temp = {\n                    ...temp,\n                    sqlViews: response\n                };\n                setResults(temp);\n            });\n        }\n        if (metadata[\"optionGroups\"]) {\n            setStatus({...status, subTitle: t(\"optionGroups\")});\n            await metadataApi.push(`/api/metadata`, { optionGroups: metadata[\"optionGroups\"]})\n            .then(response => {\n                temp = {\n                    ...temp,\n                    optionGroups: response\n                };\n                setResults(temp);\n            });\n        }\n        if (metadata[\"optionGroupSets\"]) {\n            setStatus({...status, subTitle: t(\"optionGroupSets\")});\n            await metadataApi.push(`/api/metadata`, { optionGroupSets: metadata[\"optionGroupSets\"]})\n            .then(response => {\n                temp = {\n                    ...temp,\n                    optionGroupSets: response\n                };\n                setResults(temp);\n            });\n        }\n    }\n\n    useEffect(() => {\n        if ( open ) {\n            if ( programMetadata === null && status.status === \"installing\" ) {\n                importMetadata();\n            } else {\n                setStatus({\n                    title: t(\"complete\"),\n                    subTitle: `${t(\"programID\")} ${programMetadata.id}`,\n                    status: \"finish\"\n                })\n            }\n        }\n    }, [open])\n\n    useEffect(() => {\n        if ( open && Object.keys(results).length === ( Object.keys(metadata).length + 1 ) ) {\n\n            const certtificateTemplate = {\n                title: \"Medical Certificate of Cause of Death - specimen\",\n                logo: null,\n                info: [{\n                    label: \"Date of Death\",\n                    enrollment: \"incidentDate\"\n                },\n                {\n                    label: \"Reported Date\",\n                    enrollment: \"enrollmentDate\"\n                },\n                {\n                    label: \"COD System ID\",\n                    trackedEntityAttribute: formMapping.attributes[\"system_id\"]\n                },\n                {\n                    label: \"Date of Birth\",\n                    trackedEntityAttribute: formMapping.attributes[\"dob\"]\n                },\n                {\n                    label: \"Date of Birth is estimated\",\n                    trackedEntityAttribute: formMapping.attributes[\"estimated_dob\"]\n                },\n                {\n                    label: \"Age in years\",\n                    trackedEntityAttribute: formMapping.attributes[\"age\"]\n                },\n                {\n                    label: \"Address\",\n                    trackedEntityAttribute: formMapping.attributes[\"address\"]\n                },\n                {\n                    label: \"Sex\",\n                    trackedEntityAttribute: formMapping.attributes[\"sex\"]\n                },\n                {\n                    label: \"Underlying Cause of Death\",\n                    dataElement: formMapping.dataElements[\"underlyingCOD\"]\n                },\n                {\n                    label: \"ICD-11\",\n                    dataElement: formMapping.dataElements[\"underlyingCOD_code\"]\n                }],\n                footer: [{\n                    label: \"Institution Name\",\n                    enrollment: \"orgUnit\"\n                },\n                {\n                    label: \"Certificate Date\",\n                    enrollment: \"enrollmentDate\"\n                }]\n            }\n\n            Promise.all([\n                metadataApi.push(\"/api/dataStore/WHO_ICD11_COD/program\", {id: metadata[\"programs\"][0].id}, \"PUT\"),\n                metadataApi.push(\"/api/dataStore/WHO_ICD11_COD/femaleOption\", {code: femaleOption}, \"PUT\"),\n                metadataApi.push(\"/api/dataStore/WHO_ICD11_COD/icdOptionSet\", {id: metadata[\"optionSets\"].find( ({code}) => code === \"icd11\").id}, \"PUT\"),\n                metadataApi.push(\"/api/dataStore/WHO_ICD11_COD/formMapping\", formMapping, \"PUT\"),\n                metadataApi.get(\"/api/options.json\", { paging: false }, [\n                    \"fields=id,name,code,attributeValues[value,attribute[id]]\",\n                    `filter=optionSet.id:eq:${metadata[\"optionSets\"].find( ({code}) => code === \"icd11\").id}`\n                ]),\n                metadataApi.push(\n                    \"/api/dataStore/WHO_ICD11_COD/certificateTemplate\",\n                    { certificate: certtificateTemplate },\n                    \"PUT\"\n                ),\n                metadataApi.push(\"/api/dataStore/WHO_ICD11_COD/fullnameOption\", {fullnameOption: fullnameOption}, \"PUT\")\n            ])\n            .then( res => {\n                setFemaleCode(femaleOption);\n                setCertificateTemplate(certtificateTemplate);\n                getICD11Options(res[4].options);\n                setStatus({\n                    title: t(\"complete\"),\n                    subTitle: `${t(\"programID\")} ${metadata[\"programs\"][0].id}`,\n                    status: \"finish\"\n                });\n            });\n        }\n    }, [results])\n\n    return (\n        <Modal\n            width={\"50%\"}\n            bodyStyle={{\n                height: \"100%\",\n            }}\n            centered\n            visible={open}\n            closable={false}\n            footer={false}\n        >\n            <div style={{\n                height: \"55vh\"\n            }}>\n                <Result\n                icon={( status.status === \"installing\" ) ? <LoadingMask /> : <CheckCircleOutlined />}\n                title={status.title}\n                subTitle={status.subTitle}\n                extra={<Button \n                    disabled={status.status !== \"finish\"} \n                    type=\"primary\" key=\"complete\"\n                    onClick={() => {\n                        setStatus({\n                            ...status,\n                            status: \"installing\",\n                            title: \"Loading metadata\"\n                        });\n                        Promise.all([\n                            metadataApi.get(\"/api/trackedEntityAttributes.json\", { paging: false }, [\"fields=id,displayName,valueType,optionSet,formName\"]),\n                            metadataApi.getTrackerDataElements(),\n                            metadataApi.getProgramMetadata(metadata[\"programs\"][0].id),\n                            metadataApi.getMe()\n                        ]).then( results => {\n                            setTeas(results[0].trackedEntityAttributes);\n                            setTrackerDataElements(results[1].dataElements);\n                            setProgramMetadata(results[2]);\n                            setStatus({\n                                ...status,\n                                status: \"finish\",\n                                title: \"Install Complete\"\n                            });\n                            let roles = {\n                                admin: false,\n                                data: false,\n                                view: false\n                              };\n                            results[3].userGroups.forEach( userGroup => {\n                            const role = results[2].userGroupAccesses.find( ({id}) => id === userGroup.id );\n                            if ( role ) {\n                                if ( role.access.charAt(1) === 'w' ) {\n                                roles = {\n                                    ...roles,\n                                    admin: true\n                                }\n                                }\n                                if ( role.access.charAt(3) === 'w' ) {\n                                roles = {\n                                    ...roles,\n                                    data: true\n                                }\n                                }\n                                if ( role.access.charAt(0) === 'r' && role.access.charAt(2) === 'r'  ) {\n                                roles = {\n                                    ...roles,\n                                    view: true\n                                }\n                                }\n                            }\n                            });\n                            setUserRole(roles);\n                        });\n                    }}\n                >\n                    Finish\n                </Button>}\n            >\n                {\n                    ( programMetadata === null || Object.keys(results).length !== 0 ) && Object.keys(results).map( (key, index) => \n                    (<div key={index}>\n                    {\n                        (results[key].status === \"OK\") ? <CheckCircleOutlined style={{color: \"blue\"}} /> : <CloseCircleOutlined style={{color: \"red\"}} />\n                    }\n                    {\n                        ` ${key}`\n                    }\n                    </div>))\n                }\n            </Result>\n            </div>\n        </Modal>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        metadata: state.admin.installingFile,\n        formMapping: state.metadata.formMapping,\n        femaleOption: state.admin.femaleOption,\n        fullnameOption: state.admin.fullnameOption,\n        programMetadata: state.metadata.programMetadata\n    }\n}\n\nconst mapDispatchToProps = {\n    setProgramMetadata,\n    getICD11Options,\n    setFemaleCode,\n    setCertificateTemplate,\n    setTeas,\n    setTrackerDataElements,\n    setUserRole\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Finish);","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Administration/FrameB.jsx",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Administration/AssignOrgUnits.jsx",["497"],"import { useState } from \"react\";\nimport { Select, Button } from \"antd\";\nimport _ from \"lodash\";\n/* REDUX */\nimport { connect } from \"react-redux\";\nimport { assignOrgUnits } from \"../../redux/actions/admin\";\nimport { useTranslation } from \"react-i18next\";\n/*       */\nimport { Components } from \"tracker-capture-app-core\";\nconst { Option } = Select;\nconst { MultipleOrgUnitSelector } = Components;\n\nconst AssignOrgUnits = ({ admin, metadata, assignOrgUnits }) => {\n  const { t } = useTranslation();\n  const [selectedOrgUnitLevel, setSelectedOrgUnitLevel] = useState(\"\");\n  const [selectedOrgUnitGroup, setSelectedOrgUnitGroup] = useState(\"\");\n\n  const { assignedOrgUnits } = admin;\n  const { orgUnitGroups, orgUnitLevels, orgUnits } = metadata;\n\n  const selectOrgUnits = (orgUnits) => {\n    const selectedPaths = orgUnits.map((ou) => ou.path);\n    const newAssignOrgUnits = _.compact([\n      ...assignedOrgUnits,\n      ...selectedPaths\n    ]);\n    assignOrgUnits(newAssignOrgUnits);\n  };\n  const deselectOrgUnits = (orgUnits) => {\n    const selectedPaths = orgUnits.map((ou) => ou.path);\n    const newAssignOrgUnits = assignedOrgUnits.filter(\n      (ao) => !selectedPaths.includes(ao)\n    );\n    assignOrgUnits(newAssignOrgUnits);\n  };\n\n  return (\n    <div className=\"administration-orgunit-container\">\n      <div className=\"administration-multiorgunit-selector-container\">\n        <MultipleOrgUnitSelector\n          selectedOrgUnits={assignedOrgUnits}\n          handleSelectOrgUnits={(selected) => {\n            assignOrgUnits(selected.selected);\n          }}\n        />\n      </div>\n      <div className=\"administration-multiorgunit-selection-container\">\n        <div>\n          <div>{t(\"OULevel\")}</div>\n          <div>\n            <Select\n              value={selectedOrgUnitLevel.value}\n              placeholder=\"Select organisation unit level\"\n              style={{ width: 250 }}\n              onChange={(value, option) => {\n                setSelectedOrgUnitLevel({ ...option });\n              }}\n              options={orgUnitLevels.map((oul) => {\n                return {\n                  value: oul.id,\n                  level: oul.level,\n                  label: oul.displayName\n                };\n              })}\n            />\n          </div>\n          <div>\n            <Button\n              onClick={() => {\n                selectOrgUnits(\n                  orgUnits.filter(\n                    (ou) => ou.level === selectedOrgUnitLevel.level\n                  )\n                );\n              }}\n            >\n            { \n              t(\"Select\")\n            }\n            </Button>\n            <Button\n              onClick={() => {\n                deselectOrgUnits(\n                  orgUnits.filter(\n                    (ou) => ou.level === selectedOrgUnitLevel.level\n                  )\n                );\n              }}\n            >\n            {\n              t(\"deselect\")\n            }\n            </Button>\n          </div>\n        </div>\n        <div>\n          <div>{t(\"OUGroup\")}</div>\n          <div>\n            <Select\n              value={selectedOrgUnitGroup.value}\n              placeholder=\"Select organisation unit group\"\n              style={{ width: 250 }}\n              onChange={(value, option) => {\n                setSelectedOrgUnitGroup({ ...option });\n              }}\n              options={orgUnitGroups.map((oug) => {\n                return {\n                  value: oug.id,\n                  orgUnitList: oug.organisationUnits.map((ou) => ou.id),\n                  label: oug.displayName\n                };\n              })}\n            />\n          </div>\n          <div>\n            <Button\n              onClick={() => {\n                if (!selectedOrgUnitGroup) return;\n                selectOrgUnits(\n                  orgUnits.filter((ou) =>\n                    selectedOrgUnitGroup.orgUnitList.includes(ou.id)\n                  )\n                );\n              }}\n            >\n            { \n              t(\"select\")\n            }\n            </Button>\n            <Button\n              onClick={() => {\n                if (!selectedOrgUnitGroup) return;\n                deselectOrgUnits(\n                  orgUnits.filter((ou) =>\n                    selectedOrgUnitGroup.orgUnitList.includes(ou.id)\n                  )\n                );\n              }}\n            >\n            {\n              t(\"deselect\")\n            }\n            </Button>\n          </div>\n        </div>\n        <div>\n          <div>\n            <Button\n              onClick={() => {\n                selectOrgUnits(orgUnits);\n              }}\n            >\n            { \n              t(\"selectAll\")\n            }\n            </Button>\n            <Button\n              onClick={() => {\n                deselectOrgUnits(orgUnits);\n              }}\n            >\n            {\n              t(\"deselectAll\")\n            }\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    admin: state.admin,\n    metadata: state.metadata\n  };\n};\nconst mapDispatchToProps = { assignOrgUnits };\nexport default connect(mapStateToProps, mapDispatchToProps)(AssignOrgUnits);\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Administration/Certificate.jsx",["498"],"import { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Stepper, Step, StepButton, StepContent } from \"@mui/material\";\nimport { \n    Row, Col, Divider, \n    Typography, \n    Input, Upload, Button,\n    List,\n    Modal, message\n} from \"antd\";\nimport CustomCertificate from \"./CustomCertificate\";\nimport { UploadOutlined, CaretUpFilled, CaretDownFilled, CloseCircleFilled } from '@ant-design/icons';\nimport { changeCerticateTemplate, setCertificateLogo } from \"../../redux/actions/admin\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Certificate = props => {\n    const { t } = useTranslation();\n    const [type,setType] = useState(0);\n\n    const [open, setOpen] = useState(null); // Body, Footer, null\n    const [search, setSearch] = useState(\"\");\n    const [label, setLabel] = useState(\"\");\n    const [selected, setSelected] = useState({});\n\n    const { Search } = Input;\n\n    useEffect(() => {\n        props.changeCerticateTemplate(props.certificateTemplateMetadata);\n    },[])\n\n    const handleMoveUp = (part, index) => {\n        // part: info | footer\n        let arr = props.certificateTemplateAdmin[part];\n        const temp = arr[index];\n        arr[index] = arr[index-1];\n        arr[index-1]=temp;\n        props.changeCerticateTemplate({\n            ...props.certificateTemplateAdmin,\n            [part]: arr\n        });\n    }\n\n    const handleMoveDown = (part, index) => {\n        // part: info | footer\n        let arr = props.certificateTemplateAdmin[part];\n        const temp = arr[index];\n        arr[index] = arr[index+1];\n        arr[index+1]=temp;\n        props.changeCerticateTemplate({\n            ...props.certificateTemplateAdmin,\n            [part]: arr\n        });\n    }\n\n    const handleRemoveItem = (part, index) => {\n        let arr = props.certificateTemplateAdmin[part];\n        arr.splice(index,1);\n        props.changeCerticateTemplate({\n            ...props.certificateTemplateAdmin,\n            [part]: arr\n        });\n    }\n\n    const handleUpdateTitle = value => {\n        props.changeCerticateTemplate({\n            ...props.certificateTemplateAdmin,\n            title: value\n        })\n    }\n\n    const handleAddItem = () => {\n        if ( label === \"\" || selected === {} ) {\n            message.error('ERROR Please enter the label and selected an item.');\n        } else {\n            const key = open === \"Body\" ? \"info\" : \"footer\";\n            props.changeCerticateTemplate({\n                ...props.certificateTemplateAdmin,\n                [key]: [...props.certificateTemplateAdmin[key],...[{\n                    ...selected,\n                    label: label\n                }]]\n            });\n            handleCloseModal();\n        }\n    }\n\n    const handleCloseModal = () => {\n        setOpen(null);\n        setSelected({});\n        setLabel(\"\");\n        setSearch(\"\");\n    }\n\n    const handleUploadLogo = img => {\n        const reader = new FileReader();\n        reader.onload = e => {\n            props.setCertificateLogo({ image: e.target.result });\n        };\n\n        reader.readAsDataURL(img);\n    }\n\n    const getDisplayName = data => {\n        if (data) return data.displayName;\n        else return \"undefined\";\n    }\n\n    return (\n        <div className=\"administration-certificate-container\">\n            {(props.certificateTemplateAdmin) && <Stepper nonLinear activeStep={type} orientation=\"vertical\">\n                <Step>\n                    <StepButton onClick={() => setType(0)}>{t(\"defaultCertificate\")}</StepButton>\n                    <StepContent>\n                        <Row gutter={[16, 16]}>\n                            <Col span={12}>\n                                <div className=\"administration-certificate-box\">\n                                    <div className=\"administration-certificate-title-setup\">\n                                        <div>{t(\"certificateTitle\")}</div>\n                                        <div><Input placeholder=\"Certificate Name\" value={props.certificateTemplateAdmin.title} onChange={e => handleUpdateTitle(e.target.value)}/></div>\n                                    </div>\n                                    <div className=\"administration-certificate-title-setup\">\n                                        <div>{t(\"certificateLogo\")}</div>\n                                        <div>\n                                            <Upload\n                                                name=\"uploadLogo\"\n                                                showUploadList={false}\n                                                beforeUpload={handleUploadLogo}\n                                            >\n                                                <Button icon={<UploadOutlined />}>{t(\"upload\")}</Button>\n                                            </Upload>\n                                        </div>\n                                    </div>\n                                    <Divider plain orientation=\"right\"><Button onClick={() => setOpen(\"Body\")}>{t(\"addItemBody\")}</Button></Divider>\n                                    <div className=\"administration-certificate-setup\">\n                                        <List \n                                            size=\"small\"\n                                            split={false}\n                                            dataSource={props.certificateTemplateAdmin.info}\n                                            renderItem={(item,index) => (\n                                                <List.Item\n                                                    actions={[\n                                                        <Button type=\"text\" icon={<CaretUpFilled />} disabled={( index === 0 )} onClick={() => handleMoveUp(\"info\",index)} />,\n                                                        <Button type=\"text\" icon={<CaretDownFilled />} disabled={( (index + 1) === props.certificateTemplateAdmin.info.length )} onClick={() => handleMoveDown(\"info\",index)} />,\n                                                        <Button type=\"text\" danger icon={<CloseCircleFilled />} onClick={() => handleRemoveItem(\"info\",index)} />\n                                                    ]}\n                                                >\n                                                    <List.Item.Meta \n                                                        title={item.label}\n                                                        description={(item.dataElement) ? `Data Element: ${item.dataElement}` : (item.trackedEntityAttribute) ? `Attribute: ${item.trackedEntityAttribute}` : `Enrollment: ${item.enrollment}`}\n                                                    />\n                                                </List.Item>\n                                            )}\n                                        />\n                                    </div>\n                                    <Divider plain orientation=\"right\"><Button onClick={() => setOpen(\"Footer\")}>{t(\"addItemFooter\")}</Button></Divider>\n                                    <div className=\"administration-certificate-setup\">\n                                        <List \n                                            size=\"small\"\n                                            split={false}\n                                            dataSource={props.certificateTemplateAdmin.footer}\n                                            renderItem={(item,index) => (\n                                                <List.Item\n                                                    actions={[\n                                                        <Button type=\"text\" icon={<CaretUpFilled />} disabled={( index === 0 )} onClick={() => handleMoveUp(\"footer\",index)} />,\n                                                        <Button type=\"text\" icon={<CaretDownFilled />} disabled={( (index + 1) === props.certificateTemplateAdmin.footer.length )} onClick={() => handleMoveDown(\"footer\",index)} />,\n                                                        <Button type=\"text\" danger icon={<CloseCircleFilled />} onClick={() => handleRemoveItem(\"footer\",index)} />\n                                                    ]}\n                                                >\n                                                    <List.Item.Meta \n                                                        title={item.label}\n                                                        description={(item.dataElement) ? `Data Element: ${item.dataElement}` : (item.trackedEntityAttribute) ? `Attribute: ${item.trackedEntityAttribute}` : `Enrollment: ${item.enrollment}`}\n                                                    />\n                                                </List.Item>\n                                            )}\n                                        />\n                                    </div>\n                                </div>\n                            </Col>\n                            <Col span={12}>\n                                <div className=\"administration-certificate-box\">\n                                    <Divider orientation=\"center\">{t(\"reviewDefaultCertificate\")}</Divider>\n                                    <div style={{margin: \"20x 0px\"}}>\n                                        <Row gutter={[16, 16]}>\n                                            <Col span={4}>\n                                                <div className=\"administration-certificate-logo\">\n                                                    { props.certificateTemplateAdmin.logo !== null && <img src={props.certificateTemplateAdmin.logo} alt=\"logo\" /> }\n                                                </div>\n                                            </Col>\n                                            <Col span={16}>\n                                                <Typography.Title\n                                                    style={{ marginBottom: 0, textAlign: \"center\" }}\n                                                    level={2}\n                                                >\n                                                    {props.certificateTemplateAdmin.title}\n                                                </Typography.Title>\n                                            </Col>\n                                            <Col span={4}></Col>\n                                        </Row>\n                                    </div>\n                                    <div style={{margin: \"50px 0px\"}}>\n                                        {/* <Divider orientation=\"left\">Body</Divider> */}\n                                        <Row gutter={[16, 33]}>\n                                            {\n                                                props.certificateTemplateAdmin.info.map( row => <>\n                                                    <Col span={10}><strong>{row.label}</strong></Col>\n                                                    <Col span={14}>\n                                                    {\n                                                        (row.dataElement) ? getDisplayName(props.programMetadata.programStages[0].dataElements.find(de => de.id === row.dataElement)) :\n                                                            (row.trackedEntityAttribute) ? getDisplayName(props.programMetadata.trackedEntityAttributes.find(attr => attr.id === row.trackedEntityAttribute)) : row.enrollment\n                                                    }\n                                                    </Col>\n                                                </>)\n                                            }\n                                        </Row>\n                                    </div>\n                                    <div style={{margin: \"50px 0px\"}}>\n                                        {/* <Divider orientation=\"left\">Footer</Divider> */}\n                                        <Row gutter={[8, 25]}>\n                                            {\n                                                props.certificateTemplateAdmin.footer.map( row => <>\n                                                    <Col style={{ textAlign: \"right\" }} offset={10} span={8}><strong>{row.label}</strong></Col>\n                                                    <Col style={{ textAlign: \"right\" }} span={6}>\n                                                    {\n                                                        (row.dataElement) ? getDisplayName(props.programMetadata.programStages[0].dataElements.find(de => de.id === row.dataElement)) :\n                                                            (row.trackedEntityAttribute) ? getDisplayName(props.programMetadata.trackedEntityAttributes.find(attr => attr.id === row.trackedEntityAttribute)) : row.enrollment\n                                                    }\n                                                    </Col>\n                                                </>)\n                                            }\n                                        </Row>\n                                    </div>\n                                </div>\n                            </Col>\n                        </Row>\n                    </StepContent>\n                </Step>\n                <Step>\n                    <StepButton onClick={() => setType(1)}>{t(\"customCertificate\")}</StepButton>\n                    <StepContent>\n                        <div className=\"administration-custom-certificate-container\">\n                            <CustomCertificate />\n                        </div>\n                    </StepContent>\n                </Step>\n            </Stepper>}\n            <Modal\n                width={\"50%\"}\n                centered\n                title={`${t(\"certificateAddItemTitle\")} ${open}`}\n                visible={open !== null}\n                onCancel={handleCloseModal}\n                onOk={handleAddItem}\n            >\n                <div className=\"administration-certificate-modal\">\n                    <Input style={{ width: \"100%\" }} value={label} placeholder=\"Enter Label\" onChange={e => setLabel(e.target.value)} />\n                </div>\n                <div className=\"administration-certificate-modal\">\n                    <Input style={{ width: \"100%\" }} disabled={true} value={selected.displayName} placeholder=\"Selected Data\" />\n                </div>\n                <div className=\"administration-certificate-modal\">\n                    <div className=\"administration-certificate-modal-box\">\n                        <div className=\"administration-certificate-modal\">\n                            <Search placeholder=\"Search\" style={{ width: \"100%\" }} value={search} onChange={e => setSearch(e.target.value)} />\n                        </div>\n                        <div className=\"administration-certificate-modal-list\">\n                            {\n                            [\n                                {id: \"enrollmentDate\", displayName: \"Enrolment Date\"}, \n                                {id: \"incidentDate\", displayName: \"Incident Date\"},\n                                {id: \"orgUnitName\", displayName: \"Organisation Unit\"}\n                            ].filter( it => it.displayName.toLowerCase().includes(search.toLowerCase())).length > 0 && \n                            <>\n                                <Divider orientation=\"left\">Enrollment</Divider>\n                                <List \n                                    size=\"small\"\n                                    split={false}\n                                    dataSource={[\n                                        {id: \"enrollmentDate\", displayName: \"Enrolment Date\"}, \n                                        {id: \"incidentDate\", displayName: \"Incident Date\"},\n                                        {id: \"orgUnitName\", displayName: \"Organisation Unit\"}\n                                    ].filter( it => it.displayName.toLowerCase().includes(search.toLowerCase()))}\n                                    renderItem={(item) => (\n                                        <List.Item>\n                                            <div className=\"administration-certificate-modal-item\" onClick={() => setSelected({\n                                                enrollment: item.id,\n                                                displayName: item.displayName\n                                            })}>{item.displayName}</div>\n                                        </List.Item>\n                                    )}\n                                />\n                            </>}\n                            {props.programMetadata.trackedEntityAttributes.filter( it => it.displayName.toLowerCase().includes(search.toLowerCase())).length > 0 && \n                            <>\n                                <Divider orientation=\"left\">Tracked Entity Attributes</Divider>\n                                <List \n                                    size=\"small\"\n                                    split={false}\n                                    dataSource={props.programMetadata.trackedEntityAttributes.filter( it => it.displayName.toLowerCase().includes(search.toLowerCase()))}\n                                    renderItem={(item) => (\n                                        <List.Item>\n                                            <div className=\"administration-certificate-modal-item\" onClick={() => setSelected({\n                                                trackedEntityAttribute: item.id,\n                                                displayName: item.displayName\n                                            })}>{item.displayName}</div>\n                                        </List.Item>\n                                    )}\n                                />\n                            </>}\n                            {props.programMetadata.programStages[0].dataElements.filter( it => it.displayName.toLowerCase().includes(search.toLowerCase())).length > 0 && \n                            <>\n                                <Divider orientation=\"left\">Data Elements</Divider>\n                                <List \n                                    size=\"small\"\n                                    split={false}\n                                    dataSource={props.programMetadata.programStages[0].dataElements.filter( it => it.displayName.toLowerCase().includes(search.toLowerCase()))}\n                                    renderItem={(item) => (\n                                        <List.Item>\n                                            <div className=\"administration-certificate-modal-item\"\n                                                onClick={() => setSelected({\n                                                    dataElement: item.id,\n                                                    displayName: item.displayName\n                                                })}\n                                            >{item.displayName}</div>\n                                        </List.Item>\n                                    )}\n                                />\n                            </>}\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        certificateTemplateAdmin: state.admin.certificateTemplate,\n        certificateTemplateMetadata: state.metadata.certificateTemplate,\n        programMetadata: state.metadata.programMetadata\n    }\n}\n\nconst mapDispatchToProps = {\n    changeCerticateTemplate,\n    setCertificateLogo\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Certificate);","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Administration/Review.jsx",["499","500","501"],"import {\n  Card,\n  Row,\n  Col,\n  Table,\n  Collapse,\n  Switch,\n  // Checkbox\n} from \"antd\";\nimport { Hooks, Components } from \"tracker-capture-app-core\";\n/* REDUX */\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { defaultAttributes } from \"../../utils/const\";\nimport { generateDefaultMetadata, generateCustomMetadata, updateProgramIndicators, updateSQLViews } from \"../../utils/generateMetadata\";\nimport { setInstallingFile } from \"../../redux/actions/admin\";\nimport { setFormMapping } from \"../../redux/actions/metadata\";\nimport { useTranslation } from \"react-i18next\";\n/*       */\nconst { useApi } = Hooks;\nconst { LoadingMask } = Components;\n\n// Temporally here\nconst fixedSections = require(\"../../asset/metadata/programStageSections.json\").programStageSections.slice(6,10);\nconst fixedDEs = require(\"../../asset/metadata/dataElements.json\").dataElements;\n\nconst Review = ({\n  admin: {\n    trackedEntityAttributes,\n    dataElements,\n    trackedEntityType,\n    assignedOrgUnits,\n    users,\n    type: installType,\n    fullnameOption,\n    femaleOption\n    // installingFile: metadata\n  },\n  allTeas,\n  allExistedDataElements,\n  allExistedUserGroups,\n  setInstallingFile,\n  setFormMapping\n}) => {\n  const { t } = useTranslation();\n  const { metadataApi } = useApi();\n\n  const [metadata, setMetadata] = useState(null);\n  const [generateNewUID, setgenerateNewUID] = useState(false);\n\n  const getAttr = (id) => allTeas.find(({ id: attrId }) => attrId === id);\n  const getUser = (id) => allExistedUserGroups.find(({ id: userId }) => userId === id);\n  const getDE = (id) => allExistedDataElements.find(({ id: deId }) => deId === id);\n  \n  const getUserGroupAccesses = () => {\n    let userAccesses = {};\n    for ( const group in users ) {\n      users[group].forEach( user => {\n        if ( !userAccesses[user] ) userAccesses[user] = [group];\n        else userAccesses[user].push(group);\n      });\n    }\n    let userGroupAccesses = [];\n    for ( const user in userAccesses ) {\n      let access = \"r-------\";\n      userAccesses[user].forEach( a => {\n        if ( a === \"admin\" ) access = access.substring(0,1) + \"wr\" + access.substring(3,8); \n        if ( a === \"capture\" ) access = access.substring(0,2) + \"rw\" + access.substring(4,8);\n        if ( a === \"view\" ) access = access.substring(0,2) + \"r\" + access.substring(3,8);\n      })\n      userGroupAccesses.push({\n        id: user,\n        access: access\n      })\n    }\n    return userGroupAccesses;\n  }\n    \n  useEffect( () => {\n    (async () => {\n      setMetadata(null);\n      let data = {};\n\n      // generate metadata (base on setting stored in redux)\n      if (installType === \"custom\") {\n        const ageAttribute = await metadataApi.get(`/api/trackedEntityAttributes.json`, { paging: false }, [`filter=id:eq:${trackedEntityAttributes.find(([,name]) => name === \"Age in years\")[0]}`,\"fields=:owner,!created,!lastUpdated,!createdBy,!lastUpdatedBy\"]);\n        data = generateCustomMetadata({trackedEntityAttributes,dataElements,trackedEntityType,fullnameOption}, generateNewUID,ageAttribute.trackedEntityAttributes[0]);\n        data.metadata.programIndicators = updateProgramIndicators(data.metadata.programIndicators,trackedEntityAttributes.find(([,name]) => name === \"Date of Birth\")[0],trackedEntityAttributes.find(([,name]) => name === \"Sex\")[0],femaleOption);\n        data.metadata.sqlViews = updateSQLViews(data.metadata.sqlViews,trackedEntityAttributes.find(([,name]) => name === \"Age in years\")[0],trackedEntityAttributes.find(([,name]) => name === \"Sex\")[0],femaleOption);\n      }\n      else {\n        data = generateDefaultMetadata(false,generateNewUID);\n      }\n\n      data.metadata = {\n        ...data.metadata,\n        programs: [{\n          ...data.metadata.programs[0],\n          organisationUnits: assignedOrgUnits.map( o => {return { id : o.substring(o.length-11,o.length) }}),\n          userGroupAccesses: getUserGroupAccesses()\n        }]\n      };\n\n      // local state\n      setMetadata(data.metadata);\n\n      // redux\n      setInstallingFile(data.metadata);\n      setFormMapping(data.formMapping);\n    })();\n  }, [generateNewUID]);\n  \n  const getSwitchValue = section => {\n    const sectionValue = dataElements.frameB.defaultSections.find(\n      ({name}) => section.name === name\n    );\n    if (sectionValue) {\n      return true;\n    }\n    return false;\n  };\n\n  const renderCustomAttributesStep = () => {\n    const otherAttributes = trackedEntityAttributes.filter(\n      ([, source]) => !source\n    );\n    const defAttrs = trackedEntityAttributes.filter(\n      ([des, source]) => source && des !== ''\n    );\n    return Array.from(\n      {\n        length: Math.max(otherAttributes.length, defAttrs.length),\n      },\n      (_, index) => {\n        const defaultAttr = defAttrs[index];\n        const defaultAttrName = (defaultAttr[1] === 'First Name' && fullnameOption) ? \"Full Name\" : defaultAttr[1];\n        return {\n          key: index,\n          default: defaultAttrName,\n          name: getAttr(defaultAttr[0]) ? getAttr(defaultAttr[0]).displayName : \"\",\n          other: otherAttributes[index]\n            ? getAttr(otherAttributes[index][0]).displayName\n            : \"\",\n        };\n      }\n    );\n  };\n\n  const renderDefaultAttributesStep = () => {\n    // return fullnameOption ? \n    // [\n    //   {key:0,default:\"Unique ID\",name:metadata.trackedEntityAttributes.find(tea => tea.name === \"COD System ID\").name,other:\"\"},\n    //   {key:1,default:\"Full Name\",name:metadata.trackedEntityAttributes.find(tea => tea.name === \"Given name\").name,other:\"\"},\n    //   {key:2,default:\"Date of Birth\",name:metadata.trackedEntityAttributes.find(tea => tea.name === \"Date of birth\").name,other:\"\"},\n    //   {key:3,default:\"Date of Birth is estimated\",name:metadata.trackedEntityAttributes.find(tea => tea.name === \"Date of birth is estimated\").name,other:\"\"},\n    //   {key:4,default:\"Age in years\",name:metadata.trackedEntityAttributes.find(tea => tea.name === \"Age (years)\").name,other:\"\"},\n    //   {key:5,default:\"Address\",name:metadata.trackedEntityAttributes.find(tea => tea.name === \"Address (current)\").name,other:\"\"},\n    //   {key:6,default:\"Sex\",name:metadata.trackedEntityAttributes.find(tea => tea.name === \"Sex\").name,other:\"\"}\n    // ] \n    // : \n    return [\n      {key:0,default:\"Unique ID\",name:metadata.trackedEntityAttributes.find(tea => tea.name === \"COD System ID\").name,other:\"\"},\n      {key:1,default:\"First Name\",name:metadata.trackedEntityAttributes.find(tea => tea.name === \"Given name\").name,other:\"\"},\n      {key:2,default:\"Last Name\",name:metadata.trackedEntityAttributes.find(tea => tea.name === \"Family name\").name,other:\"\"},\n      {key:3,default:\"Date of Birth\",name:metadata.trackedEntityAttributes.find(tea => tea.name === \"Date of birth\").name,other:\"\"},\n      {key:4,default:\"Date of Birth is estimated\",name:metadata.trackedEntityAttributes.find(tea => tea.name === \"Date of birth is estimated\").name,other:\"\"},\n      {key:5,default:\"Age in years\",name:metadata.trackedEntityAttributes.find(tea => tea.name === \"Age (years)\").name,other:\"\"},\n      {key:6,default:\"Address\",name:metadata.trackedEntityAttributes.find(tea => tea.name === \"Address (current)\").name,other:\"\"},\n      {key:7,default:\"Sex\",name:metadata.trackedEntityAttributes.find(tea => tea.name === \"Sex\").name,other:\"\"}\n    ]\n  } \n\n  return (\n    <div className=\"administration-reviewfinish-container\">\n      {\n        (metadata === null) ? <LoadingMask /> : \n        <Row \n          style={{ \n            width: \"100%\", \n            height: \"100%\"\n          }} \n          gutter={[16, 24]}\n        >\n          {/* <Col span={18}\n            style={{ \n              width: \"100%\", \n              // height: \"100%\", \n              // overflow: \"auto\",\n              margin: \"auto\",\n              textAlign: \"center\"\n            }}  \n          >\n            <Checkbox checked={generateNewUID} onChange={() => setgenerateNewUID(!generateNewUID)}>Generate new UID for the installing metadata</Checkbox>\n          </Col> */}\n          <Col span={18}\n            style={{ \n              width: \"100%\", \n              height: \"100%\", \n              // overflow: \"auto\",\n              margin: \"auto\" \n            }} \n          >\n            <Card\n              style={{ marginBottom: 10 }}\n              type=\"inner\"\n              title={t(\"step2Attribute\")}\n            >\n              <Row>\n                <Table\n                  size=\"small\"\n                  bordered\n                  pagination={false}\n                  columns={[\n                    {\n                      title: t(\"defaultAttribute\"),\n                      colSpan: 2,\n                      dataIndex: \"default\"\n                    },\n                    {\n                      colSpan: 0,\n                      dataIndex: \"name\"\n                    },\n                    {\n                      title: t(\"otherAttributes\"),\n                      dataIndex: \"other\"\n                    },\n                  ]}\n                  dataSource={ installType === \"custom\" ? renderCustomAttributesStep() : renderDefaultAttributesStep()}\n                />\n              </Row>\n            </Card>\n            <Card style={{ marginBottom: 10 }} type=\"inner\" title={t(\"step3FrameA\")}>\n              <Row>\n                <Col xs={12}>\n                  <Card\n                    type=\"inner\"\n                    style={{ height: 255, overflow: \"auto\" }}\n                    size=\"small\"\n                    title={t(\"defaultSectionsInFrameB\")}\n                  >\n                    <Collapse\n                      // style={{ height: 500, overflow: \"auto\" }}\n                      defaultActiveKey={[]}\n                    >\n                      {metadata.programStageSections.slice(0,6).map( section => {\n                        return (\n                          <Collapse.Panel\n                            key={section.id}\n                            header={\n                              <div>\n                                <Switch\n                                  disabled\n                                  checked={true}\n                                  // onChange={changeSwitch(section)}\n                                  checkedChildren=\"Include\"\n                                  unCheckedChildren=\"Skip\"\n                                  style={{ marginRight: 8 }}\n                                />\n                                <strong>{section.name}</strong>\n                              </div>\n                            }\n                          >\n                            {section.dataElements.map( de => (\n                              <div key={de.id} className=\"administration-attribute\">\n                                {\n                                  metadata.dataElements.find(\n                                    ({ id }) => id === de.id\n                                  ).name\n                                }\n                              </div>\n                            ))}\n                          </Collapse.Panel>\n                        );\n                      })}\n                    </Collapse>\n                  </Card>\n                </Col>\n                <Col xs={12}>\n                  <Card\n                    type=\"inner\"\n                    style={{ height: 255, overflow: \"auto\" }}\n                    size=\"small\"\n                    title={t(\"otherSectionsInFrameA\")}\n                  >\n                    {(installType === \"custom\" ) && \n                      <Collapse defaultActiveKey={[\"1\"]}>\n                        {dataElements.frameA.otherSections.map(([name, des], index) => (\n                          <Collapse.Panel key={index} header={name}>\n                            <Table\n                              size=\"small\"\n                              bordered\n                              showHeader={false}\n                              pagination={false}\n                              columns={[\n                                {\n                                  dataIndex: 0\n                                }\n                              ]}\n                              dataSource={des.map((id) => [getDE(id).displayName])}\n                            />\n                          </Collapse.Panel>\n                        ))}\n                      </Collapse>\n                    }\n                  </Card>\n                </Col>\n              </Row>\n            </Card>\n            <Card style={{ marginBottom: 10 }} type=\"inner\" title={t(\"step4FrameB\")}>\n              <Row>\n                <Col xs={12}>\n                  <Card\n                    type=\"inner\"\n                    style={{ height: 255, overflow: \"auto\" }}\n                    size=\"small\"\n                    title={t(\"defaultSectionsInFrameB\")}\n                  >\n                    <Collapse\n                      // style={{ height: 500, overflow: \"auto\" }}\n                      defaultActiveKey={[]}\n                    >\n                      {fixedSections.map( section => {\n                        return (\n                          <Collapse.Panel\n                            key={section.id}\n                            header={\n                              <div>\n                                <Switch\n                                  disabled\n                                  checked={installType === \"default\" ? true : getSwitchValue(section)}\n                                  // onChange={changeSwitch(section)}\n                                  checkedChildren=\"Include\"\n                                  unCheckedChildren=\"Skip\"\n                                  style={{ marginRight: 8 }}\n                                />\n                                <strong>{section.name}</strong>\n                              </div>\n                            }\n                          >\n                            {section.dataElements.map( de => (\n                              <div key={de.id} className=\"administration-attribute\">\n                                {\n                                  fixedDEs.find(\n                                    ({ id }) => id === de.id\n                                  ).name\n                                }\n                              </div>\n                            ))}\n                          </Collapse.Panel>\n                        );\n                      })}\n                    </Collapse>\n                  </Card>\n                </Col>\n                <Col xs={12}>\n                  <Card\n                    type=\"inner\"\n                    style={{ height: 255, overflow: \"auto\" }}\n                    size=\"small\"\n                    title={t(\"otherSectionsInFrameB\")}\n                  >\n                    {(installType === \"custom\" ) && \n                      <Collapse>\n                        {dataElements.frameB.otherSections.map(([name,des], index) => {\n                          return (\n                            <Collapse.Panel key={index} header={name}>\n                              <Table\n                                size=\"small\"\n                                bordered\n                                showHeader={false}\n                                pagination={false}\n                                columns={[\n                                  {\n                                    dataIndex: 0\n                                  }\n                                ]}\n                                dataSource={des.map( de => [\n                                  getDE(de).displayName\n                                ])}\n                              />\n                            </Collapse.Panel>\n                          );\n                        })}\n                      </Collapse>\n                    }\n                  </Card>\n                </Col>\n              </Row>\n            </Card>\n            <Card\n              style={{ marginBottom: 10 }}\n              type=\"inner\"\n              title={t(\"step5OUs\")}\n            >\n              <div>\n                Number of OrgUnits assigned:{\" \"}\n                <strong>{assignedOrgUnits.length}</strong> org units\n              </div>\n            </Card>\n            <Card\n              style={{ marginBottom: 10 }}\n              type=\"inner\"\n              title={t(\"step6Users\")}\n            >\n              <Row>\n                <Col xs={24}>\n                  <Table\n                    size=\"small\"\n                    scroll={{\n                      y: \"calc(255px - 39px)\",\n                    }}\n                    bordered\n                    // showHeader={false}\n                    header={t(\"adminGroup\")}\n                    pagination={false}\n                    columns={[\n                      {\n                        title: t(\"adminGroup\"),\n                        dataIndex: \"admin\",\n                      },\n                      {\n                        title: t(\"captureGroup\"),\n                        dataIndex: \"capture\",\n                      },\n                      {\n                        title: t(\"viewGroup\"),\n                        dataIndex: \"view\",\n                      },\n                    ]}\n                    dataSource={Array.from(\n                      {\n                        length: Math.max(\n                          users.admin.length,\n                          users.capture.length,\n                          users.view.length\n                        ),\n                      },\n                      (_, index) => {\n                        return {\n                          key: index,\n                          admin: users.admin[index]\n                            ? getUser(users.admin[index]).displayName\n                            : \"\",\n                          capture: users.capture[index]\n                            ? getUser(users.capture[index]).displayName\n                            : \"\",\n                          view: users.view[index]\n                            ? getUser(users.view[index]).displayName\n                            : \"\",\n                        };\n                      }\n                    )}\n                  />\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        </Row>\n      }\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    admin: state.admin,\n    allTeas: state.metadata.trackedEntityAttributes,\n    allExistedDataElements: state.metadata.dataElements,\n    allExistedUserGroups: state.metadata.userGroups,\n  };\n};\n\nconst mapDispatchToProps = {\n  setInstallingFile,\n  setFormMapping\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Review);\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/actions/data/type.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/run.js",["502","503"],"import example from \"./pages/example\";\nimport page0 from \"./pages/page0\";\nimport page1 from \"./pages/page1\";\nimport page2 from \"./pages/page2\";\nimport page3 from \"./pages/page3\";\nimport page4 from \"./pages/page4\";\nimport page5 from \"./pages/page5\";\nimport page6 from \"./pages/page6\";\nimport page7 from \"./pages/page7\";\nimport page8 from \"./pages/page8\";\nimport page9 from \"./pages/page9\"\n\nconst run = (t) => {\n  return [\n    // example,\n    page1(t),\n    page2(t),\n    page3(t),\n    page4(t),\n    page5(t),\n    page6(t),\n    page7(t),\n    page8(t),\n    page9(t),\n    // page0\n  ];\n};\n\nexport default run;\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/utils.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/utils/generateChildChart.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/WidgetContainer/WidgetContainer.jsx",["504","505"],"import React, { useState, useEffect } from \"react\";\nimport { SyncLoader } from \"react-spinners\";\nimport { IoChevronDown } from \"react-icons/io5\";\nimport { Bar, StackedBarChart, VerticalStackedBarChart, DoubleStackedBarChart, CombinedChart, Map, Statistic, Line, Pie, Html, Treemap, Bublemap, Nodata } from \"../Widget\";\nimport { Menu, Dropdown, Tooltip } from \"antd\";\nimport IconButton from \"../IconButton\";\nimport \"./WidgetContainer.css\";\n\nimport { connect } from \"react-redux\";\n\nimport generateChildCharts from \"../utils/generateChildCharts\";\nimport { analyticData } from \"../../../utils/const\";\nimport { Hooks } from \"tracker-capture-app-core\";\nconst { useApi } = Hooks;\n\n//Why using forward ref: https://github.com/react-grid-layout/react-grid-layout#custom-child-components-and-draggable-handles\nconst WidgetContainer = React.forwardRef(({ style, className, selectedOrgUnit, formMapping, femaleCode, ...props }, ref) => {\n  const { metadataApi } = useApi();\n  \n  const [selectedChild, setSelectedChild] = useState(0);\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const { children } = props.widget;\n  const currentChild = children[selectedChild];\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n\n      // Generate template\n      const result = await currentChild.getData();\n\n      let flag = true;\n      if ( analyticData[`page${props.widget.i.split(\".\")[0]}`] ) {\n        const page = analyticData[`page${props.widget.i.split(\".\")[0]}`];\n        if ( page[props.widget.i] && props.widget.i.split(\".\")[0] !== \"2\" ) {\n          flag = false;\n\n          if ( page[props.widget.i] === \"no_data\" ) {\n            setData({\n              ...{\n                data: generateChildCharts(\n                  props.widget.i,\n                  null,\n                  result,\n                  femaleCode\n                )\n              }\n            })\n          }\n          else {\n            let url = currentChild[\"codes\"] ? page[props.widget.i].replace(\"[CAUSE_GROUP_CODE]\",currentChild[\"codes\"]).replaceAll(\"[YEAR]\",props.period) : page[props.widget.i].replaceAll(\"[YEAR]\",props.period);\n            if (url.includes(\"[ATTRIBUTE_SEX]\")) {\n              url = url.replace(\"[ATTRIBUTE_SEX]\",formMapping.attributes[\"sex\"]);\n            }\n            if (url.includes(\"[ATTRIBUTE_AGE]\")) {\n              url = url.replace(\"[ATTRIBUTE_AGE]\",formMapping.attributes[\"age\"]);\n            }\n            const data = await metadataApi.pull(url.replace(\"[ORG]\",selectedOrgUnit ? selectedOrgUnit.id : \"USER_ORGUNIT\"));\n\n            setData({ \n              ...{ \n                data: generateChildCharts(\n                  props.widget.i,\n                  data,\n                  result,\n                  femaleCode\n                ),\n                colors: result.colors\n              } \n            });\n          }\n        } else if ( props.widget.i.split(\".\")[0] === \"2\" ) {\n          flag = false;\n\n          let url = currentChild[\"codes\"] ? analyticData.page2[\"2.1\"].replace(\"[CAUSE_GROUP_CODE]\",currentChild[\"codes\"]).replaceAll(\"[YEAR]\",props.period) : page[props.widget.i].replaceAll(\"[YEAR]\",props.period);\n          if (url.includes(\"[ATTRIBUTE_SEX]\")) {\n            url = url.replace(\"[ATTRIBUTE_SEX]\",formMapping.attributes[\"sex\"]);\n          }\n          if (url.includes(\"[ATTRIBUTE_AGE]\")) {\n            url = url.replace(\"[ATTRIBUTE_AGE]\",formMapping.attributes[\"age\"]);\n          }\n          const data = await metadataApi.pull(url.replace(\"[ORG]\",selectedOrgUnit ? selectedOrgUnit.id : \"USER_ORGUNIT\"));\n\n          setData({ \n            ...{ \n              data: generateChildCharts(\n                \"2.1\",\n                data,\n                result,\n                femaleCode\n              ),\n              colors: result.colors\n            } \n          });\n        }\n      }\n\n      if ( flag ) {\n        setData({ ...result });\n      }\n      setLoading(false);\n    })();\n  }, [selectedChild,props.period]);\n\n  const generateWidget = () => {\n    switch (currentChild.type) {\n      case \"bar\":\n        return <Bar data={data} />;\n      case \"line\":\n        return <Line data={data} />;\n      case \"pie\":\n        return <Pie data={data} />;\n      case \"statistic\":\n        return <Statistic data={data} />;\n      case \"stackedBar\":\n        return <StackedBarChart data={data} />;\n      case \"verticalStackedBar\":\n        return <VerticalStackedBarChart data={data} />;\n      case \"doubleStackedBar\":\n        return <DoubleStackedBarChart data={data} />;\n      case \"combined\":\n        return <CombinedChart data={data} />;\n      case \"map\":\n        return <Map data={data} />;\n      case \"html\":\n        return <Html data={data} />;\n      case \"treemap\":\n        return <Treemap data={data} />;\n      case \"bubble\": \n        return <Bublemap data={data}/>\n      default:\n        return <Nodata data={data}/>;\n    }\n  };\n\n  return (\n    <div style={{ ...style }} className={\"widget-wrapper \" + className} ref={ref}>\n      <div className=\"widget-container\">\n        <div className=\"widget-header\">\n          <div className=\"widget-title-container\">\n            {children.length > 1 ? (\n              <Dropdown\n                overlay={\n                  <Menu>\n                    {children.map((child, index) => {\n                      return (\n                        <Menu.Item\n                          key={index}\n                          onClick={() => {\n                            if (index !== selectedChild) {\n                              setLoading(true);\n                              setSelectedChild(index);\n                            }\n                          }}\n                        >\n                          {child.title}\n                        </Menu.Item>\n                      );\n                    })}\n                  </Menu>\n                }\n              >\n                <div className=\"page-label\">\n                  <div className=\"widget-title\">{currentChild.title}</div>&nbsp;&nbsp;\n                  <IoChevronDown />\n                </div>\n              </Dropdown>\n            ) : (\n              <div className=\"widget-title\">{currentChild.title}</div>\n            )}\n            {currentChild.subTitle && <div className=\"widget-sub-title\">{currentChild.subTitle}</div>}\n          </div>\n          <div className=\"widget-menu-container\">\n            <IconButton icon=\"menu\" />\n          </div>\n        </div>\n        <div className=\"widget\">{loading ? <SyncLoader color=\"#757575\" margin={8} size={15} /> : generateWidget()}</div>\n      </div>\n    </div>\n  );\n});\n\nconst mapStateToProps = state => {\n  return {\n    selectedOrgUnit: state.metadata.selectedOrgUnit,\n    formMapping: state.metadata.formMapping,\n    femaleCode: state.metadata.femaleCode\n  }\n}\n\nexport default connect(mapStateToProps)(WidgetContainer);\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/redux/actions/data/index.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/hocs/withLoading.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Icd11Tool/EmbeddedIcd11Tool.js",["506"],"import { Modal } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./index.css\";\nimport RawCodingTool from \"./RawCodingTool\";\n\nconst Icd11Tool = ({ visible, setVisible, onSelect, defaultValue }) => {\n  const { t } = useTranslation();\n  const [selectedCod, setSelectedCod] = useState(null);\n  const [isClear, setIsClear] = useState(false);\n\n  useEffect(() => {\n    if (!visible) {\n      setIsClear(true);\n    } else {\n      setSelectedCod(defaultValue);\n      setIsClear(false);\n    }\n  }, [visible]);\n\n  return (\n    <Modal\n      title={t(\"icd11_tool\")}\n      maskClosable={false}\n      centered\n      open={visible}\n      onOk={() => {\n        setVisible(false);\n        onSelect(selectedCod);\n      }}\n      onCancel={() => setVisible(false)}\n      width=\"95%\"\n    >\n      <RawCodingTool\n        defaultValue={defaultValue}\n        isClear={isClear}\n        iNo={1}\n        onSelect={setSelectedCod}\n      />\n    </Modal>\n  );\n};\n\nexport default Icd11Tool;","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/utils/const.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/utils/generateMetadata.js",["507","508"],"import { generateCode } from \".\";\n\nconst jsonFiles = [\n    \"attributes\",\n    \"legendSets\",\n    \"optionSets\",\n    \"trackedEntityAttributes\",\n    \"trackedEntityTypes\",\n    \"dataElements\",\n    \"programs\",\n    \"programStages\",\n    \"programStageSections\",\n    \"programIndicators\",\n    \"indicatorTypes\",\n    \"indicators\",\n    \"sqlViews\",\n    \"options\",\n    \"optionGroups\",\n    \"optionGroupSets\"\n]; // should order from child to parent dependenvies\n\nconst replaceUID = (mapping, data) => {\n    let res = data;\n    for( const uid in mapping) {\n        res = res.replaceAll(uid,mapping[uid]);\n    }\n    return res;\n}\n\nexport const generateDefaultMetadata = (fullnameOption, newUID) => {\n    let metadata = {};\n    let formMapping = require(\"../asset/metadata/mapping.json\");\n    let uidReplacement = {};\n\n    // Generate new id and map to old\n    jsonFiles.forEach( jsonFile => {\n        metadata[jsonFile] = require(`../asset/metadata/${jsonFile}.json`)[jsonFile];\n\n        if ( jsonFile === \"trackedEntityAttributes\" ) {\n            metadata[jsonFile] = metadata[jsonFile].filter( ({id}) => id !== \"A9yzNTl9G0f\" );\n        }\n        if ( jsonFile === \"programs\") {\n            metadata[jsonFile][0].programTrackedEntityAttributes = metadata[jsonFile][0].programTrackedEntityAttributes.filter( ({trackedEntityAttribute}) => trackedEntityAttribute.id !== \"A9yzNTl9G0f\");\n        }\n        \n        metadata[jsonFile].forEach( element => {\n            if (element.id) uidReplacement = {\n                ...uidReplacement,\n                [element.id]: generateCode()\n            }\n        });\n    });\n\n    formMapping[\"sections\"] = metadata.programStageSections;\n    formMapping[\"otherSections\"] = {};\n    // if (fullnameOption) formMapping.attributes.family_name = \"\";\n\n    if ( newUID ) {\n        // Replace metadata\n        const stringMetadata = replaceUID(uidReplacement,JSON.stringify(metadata));\n        metadata = JSON.parse(stringMetadata);\n\n        // Replace mapping\n        const stringFormMapping = replaceUID(uidReplacement,JSON.stringify(formMapping));\n        formMapping = JSON.parse(stringFormMapping);\n    }\n\n    return { \n        metadata: metadata,\n        formMapping: formMapping\n    };\n}\n\nexport const generateCustomMetadata = ( admin, newUID, ageAttribute ) => {\n    /** \n     * WHAT THIS FUNCTION DOES\n     * \n     * 1. Remove metadata\n     * ** TE Types\n     * ** TEAs\n     * CREATE NEW FILES (base dataelements in redux)\n     * ** DEs\n     * ** Options / Option Sets\n     * ** ProgramStageSections\n     * \n     * 2. Remove TEAs, DEs, [ProgramStageSections]-> use default in Redux, TE Type from Programs and Program Stages\n     * \n     * 3. Generate new UID\n     * \n     * 4. Add other DEs, sections and attributes, types to Programs and Program Stages (base on TEAs, TE Type and DEs in Redux)\n     */\n\n    // Check optionSet nbcADZuow7x\n\n    let formMapping = {\n        version: \"\",\n        dataElements: {},\n        attributes: {\n          system_id: \"BfkIayM14MF\"\n        },\n        programStage: \"WlWJt4lVSWw\",\n        optionAttributes: {\n          group: \"UBT4QSKzYo4\",\n          chapter: \"QUYTAqoXnje\"\n        },\n        sections: [],\n        otherSections: {}\n    };\n    \n\n    // 1. Filter DEs, optionSets and options\n    let metadata = {};\n    metadata[\"attributes\"] = require(`../asset/metadata/attributes.json`)[\"attributes\"];\n    metadata[\"programIndicators\"] = require(`../asset/metadata/programIndicators.json`)[\"programIndicators\"];\n\n    metadata[\"programs\"] = require(`../asset/metadata/programs.json`)[\"programs\"];\n    metadata[\"programStages\"] = require(`../asset/metadata/programStages.json`)[\"programStages\"];\n\n    metadata[\"optionSets\"] = require(`../asset/metadata/optionSets.json`)[\"optionSets\"];\n    metadata[\"dataElements\"] = require(`../asset/metadata/dataElements.json`)[\"dataElements\"];\n    metadata[\"options\"] = require(`../asset/metadata/options.json`)[\"options\"];\n\n    metadata[\"indicatorTypes\"] = require(`../asset/metadata/indicatorTypes.json`)[\"indicatorTypes\"];\n    metadata[\"indicators\"] = require(`../asset/metadata/indicators.json`)[\"indicators\"];\n    metadata[\"sqlViews\"] = require(`../asset/metadata/sqlViews.json`)[\"sqlViews\"];\n    metadata[\"optionGroups\"] = require(`../asset/metadata/optionGroups.json`)[\"optionGroups\"];\n    metadata[\"optionGroupSets\"] = require(`../asset/metadata/optionGroupSets.json`)[\"optionGroupSets\"];\n    metadata[\"legendSets\"] = require(`../asset/metadata/legendSets.json`)[\"legendSets\"];\n\n    // add system_id\n    metadata[\"trackedEntityAttributes\"] = require(`../asset/metadata/trackedEntityAttributes.json`)[\"trackedEntityAttributes\"].slice(0,1);\n    metadata[\"trackedEntityAttributes\"].push({\n        ...ageAttribute,\n        legendSets: [\n            ...ageAttribute.legendSets,\n            ...[\n                {\n                    id: \"bHqcKIS01OI\"\n                },\n                {\n                    id: \"S0CP6RzDx4c\"\n                },\n                {\n                    id: \"McFG08e1aEd\"\n                },\n                {\n                    id: \"YVz7lS5F4So\"\n                },\n                {\n                    id: \"VVnrNTCrxB1\"\n                }\n            ]\n        ]\n    });\n\n    // const admin = require(\"./admin.json\");\n    let dataElements = [];\n    let optionSets = [];\n    let options = [];\n\n    for ( const frame in admin.dataElements ) {\n        admin.dataElements[frame].defaultSections.forEach( section => {\n            dataElements = [\n                ...dataElements,\n                ...section.dataElements.map( de => {\n                    const findedDE = metadata.dataElements.find( ({id}) => de.id === id )\n                    if ( findedDE.optionSet ) {\n                        if ( !optionSets.find( ({id}) => id === findedDE.optionSet.id ) )  {\n                            optionSets.push(metadata.optionSets.find( ({id}) => id === findedDE.optionSet.id ));\n                            options = [\n                                ...options,\n                                ...metadata.options.filter( opt => opt.optionSet.id === findedDE.optionSet.id )\n                            ];\n                        }\n                    }\n                    return findedDE;\n                })\n            ]\n        });\n    }\n\n    metadata[\"dataElements\"] = dataElements;\n    metadata[\"optionSets\"] = optionSets;\n    metadata[\"options\"] = options;\n    const entryForm = require(\"../asset/metadata/mapping.json\");\n    for ( const key in entryForm.dataElements ) {\n        if ( metadata[\"dataElements\"].find( ({id}) => id === entryForm.dataElements[key] ) ) {\n            formMapping.dataElements[key] = entryForm.dataElements[key];\n        }\n    }\n\n    // add version\n    formMapping.version = entryForm.version;\n\n\n\n\n\n    // 2. Remove DEs from programStages, TEAs/TE_Type from programs, and programStageSections\n    metadata.programStageSections = [\n        ...admin.dataElements.frameA.defaultSections,\n        ...admin.dataElements.frameB.defaultSections,\n    ];\n\n    delete metadata.programs[0].trackedEntityType;\n    metadata.programs[0].programTrackedEntityAttributes = [];\n\n    metadata.programStages[0].programStageDataElements = metadata.programStages[0].programStageDataElements.filter( ({dataElement}) =>\n        metadata.dataElements.find( ({id}) => id === dataElement.id )\n    )\n\n\n\n    // 3. Generate new UID\n    let uidReplacement = {};\n    for ( const jsonFile in metadata ) {\n        metadata[jsonFile].forEach( element => {\n            if (element.id) uidReplacement = {\n                ...uidReplacement,\n                [element.id]: generateCode()\n            }\n        });\n    }\n\n    if ( newUID ) {\n        // Replace metadata\n        const stringMetadata = replaceUID(uidReplacement,JSON.stringify(metadata));\n        metadata = JSON.parse(stringMetadata);\n\n        // Replace mapping\n        const stringFormMapping = replaceUID(uidReplacement,JSON.stringify(formMapping));\n        formMapping = JSON.parse(stringFormMapping);\n    }\n    \n\n    // 3.b Mapping for entry form**************\n    admin.trackedEntityAttributes.forEach( defaultAttribute => {\n        // if (defaultAttribute[1] === \"Unique ID\") formMapping.attributes[\"system_id\"] = defaultAttribute[0];\n        if (defaultAttribute[1] === \"First Name\") formMapping.attributes[\"given_name\"] = defaultAttribute[0];\n        if (defaultAttribute[1] === \"Last Name\") formMapping.attributes[\"family_name\"] = defaultAttribute[0];\n        if (defaultAttribute[1] === \"Middle Name\") formMapping.attributes[\"middle_name\"] = defaultAttribute[0];\n        if (defaultAttribute[1] === \"Date of Birth\") formMapping.attributes[\"dob\"] = defaultAttribute[0];\n        if (defaultAttribute[1] === \"Date of Birth is estimated\") formMapping.attributes[\"estimated_dob\"] = defaultAttribute[0];\n        if (defaultAttribute[1] === \"Age in years\") formMapping.attributes[\"age\"] = defaultAttribute[0];\n        if (defaultAttribute[1] === \"Address\") formMapping.attributes[\"address\"] = defaultAttribute[0];\n        if (defaultAttribute[1] === \"Sex\") formMapping.attributes[\"sex\"] = defaultAttribute[0];\n    })\n\n\n\n    // 4.a Add other attributes, types to Programs\n    metadata.programs[0][\"trackedEntityType\"] = { id: admin.trackedEntityType };\n    metadata.programs[0].programTrackedEntityAttributes = [\n        ...[{\n            \"mandatory\": true,\n            \"searchable\": true,\n            \"renderOptionsAsRadio\": false,\n            \"displayInList\": true,\n            \"sortOrder\": 1,\n            \"program\": { \"id\": metadata.programs[0].id },\n            // \"trackedEntityAttribute\": { \"id\": admin.trackedEntityAttributes[0][0] },\n            \"trackedEntityAttribute\": { \"id\": metadata[\"trackedEntityAttributes\"][0].id },\n            \"programTrackedEntityAttributeGroups\": []\n          }],\n          ...admin.trackedEntityAttributes.filter( ([des,]) => des !== '' ).map( (tea,index) => ({\n            \"mandatory\": false,\n            \"searchable\": tea[1] === \"First Name\" || tea[1] === \"Last Name\" || tea[1] === \"Date of Birth\" || tea[1] === \"Address\",\n            \"renderOptionsAsRadio\": false,\n            \"displayInList\": tea[1] === \"First Name\" || tea[1] === \"Last Name\" || tea[1] === \"Date of Birth\" || tea[1] === \"Address\",\n            \"sortOrder\": index+2,\n            \"program\": { \"id\": metadata.programs[0].id  },\n            \"trackedEntityAttribute\": { \"id\": tea[0] },\n            \"programTrackedEntityAttributeGroups\": []\n          }))\n        //   ...[{\n        //     \"mandatory\": false,\n        //     \"searchable\": true,\n        //     \"renderOptionsAsRadio\": false,\n        //     \"displayInList\": true,\n        //     \"sortOrder\": 2,\n        //     \"program\": { \"id\": metadata.programs[0].id  },\n        //     \"trackedEntityAttribute\": { \"id\": admin.trackedEntityAttributes[0][0] },\n        //     \"programTrackedEntityAttributeGroups\": []\n        //   },\n        //   {\n        //     \"mandatory\": false,\n        //     \"searchable\": true,\n        //     \"renderOptionsAsRadio\": false,\n        //     \"displayInList\": true,\n        //     \"sortOrder\": 3,\n        //     \"program\": { \"id\": metadata.programs[0].id  },\n        //     \"trackedEntityAttribute\": { \"id\": admin.trackedEntityAttributes[1][0] },\n        //     \"programTrackedEntityAttributeGroups\": []\n        //   },\n        //   {\n        //     \"mandatory\": false,\n        //     \"searchable\": true,\n        //     \"renderOptionsAsRadio\": false,\n        //     \"displayInList\": true,\n        //     \"sortOrder\": 4,\n        //     \"program\": { \"id\": metadata.programs[0].id  },\n        //     \"trackedEntityAttribute\": { \"id\": admin.trackedEntityAttributes[2][0] },\n        //     \"programTrackedEntityAttributeGroups\": []\n        //   },\n        //   {\n        //     \"mandatory\": false,\n        //     \"searchable\": false,\n        //     \"renderOptionsAsRadio\": false,\n        //     \"displayInList\": false,\n        //     \"sortOrder\": 5,\n        //     \"program\": { \"id\": metadata.programs[0].id  },\n        //     \"trackedEntityAttribute\": { \"id\": admin.trackedEntityAttributes[3][0] },\n        //     \"programTrackedEntityAttributeGroups\": []\n        //   },\n        //   {\n        //     \"mandatory\": false,\n        //     \"searchable\": false,\n        //     \"renderOptionsAsRadio\": false,\n        //     \"displayInList\": false,\n        //     \"sortOrder\": 6,\n        //     \"program\": { \"id\": metadata.programs[0].id  },\n        //     \"trackedEntityAttribute\": { \"id\": admin.trackedEntityAttributes[4][0] },\n        //     \"programTrackedEntityAttributeGroups\": []\n        //   },\n        //   {\n        //     \"mandatory\": false,\n        //     \"searchable\": true,\n        //     \"renderOptionsAsRadio\": false,\n        //     \"displayInList\": true,\n        //     \"sortOrder\": 7,\n        //     \"program\": { \"id\": metadata.programs[0].id  },\n        //     \"trackedEntityAttribute\": { \"id\": admin.trackedEntityAttributes[5][0] },\n        //     \"programTrackedEntityAttributeGroups\": []\n        //   },\n        //   {\n        //     \"mandatory\": false,\n        //     \"searchable\": false,\n        //     \"renderOptionsAsRadio\": false,\n        //     \"displayInList\": false,\n        //     \"sortOrder\": 8,\n        //     \"program\": { \"id\": metadata.programs[0].id  },\n        //     \"trackedEntityAttribute\": { \"id\": admin.trackedEntityAttributes[6][0] },\n        //     \"programTrackedEntityAttributeGroups\": []\n        //   }]\n    ];\n    // metadata.programs[0].programTrackedEntityAttributes = [\n    //     ...metadata.programs[0].programTrackedEntityAttributes,\n    //     ...admin.trackedEntityAttributes.slice(8,admin.trackedEntityAttributes.length).map( (tea, index) => {\n    //         return {\n    //             \"mandatory\": false,\n    //             \"searchable\": false,\n    //             \"renderOptionsAsRadio\": false,\n    //             \"displayInList\": false,\n    //             \"sortOrder\": (9 + index),\n    //             \"program\": { \"id\": metadata.programs[0].id  },\n    //             \"trackedEntityAttribute\": { \"id\": tea[0] },\n    //             \"programTrackedEntityAttributeGroups\": []\n    //         }\n    //     })\n    // ];\n\n    // 4.b Add other DEs, sections and and Program Stages\n    for (const frame in admin.dataElements) {\n        formMapping.otherSections[frame] = [];\n        admin.dataElements[frame].otherSections.forEach((section, index) => {\n            section[1].forEach( de => {\n                metadata.programStages[0].programStageDataElements.push({\n                    \"displayInReports\": false,\n                    \"skipSynchronization\": false,\n                    \"renderOptionsAsRadio\": false,\n                    \"compulsory\": false,\n                    \"allowProvidedElsewhere\": false,\n                    \"allowFutureDate\": false,\n                    \"programStage\": { \"id\": metadata.programStages[0].id },\n                    \"dataElement\": { \"id\": de }\n                })\n            });\n\n            metadata.programStageSections.push({\n                \"name\": section[0],\n                \"sortOrder\": 11 + index,\n                \"programStage\": { \"id\": metadata.programStages[0].id },\n                \"dataElements\": section[1].map( de => {\n                    return {\n                        \"id\": de\n                    }\n                })\n            });\n\n            formMapping[\"otherSections\"][frame].push({\n                \"name\": section[0],\n                \"dataElements\": section[1].map( de => {\n                    return {\n                        \"id\": de\n                    }\n                })\n            });\n        })\n    }\n    formMapping.sections = metadata.programStageSections;\n    \n    return { \n        metadata: metadata,\n        formMapping: formMapping\n    };\n}\n\nexport const updateProgramIndicators = (programIndicators, dobAttribute, sexAttribute, femaleCode) => programIndicators.map( pi => {\n    return {\n        ...pi,\n        filter: pi[\"filter\"].replaceAll(\"revZcilpJvK\",dobAttribute)\n            .replaceAll(\"F6qFXT44qay\",sexAttribute)\n            .replaceAll(\"FEMALE\",femaleCode)\n    }\n});\n\nexport const updateSQLViews = (sqlViews, ageAttribute, sexAttribute, femaleCode) => sqlViews.map( sv => {\n    return {\n        ...sv,\n        sqlQuery: sv[\"sqlQuery\"].replaceAll(\"z4jIMvqs0ff\",ageAttribute)\n        .replaceAll(\"F6qFXT44qay\",sexAttribute)\n        .replaceAll(\"FEMALE\",femaleCode)\n    }\n});","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Administration/CustomCertificate.jsx",["509","510","511"],"import { useState, useLayoutEffect } from \"react\";\nimport { \n    Button,\n    Row, Col,\n    Input,\n    List,\n    Divider,\n    Modal\n} from \"antd\";\n// import fileSaver from \"file-saver\";\nimport { Hooks } from \"tracker-capture-app-core\";\nimport { convertPdfDoc2FileURL, fillPdf, showPage } from \"../../utils/certificate\";\n// import { Image, PictureAsPdf, Print } from \"@material-ui/icons\";\n\nconst { useApi } = Hooks;\n\nconst CustomCertificate = props => { \n    const { metadataApi } = useApi();\n    // const [pdfURL, setPdfURL] = useState(null);\n\n    const [ openModal, setOpenModal ] = useState(null);\n    const [ mapping, setMapping ] = useState([\n        {\n            label: \"full_name\",\n            value: \"#{tea.uid1} #{tea.uid2}\",\n            coordinate: \"132, 132\"\n        },\n        {\n            label: \"nationality\",\n            value: \"#{de.uid1} #{de.uid2}\",\n            coordinate: \"102, 122\"\n        }\n    ]);\n\n    const generateData = async pdfFileTemplate => {\n        const pdfDoc = await fillPdf(pdfFileTemplate);\n        // const fileURL = await convertPdfDoc2FileURL(pdfDoc);\n        // setPdfURL(fileURL);\n        await showPage(pdfDoc, 1);\n    };\n\n    useLayoutEffect(() => {\n        (async () => {\n            const pdfFileTemplate = await metadataApi.getResource(\"o1c2Z6zbVrS\");\n            generateData(pdfFileTemplate);\n        })();\n    }, []);\n\n    return (\n        <div>\n            <Row gutter={[16, 16]}>\n                <Col span={12}>\n                    <div className=\"administration-certificate-box\">\n                        <Divider plain orientation=\"right\"><Button onClick={() => setOpenModal(\"Add\")}>Add</Button></Divider>\n                        <List \n                            size=\"small\"\n                            split={false}\n                            dataSource={mapping}\n                            renderItem={ item => \n                                <List.Item\n                                    actions={[\n                                        <Button type=\"text\" onClick={() => setOpenModal(item.label)}>Edit</Button>,\n                                        <Button type=\"text\">Remove</Button>\n                                    ]}\n                                >\n                                    <List.Item.Meta\n                                        title={item.label}\n                                        description={item.value}\n                                    />\n                                </List.Item>\n                            }\n                        />\n                    </div>\n                </Col>\n                <Col span={12}>\n                    <div className=\"administration-certificate-box\">\n                        {/* <iframe \n                            hidden\n                            id=\"certificate\"\n                            title=\"Certificate\"\n                            src={pdfURL + \"#toolbar=0&navpanes=0&scrollbar=0\"}\n                            frameBorder=\"0\" \n                            height={1132}\n                            width={\"100%\"}\n                            scrolling=\"auto\"\n                            type=\"application/pdf\"\n                        /> */}\n                        <Row>\n                            <Col>\n                                <canvas\n                                    style={{ maxWidth: \"100%\" }}\n                                    id=\"pdf-canvas\"\n                                    width=\"800\"\n                                />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <canvas\n                                    style={{ maxWidth: \"100%\" }}\n                                    id=\"pdf-canvas-2\"\n                                    width=\"800\"\n                                />\n                            </Col>\n                        </Row>\n                    </div>\n                    {/* <Grid container spacing={1} alignItems=\"flex-end\" justify=\"flex-end\">\n                        <Box p={1}>\n                            <Button\n                                size=\"small\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                onClick={() => {\n                                    fileSaver.saveAs(pdfURL, \"certificate.pdf\");\n                                }}\n                                // startIcon={<PictureAsPdf />}\n                            >\n                                Download as PDF\n                            </Button>\n                        </Box>\n                        <Box p={1}>\n                        <Button\n                            size=\"small\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={() => {\n                                const link = document.createElement(\"a\");\n                                link.download = \"certificate.png\";\n                                link.href = document.getElementById(\"pdf-canvas\").toDataURL();\n                                link.click();\n                            }}\n                            // startIcon={<Image />}\n                        >\n                            Download as PNG\n                        </Button>\n                        </Box>\n                        <Box p={1}>\n                        <Button\n                            size=\"small\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={() => {\n                                document.getElementById(\"certificate\").contentWindow.print();\n                            }}\n                            // startIcon={<Print />}\n                        >\n                            Print\n                        </Button>\n                        </Box>\n                    </Grid> */}\n                </Col>\n            </Row>\n            <Modal\n                visible={ openModal !== null }\n                centered\n                onCancel={ () => setOpenModal(null) }\n                title={ openModal === \"Add\" ? \"Add\" : `Edit ${openModal}` }\n            >\n                <div className=\"administration-customcertificate-modal\">\n                    <div>Label</div>\n                    <div>\n                        <Input disabled={openModal !== null && openModal !== \"Add\"} value={openModal !== \"Add\" ? openModal : \"\"} />\n                    </div>\n                </div>\n                <div className=\"administration-customcertificate-modal\">\n                    <div>Value</div>\n                    <div>\n                        <Input value={openModal !== null && openModal !== \"Add\" ? mapping.find( ({label}) => label === openModal ).value : \"\"} />\n                    </div>\n                </div>\n                <div className=\"administration-customcertificate-modal\">\n                    <div>Coordinate</div>\n                    <div>\n                        <Input value={openModal !== null && openModal !== \"Add\" ? mapping.find( ({label}) => label === openModal ).coordinate : \"\"} />\n                    </div>\n                </div>\n            </Modal>\n        </div>\n    )\n}\n\nexport default CustomCertificate;","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/utils/generateChildCharts.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/InputField/index.js",["512"],"import { Input, Radio, Checkbox, DatePicker, Select } from \"antd\";\nimport moment from \"moment\";\nimport \"./index.css\";\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nconst InputField = (props) => {\n  const {\n    label,\n    error,\n    helper,\n    warning,\n    value,\n    valueType,\n    valueSet,\n    click,\n    addonBefore,\n    change,\n    disabled,\n    addonAfter,\n    date_limit,\n    placeholder,\n    allowClear,\n    disabledDate\n  } = props;\n\n  // function disabledDate(d) {\n  //   // Can not select days after today and today\n  //   return moment(d,\"yyyy-mm-dd\") > moment().endOf('day');\n  // }\n\n  const generateField = () => {\n    if (valueSet) {\n      return (\n        <Select\n          value={value}\n          allowClear\n          showSearch\n          style={{ width: \"100%\" }}\n          onChange={(selected) => {\n            change(selected);\n          }}\n            disabled={disabled}\n        >\n          {valueSet.map((set) => (\n            <Option value={set.value}>{set.label}</Option>\n          ))}\n        </Select>\n      );\n    }\n    switch (valueType) {\n      case \"TEXT\":\n      case \"INTEGER_POSITIVE\":\n      case \"INTEGER_NEGATIVE\":\n      case \"INTEGER_ZERO_OR_POSITIVE\":\n      case \"PERCENTAGE\":\n      case \"NUMBER\":\n      case \"INTEGER\":\n      case \"PHONE_NUMBER\":\n      case \"EMAIL\":\n        return (\n          <Input\n            addonBefore={addonBefore}\n            addonAfter={addonAfter}\n            value={value || \"\"}\n            onClick={click}\n            onChange={(event) => {\n              change(event.target.value);\n            }}\n            disabled={disabled}\n            placeholder={placeholder}\n            allowClear={allowClear}\n          />\n        );\n      case \"LONG_TEXT\":\n        return (\n          <TextArea\n            value={value || \"\"}\n            onChange={(event) => {\n              change(event.target.value);\n            }}\n          />\n        );\n      case \"DATE\":\n        return (\n          <DatePicker\n            value={value ? moment(value) : \"\"}\n            onChange={(momentObject) => {\n              change(momentObject.format(\"YYYY-MM-DD\"));\n            }}\n          />\n        );\n      case \"DATE_WITH_RANGE\":\n        return (\n          <DatePicker \n            value={value ? moment(value) : \"\"}\n            onChange={(momentObject) => {\n              change(momentObject.format(\"YYYY-MM-DD\"));\n            }}\n            disabledDate={disabledDate}\n          />\n        );\n      case \"DATETIME\":\n        return <div>hello</div>;\n      case \"TIME\":\n        return <div>hello</div>;\n      case \"BOOLEAN\":\n        return (\n          <Radio.Group\n            value={value}\n            onChange={(event) => {\n              change(event.target.value);\n            }}\n          >\n            <Radio value=\"true\" style={{ fontSize: \"13.5px\" }}>\n              Yes\n            </Radio>\n            <Radio value=\"false\" style={{ fontSize: \"13.5px\" }}>\n              No\n            </Radio>\n          </Radio.Group>\n        );\n      case \"TRUE_ONLY\":\n        return (\n          <Checkbox\n            checked={value}\n            onChange={(event) => {\n              change(event.target.checked);\n            }}\n            disabled={disabled}\n          ></Checkbox>\n        );\n      case \"AGE\":\n        return (\n          <DatePicker\n            value={value}\n            onChange={(momentObject) => {\n              change(momentObject);\n            }}\n          />\n        );\n      default:\n        return <span>UNSUPPORTED VALUE TYPE</span>;\n    }\n  };\n\n  return (\n    <div className=\"input-container\">\n      {label && <div className=\"input-label\">{label}</div>}\n      <div className=\"input-field\">{generateField()}</div>\n      {error && <div className=\"input-error\">{error}</div>}\n      {helper && <div className=\"input-helper\">{helper}</div>}\n      {warning && <div className=\"input-warning\">{warning}</div>}\n    </div>\n  );\n};\n\nexport default InputField;\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/page9/index.js",["513"],"import { AGE_RANGES_SHORT, SEXES, randomNumber } from \"../utils\";\nimport generateChildChart from \"../../utils/generateChildChart\";\n\nconst page9 = (t) => {\n  const TITLES = [\n    t(\"numberOfDeathsFromTbAidsMalariaAndOtherCausesAgeGroup\"),\n    t(\"distributionOfDeathsByTbAidsAndMalariaBySexAndAge\"),\n    t(\n      \"percentageOfDeathsFromTbAidsAndMalariaOutOfAllDeathsFromCommunicableDiseases\"\n    ),\n    t(\n      \"numberOfTbAndAidsDeathsAndPercentOfTheseDeathsOutOfAllDeaths15YearsAndAbove\"\n    ),\n  ];\n  return {\n    id: \"page9\",\n    label: `${t(\"malaria\")} - ${t(\"tb\")} - ${t(\"aids\")}`,\n    layout: TITLES.map((v, index) => {\n      return {\n        i: `9.${index + 1}`,\n        x: index % 2 ? 49 : 0,\n        y: Math.floor(index / 2) * 50,\n        w: 49,\n        h: 50,\n      };\n    }),\n    widgets: [\n      {\n        i: \"9.1\",\n        children: [\n          generateChildChart(\"verticalStackedBar\", {\n            title: TITLES[0],\n            dataLabels: [t(\"tb\"), t(\"aids\"), t(\"malaria\"), t(\"other\")],\n            dataSets: AGE_RANGES_SHORT.map((name) => ({\n              name,\n              data: Array(4)\n                .fill()\n                .map(() => randomNumber(1, 2000)),\n            })),\n            colors: [\"#4C7FBC\", \"#ED7B2E\", \"#CBCBCB\", \"#E0DF40\"],\n          }),\n        ],\n      },\n      {\n        i: \"9.2\",\n        children: [\n          generateChildChart(\"doubleStackedBar\", {\n            title: TITLES[1],\n            dataLabels: [\n              \"Male - TB\",\n              \"Male - AIDS\",\n              \"Male - Malaria\",\n              \"Female - TB\",\n              \"Female - AIDS\",\n              \"Female - Malaria\",\n            ],\n            dataSets: AGE_RANGES_SHORT.map((name) => ({\n              name,\n              data: Array(6)\n                .fill()\n                .map(() => randomNumber(1, 2000)),\n            })),\n            colors: [\n              \"#225FAD\",\n              \"#79A4DA\",\n              \"#BFD7F5\",\n              \"#7F1590\",\n              \"#C971D7\",\n              \"#F4CCFA\",\n            ],\n          }),\n        ],\n      },\n      {\n        i: \"9.3\",\n        children: [\n          generateChildChart(\"bar\", {\n            title: TITLES[2],\n            dataLabels: [t(\"numberOfDeath\")],\n            dataSets: AGE_RANGES_SHORT.map((name) => ({\n              name,\n              data: [randomNumber(1, 100)],\n            })),\n            colors: [\"#3F6EC3\"],\n          }),\n        ],\n      },\n      {\n        i: \"9.4\",\n        children: [\n          generateChildChart(\n            \"combined\",\n            {\n              title: TITLES[3],\n              dataLabels: [\n                t(\"percentOfTotalDeathAllCauses\"),\n                t(\"tb\"),\n                t(\"aids\"),\n              ],\n              dataSets: [\"15 - 24\", \"35 - 49\", \"50 - 74\", \"75+\"].map((name) => {\n                const number1 = randomNumber(0, 600);\n                const number2 = randomNumber(0, 600);\n                return {\n                  name,\n                  data: [\n                    ((number1 + number2) /\n                      (number1 + number2 + randomNumber(0, 600))) *\n                      100,\n                    number1,\n                    number2,\n                  ],\n                };\n              }),\n              colors: [\"#21272D\", \"#4C7FBC\", \"#ED7B2E\"],\n            },\n            [\"line\", \"stackedBar\", \"stackedBar\"]\n          ),\n        ],\n      },\n    ],\n  };\n};\n\nexport default page9;\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/page8/index.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/page6/index.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/page7/index.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/page5/index.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/page4/index.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/page3/index.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/page2/index.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/page1/index.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/page0/index.js",["514"],"import { randomNumber } from \"../utils\";\nimport generateChildChart from \"../../utils/generateChildChart\";\nconst allChartTitles = [\n  \"Mortality rate, all ages\",\n  \"Mortality rate, neonates (0-27 days)\",\n  \"Mortality rate, infant (< 1 year of age)\",\n  \"Mortality rate, children < 5 years of age\",\n  \"Mortality rate, age 0-14 years \",\n  \"Mortality rate, age 15-49 years \",\n  \"Mortality rate, 50 years and above\",\n  \"Mortality rate, age 30-70 years\"\n];\nconst page1 = {\n  id: \"page0\",\n  label: \"Mortality levels\",\n  layout: allChartTitles.map((v, index) => ({\n    i: `0.${index + 1}`,\n    x: index % 2 ? 49 : 0,\n    y: Math.floor(index / 2) * 50,\n    w: 49,\n    h: 50\n  })),\n\n  widgets: allChartTitles.map((keyName, index) =>\n    ({\n      i: `0.${index + 1}`,\n      children: [\n        // generateChildChart(\"bar\", {\n        //   title: `${keyName} - registration`,\n        //   dataLabels: [\n        //     `${keyName.split(\",\")[0]} - Males, ${keyName.split(\",\")[1].trim()} - registration`,\n        //     `${keyName.split(\",\")[0]} - Females, ${keyName.split(\",\")[1].trim()} - registration`\n        //   ],\n        //   dataSets: [\"Hospital A\", \"Hospital B\", \"Hospital C\", \"Hospital D\"].map((name) => ({\n        //     name: name,\n        //     data: Array(2)\n        //       .fill()\n        //       .map((v, index) => {\n        //         return randomNumber(1, 90);\n        //       })\n        //   })),\n        //   colors: [\"#3E95CD\", \"#48b53a\"]\n        // })\n        generateChildChart(\"no_data\",{\n          title: `${keyName} - registration`,\n        })\n      ]\n    })\n  )\n};\nexport default page1;\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/example/index.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/utils/certificate.js",["515"],"import { PDFDocument, StandardFonts } from \"pdf-lib\";\n\nasync function fillPdf(pdfFileTemplate) {\n    const reponsePDFBuffer = await pdfFileTemplate.arrayBuffer();\n\n    const pdfDoc = await PDFDocument.load(reponsePDFBuffer);\n\n    // const HelveticaBold = await pdfDoc.embedFont(StandardFonts.HelveticaBold);\n    // const FONT_SIZE = 12;\n    // const pages = pdfDoc.getPages();\n    // const PAGE_HEIGHT = pages[0].getSize().height;\n\n    // pages[0].drawText(value, {\n    //     x,\n    //     y: PAGE_HEIGHT - y,\n    //     size: FONT_SIZE,\n    //     font\n    // });\n\n    // const qrCodeImage = await pdfDoc.embedPng(qrCodeImageFile);\n    // pages[0].drawImage(qrCodeImage, {\n    //     x: layout.qr.x,\n    //     y: PAGE_HEIGHT - layout.qr.y,\n    //     width: layout.qr.width,\n    //     height: layout.qr.height,\n    // });\n\n    return pdfDoc;\n}\n\nconst convertPdfDoc2FileURL = async pdfDoc => {\n    let byteArray = await pdfDoc.save();\n    let file = new Blob([byteArray], {\n        type: \"application/pdf;base64\",\n    });\n    return URL.createObjectURL(file);\n}\n\nconst showPage = async (pdfDoc, page_no) => {\n    if ( pdfDoc ) {\n        const binaryData = await pdfDoc.save();\n        let _PDF_DOC;\n        try {\n            _PDF_DOC = await window.pdfjsLib.getDocument(binaryData).promise;\n        } catch (e) {\n            console.log(e);\n        }\n        const _CANVAS = document.querySelector(\"#pdf-canvas\");\n        var page = await _PDF_DOC.getPage(page_no);\n\n        // original width of the pdf page at scale 1\n        var pdf_original_width = page.getViewport({ scale: 1 }).width;\n        // as the canvas is of a fixed width we need to adjust the scale of the viewport where page is rendered\n        var scale_required = _CANVAS.width / pdf_original_width;\n\n        // get viewport to render the page at required scale\n        var viewport = page.getViewport({ scale: scale_required });\n\n        // set canvas height same as viewport height\n        _CANVAS.height = viewport.height;\n\n        var render_context = {\n            canvasContext: _CANVAS.getContext(\"2d\"),\n            viewport: viewport,\n        };\n\n        \n\n        var page_2 = await _PDF_DOC.getPage(2);\n        const _CANVAS_2 = document.querySelector(\"#pdf-canvas-2\");\n        \n        // original width of the pdf page at scale 1\n        var pdf_original_width_2 = page_2.getViewport({ scale: 1 }).width;\n        // as the canvas is of a fixed width we need to adjust the scale of the viewport where page is rendered\n        var scale_required_2 = _CANVAS_2.width / pdf_original_width_2;\n\n        // get viewport to render the page at required scale\n        var viewport_2 = page_2.getViewport({ scale: scale_required_2 });\n        _CANVAS_2.height = viewport_2.height;\n\n        var render_context_2 = {\n            canvasContext: _CANVAS_2.getContext(\"2d\"),\n            viewport: viewport_2,\n        };\n\n        // render the page contents in the canvas\n        try {\n            await page.render(render_context);\n            await page_2.render(render_context_2);\n        } catch (error) {\n            alert(error.message);\n        }\n    }\n}\n\nexport {\n    fillPdf,\n    convertPdfDoc2FileURL,\n    showPage\n}","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/index.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/IconButton/index.jsx",["516"],"import { Button, Radio } from \"antd\";\nimport { BUTTON_ICONS } from \"./const\";\nimport \"./index.css\";\n\nconst IconButton = (props) => {\n  return (\n    <div className=\"icon-button\">\n      <Button {...props} icon={BUTTON_ICONS[props.icon]}></Button>\n    </div>\n  );\n};\n\nexport default IconButton;\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/page2/stackedBar-chart.js",["517"],"import { AGE_RANGES, generateData, randomNumber, SEXES } from \"../utils\";\nimport generateChildChart from \"../../utils/generateChildChart\";\n\nconst ALL_CAUSES = [\n  \"tuberculosis\",\n  \"sexuallyTransmittedDiseasesExcludingHiv\",\n  \"hiv\",\n  \"diarrhoealDiseases\",\n  \"pertussis\",\n  \"poliomyelitis\",\n  \"diphtheria\",\n  \"measles\",\n  \"tetanus\",\n  \"meningitis\",\n  \"hepatitisB\",\n  \"hepatitisC\",\n  \"malaria\",\n  \"tropicalClusterDiseases\",\n  \"lowerRespiratoryInfections\",\n  \"maternalConditions\",\n  \"conditionsArisingDuringThePerinatalPeriod\",\n  \"nutritionalDeficiencies\",\n  \"mouthAndOropharynxCancers\",\n  \"oesophagusCancer\",\n  \"stomachCancer\",\n  \"colonAndRectumCancers\",\n  \"liverCancer\",\n  \"pancreasCancer\",\n  \"tracheaBronchusAndLungCancers\",\n  \"melanomaAndOtherSkinCancers\",\n  \"breastCancer\",\n  \"cervixUteriCancer\",\n  \"corpusUteriCancer\",\n  \"ovaryCancer\",\n  \"prostateCancer\",\n  \"bladderCancer\",\n  \"lymphomasAndMultipleMyeloma\",\n  \"leukaemia\",\n  \"alzheimerAndOtherDementias\",\n  \"parkinsonDisease\",\n  \"hypertensiveDisease\",\n  \"ischaemicHeartDisease\",\n  \"cerebrovascularDisease\",\n  \"chronicObstructivePulmonaryDisease\",\n  \"asthma\",\n  \"digestiveDiseases\",\n  \"genitoUrinaryDiseases\",\n  \"congenitalAnomalies\",\n  \"roadTrafficAccidents\",\n  \"suicide\",\n  \"homicide\",\n];\nconst ALL_CAUSE_CODE = [\n  \"0030\",\n  \"0040;0050;0060;0070;0080\",\n  \"0090\",\n  \"0100\",\n  \"0120\",\n  \"0130\",\n  \"0140\",\n  \"0150\",\n  \"0160\",\n  \"0170\",\n  \"0180\",\n  \"0190\",\n  \"0200\",\n  \"0210;0220;0230;0240;0250;0260;0270\",\n  \"0390\",\n  \"0420;0430;0440;0450;0460;0470;0480\",\n  \"0490;0500;0510;0520\",\n  \"0530;0540;0550;0560;0570;0580\",\n  \"0610\",\n  \"0620\",\n  \"0630\",\n  \"0640\",\n  \"0650\",\n  \"0660\",\n  \"0670\",\n  \"0680\",\n  \"0690\",\n  \"0700\",\n  \"0710\",\n  \"0720\",\n  \"0730\",\n  \"0740\",\n  \"0750\",\n  \"0760\",\n  \"0870\",\n  \"0880\",\n  \"1060\",\n  \"1070\",\n  \"1080\",\n  \"1120\",\n  \"1130\",\n  \"1150\",\n  \"1200\",\n  \"1310\",\n  \"1500\",\n  \"1570\",\n  \"1580\",\n];\n\nconst generateStackedBarChart = (i, t) => {\n  return {\n    i,\n    children: ALL_CAUSES.map((cause, index) => {\n      return generateChildChart(\"stackedBar\", {\n        title: `${t(\"numberOfDeathBy\")} ${t(cause)}`,\n        dataLabels: SEXES,\n        dataSets: AGE_RANGES.map((name) => ({\n          name,\n          data: Array(SEXES.length)\n            .fill()\n            .map(() => randomNumber(0, 30)),\n        })),\n        colors: [\"#4C7FBC\", \"#ED7B2E\"],\n        codes: ALL_CAUSE_CODE[index],\n      });\n    }),\n  };\n};\nexport default generateStackedBarChart;\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/page2/line-chart.js",["518"],"import { AGE_RANGES, generateData, randomNumber, SEXES } from \"../utils\";\nimport generateChildChart from \"../../utils/generateChildChart\";\n\nconst ALL_CAUSES = [\n  \"tuberculosis\",\n  \"sexuallyTransmittedDiseasesExcludingHiv\",\n  \"hiv\",\n  \"diarrhoealDiseases\",\n  \"pertussis\",\n  \"poliomyelitis\",\n  \"diphtheria\",\n  \"measles\",\n  \"tetanus\",\n  \"meningitis\",\n  \"hepatitisB\",\n  \"hepatitisC\",\n  \"malaria\",\n  \"tropicalClusterDiseases\",\n  \"lowerRespiratoryInfections\",\n  \"maternalConditions\",\n  \"conditionsArisingDuringThePerinatalPeriod\",\n  \"nutritionalDeficiencies\",\n  \"mouthAndOropharynxCancers\",\n  \"oesophagusCancer\",\n  \"stomachCancer\",\n  \"colonAndRectumCancers\",\n  \"liverCancer\",\n  \"pancreasCancer\",\n  \"tracheaBronchusAndLungCancers\",\n  \"melanomaAndOtherSkinCancers\",\n  \"breastCancer\",\n  \"cervixUteriCancer\",\n  \"corpusUteriCancer\",\n  \"ovaryCancer\",\n  \"prostateCancer\",\n  \"bladderCancer\",\n  \"lymphomasAndMultipleMyeloma\",\n  \"leukaemia\",\n  \"alzheimerAndOtherDementias\",\n  \"parkinsonDisease\",\n  \"hypertensiveDisease\",\n  \"ischaemicHeartDisease\",\n  \"cerebrovascularDisease\",\n  \"chronicObstructivePulmonaryDisease\",\n  \"asthma\",\n  \"digestiveDiseases\",\n  \"genitoUrinaryDiseases\",\n  \"congenitalAnomalies\",\n  \"roadTrafficAccidents\",\n  \"suicide\",\n  \"homicide\",\n];\nconst ALL_CAUSE_CODE = [\n  \"0030\",\n  \"0040;0050;0060;0070;0080\",\n  \"0090\",\n  \"0100\",\n  \"0120\",\n  \"0130\",\n  \"0140\",\n  \"0150\",\n  \"0160\",\n  \"0170\",\n  \"0180\",\n  \"0190\",\n  \"0200\",\n  \"0210;0220;0230;0240;0250;0260;0270\",\n  \"0390\",\n  \"0420;0430;0440;0450;0460;0470;0480\",\n  \"0490;0500;0510;0520\",\n  \"0530;0540;0550;0560;0570;0580\",\n  \"0610\",\n  \"0620\",\n  \"0630\",\n  \"0640\",\n  \"0650\",\n  \"0660\",\n  \"0670\",\n  \"0680\",\n  \"0690\",\n  \"0700\",\n  \"0710\",\n  \"0720\",\n  \"0730\",\n  \"0740\",\n  \"0750\",\n  \"0760\",\n  \"0870\",\n  \"0880\",\n  \"1060\",\n  \"1070\",\n  \"1080\",\n  \"1120\",\n  \"1130\",\n  \"1150\",\n  \"1200\",\n  \"1310\",\n  \"1500\",\n  \"1570\",\n  \"1580\",\n];\n\nconst generateLineChart = (i, t) => {\n  return {\n    i,\n    children: ALL_CAUSES.map((cause, index) => {\n      return generateChildChart(\"line\", {\n        title: `${t(\"numberOfDeathBy\")} ${t(cause)}`,\n        dataLabels: SEXES,\n        dataSets: AGE_RANGES.map((name) => ({\n          name,\n          data: Array(SEXES.length)\n            .fill()\n            .map(() => randomNumber(0, 30)),\n        })),\n        colors: [\"#4C7FBC\", \"#ED7B2E\"],\n        codes: ALL_CAUSE_CODE[index],\n      });\n    }),\n  };\n};\nexport default generateLineChart;\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/IconButton/const.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/example/html-chart.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/example/treemap-chart.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/example/children-chart.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/example/pie-chart.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/example/combined-chart.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/example/line-chart.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/example/stacked-bar-chart.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/Nodata.jsx",["519"],"import {\n    Empty, Button\n  } from 'antd';\nimport { CloseCircleOutlined } from '@ant-design/icons';\n\nconst Nodata = ({ data }) => <Empty description={\n        <span>\n            <strong>Not Found Data</strong><br />\n            { data.data.message.map( m => <div>{m}</div> ) }\n        </span>\n    } >\n        <Button \n            type='primary'\n            onClick={ () => { window.location.href = \"../../../dhis-web-maintenance/\"; }}\n        >\n            Create Now\n        </Button>\n    </Empty>\n\n\nexport default Nodata;\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/Treemap.jsx",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/Bublemap.jsx",["520","521","522"],"import { useRef, useLayoutEffect } from 'react';\nimport * as am5 from \"@amcharts/amcharts5\";\nimport * as am5hierarchy from \"@amcharts/amcharts5/hierarchy\";\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\nimport am5themes_Animated from \"@amcharts/amcharts5/themes/Animated\";\n\nconst BubbleMapWidget = ({ data }) => {\n\n    useLayoutEffect(() => {\n\n        // Create root element\n        let root = am5.Root.new(\"chartdiv\");\n\n        // Set themes\n        root.setThemes([\n            am5themes_Animated.new(root)\n        ]);\n\n        const chartData = { \n            ...data,\n            children: [{\n                ...data.data.children[0],\n                // x: am5.percent(80),\n                // y: am5.percent(20),\n            },\n            {\n                ...data.data.children[1],\n                // x: am5.percent(50),\n                // y: am5.percent(50),\n            },\n            {\n                ...data.data.children[2],\n                // x: am5.percent(20),\n                // y: am5.percent(40),\n            },\n            {\n                ...data.data.children[3],\n                // x: am5.percent(30),\n                // y: am5.percent(60),\n            }]\n        }\n\n        // Create wrapper container\n        const container = root.container.children.push(\n            am5.Container.new(root, {\n                width: am5.percent(100),\n                height: am5.percent(100),\n                layout: root.verticalLayout\n            })\n        );\n\n        // Create series\n        let series = container.children.push(\n            am5hierarchy.ForceDirected.new(root, {\n                topDepth: 1,\n                initialDepth: 0,\n                minRadius: 40,\n                maxRadius: am5.percent(20),\n                valueField: \"value\",\n                categoryField: \"name\",\n                shortNameField: \"shortName\",\n                childDataField: \"children\",\n                nodePadding: 10,\n                // xField: \"x\",\n                // yField: \"y\"\n            })\n        );\n\n        series.data.setAll([chartData]);\n\n        // Disable Toogle and Draggable\n        series.nodes.template.setAll({\n            // toggleKey: \"none\",\n            // cursorOverStyle: \"default\",\n            draggable: false\n        });\n\n        // Custom label\n        series.labels.template.setAll({\n            text: \"[fontSize: 15px]{shortName}[/]\\n[fontSize: 20px]{sum}[/]\",\n            fontSize: 14\n        });\n\n        // Outer circles\n        series.outerCircles.template.states.create(\"disabled\", {\n            fillOpacity: 0.5,\n            strokeOpacity: 0,\n            strokeDasharray: 0\n        });\n        series.outerCircles.template.states.create(\"hoverDisabled\", {\n            fillOpacity: 0.5,\n            strokeOpacity: 0,\n            strokeDasharray: 0\n        });\n\n        return () => {\n            root.dispose();\n        };\n    }, []);\n\n    return <div id=\"chartdiv\" style={{ width: \"100%\", height: \"100%\" }}></div>\n}\n\nexport default BubbleMapWidget;","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/Html.jsx",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/example/bar-chart.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/pages/example/statistic.js",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/Pie.jsx",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/Line.jsx",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/Statistic.jsx",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/Map.jsx",["523","524","525","526","527","528","529"],"import { control } from \"leaflet\";\nimport { useEffect, useRef } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup, LayersControl, GeoJSON, useMap } from \"react-leaflet\";\nimport \"./Map.css\";\nconst GeoJsonLayer = ({ layer }) => {\n  const map = useMap();\n  const geoJson = useRef();\n\n  useEffect(() => {\n    map.fitBounds(geoJson.current.getBounds());\n  }, []);\n\n  return <GeoJSON ref={geoJson} data={layer.data} style={{ weight: 1, fill: false, color: \"#525252\" }} />;\n};\n\nconst ThematicLayer = ({ layer }) => {\n  const map = useMap();\n  const geoJson = useRef();\n\n  useEffect(() => {\n    map.fitBounds(geoJson.current.getBounds());\n  }, []);\n\n  return (\n    <GeoJSON\n      ref={geoJson}\n      data={layer.geoJson}\n      onEachFeature={(feature, currentLayer) => {\n        const currentValue = layer.data[feature.id];\n        const foundLegend = layer.legendSet.find((legend) => currentValue >= legend.min && currentValue <= legend.max);\n        const currentColor = foundLegend ? foundLegend.color : \"#ffffff\";\n        currentLayer.on(\"mouseover\", (thisLayer) => {\n          currentLayer.bindTooltip(\n            `<div class=\"map-tooltip\">${feature.properties.name}: <b>${\n              currentValue ? currentValue : \"No data\"\n            }</b></div>`\n          );\n        });\n\n        currentLayer.setStyle({\n          color: \"#525252\",\n          weight: 1,\n          fill: true,\n          fillOpacity: 1,\n          fillColor: currentColor\n        });\n      }}\n    />\n  );\n};\n\nconst ThematicLegendControl = ({ layer }) => {\n  return (\n    <div className=\"control-container thematic-legend-container\">\n      {layer.legendSet.map((legend) => {\n        return (\n          <div className=\"thematic-legend-row\">\n            <div style={{ width: 35, height: 15, backgroundColor: legend.color }}></div>\n            <div>\n              &nbsp;{legend.min} - {legend.max}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst Map = ({ data }) => {\n  const generateLayers = () => {\n    return data.layers.map((layer) => {\n      switch (layer.type) {\n        case \"boundary\":\n          return <GeoJsonLayer layer={layer} />;\n        case \"thematic\":\n          return <ThematicLayer layer={layer} />;\n        default:\n          return null;\n      }\n    });\n  };\n\n  const generateControls = () => {\n    const controls = [];\n    data.layers.forEach((layer) => {\n      if (layer.type === \"thematic\") {\n        controls.push(<ThematicLegendControl layer={layer} />);\n      }\n    });\n    return controls;\n  };\n\n  return (\n    <MapContainer center={[51.505, -0.09]} zoom={13} scrollWheelZoom={false} style={{ height: \"100%\", width: \"100%\" }}>\n      {generateControls()}\n      {/* <TileLayer\n        attribution='&copy; <a href=\"https://carto.com/about-carto/\">CARTO</a>'\n        url=\"https://{s}.basemaps.cartocdn.com/rastertiles/voyager_nolabels/{z}/{x}/{y}.png\"\n      /> */}\n      {generateLayers()}\n    </MapContainer>\n  );\n};\n\nexport default Map;\n","/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/Bar.jsx",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/VerticalStackedBarChart.jsx",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/StackedBarChart.jsx",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/DoubleStackedBarChart.jsx",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Dashboard/Widget/CombinedChart.jsx",[],"/Users/thai/HISP/Apps/icd11-cause-of-death/cod-capture-app/src/components/Icd11Tool/RawCodingTool.js",["530","531","532","533","534"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useTranslation } from \"react-i18next\";\nimport * as ECT from \"@whoicd/icd11ect\";\nimport \"@whoicd/icd11ect/style.css\";\nimport \"./index.css\";\nimport PropTypes from \"prop-types\";\nimport { Input, Row, Col } from \"antd\";\nimport { debounce } from \"lodash\";\n\nconst { Search } = Input;\n\nlet apiUrl = process.env.REACT_APP_ICD11_API_URL;\n\nconst RawCodingTool = ({ onSelect, iNo, isClear, defaultValue, keyUILocale }) => {\n  const { t } = useTranslation();\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [selectedEntity, setSelectedEntity] = useState(null);\n\n  const ectSearch = (value) => value && ECT.Handler.search(iNo, value);\n\n  const search = (value) => ectSearch(value);\n\n  const debounceSearch = useCallback(debounce(search, 275), []);\n\n  useEffect(() => {\n    if (defaultValue.code === \"\") {\n      setSearchValue(\"\");\n      setSelectedEntity(null);\n      ECT.Handler.clear(iNo);\n    }\n    else {\n      setSearchValue(defaultValue ? defaultValue.title : \"\");\n      search(defaultValue ? defaultValue.title : \"\");\n      setSelectedEntity(defaultValue || null);\n    }\n  }, [defaultValue]);\n\n  useEffect(() => {\n    debounceSearch(searchValue);\n  }, [searchValue])\n\n  useEffect(() => {\n    const mySettings = {\n      autoBind: false,\n      apiServerUrl: \"https://icd11restapi-developer-test.azurewebsites.net\",\n      language: keyUILocale\n      // icdMinorVersion: \"2020-09\",\n      // icdLinearization: \"mms\",\n    };\n    const myCallbacks = {\n      selectedEntityFunction: (selectedEntity) => {\n        onSelect(selectedEntity);\n        setSelectedEntity(selectedEntity);\n      }\n    };\n    ECT.Handler.configure(mySettings, myCallbacks);\n    ECT.Handler.bind(iNo);\n  }, []);\n  return (\n    <div>\n      <input hidden type=\"text\" className=\"ctw-input\" autoComplete=\"off\" data-ctw-ino={iNo} />\n      <Row gutter={12}>\n        <Col xs={12}>\n          <Search\n            width=\"50%\"\n            allowClear\n            onSearch={ectSearch(searchValue)}\n            value={searchValue}\n            placeholder={t(\"type_to_start_searching\")}\n            onChange={(event) => {\n              setSearchValue(event.target.value);\n            }}\n          />\n        </Col>\n        <Col xs={12}>\n          <Row wrap={false} justify=\"center\" align=\"center\" gutter={6}>\n            <Col xs={6}>\n              <div style={{ lineHeight: 2, float: \"right\" }}>{t(\"your_selection\")}</div>\n            </Col>\n            <Col xs={18}>\n              <Input\n                addonBefore={selectedEntity && selectedEntity.code}\n                value={selectedEntity && selectedEntity.title}\n                disabled\n              />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n      <div className=\"ctw-window icd-window\" data-ctw-ino={iNo} />\n    </div>\n  );\n};\n\nRawCodingTool.propTypes = {\n  iNo: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  onSelect: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    keyUILocale: state.metadata.keyUiLocale,\n  };\n};\n\nexport default connect(mapStateToProps)(RawCodingTool);",{"ruleId":"535","replacedBy":"536"},{"ruleId":"537","replacedBy":"538"},{"ruleId":"539","severity":1,"message":"540","line":270,"column":6,"nodeType":"541","endLine":270,"endColumn":8,"suggestions":"542"},{"ruleId":"543","severity":1,"message":"544","line":131,"column":7,"nodeType":"545","messageId":"546","endLine":131,"endColumn":19},{"ruleId":"539","severity":1,"message":"547","line":43,"column":13,"nodeType":"548","endLine":60,"endColumn":4},{"ruleId":"539","severity":1,"message":"549","line":60,"column":6,"nodeType":"541","endLine":60,"endColumn":15,"suggestions":"550"},{"ruleId":"551","severity":1,"message":"552","line":188,"column":29,"nodeType":"553","messageId":"554","endLine":188,"endColumn":34},{"ruleId":"551","severity":1,"message":"555","line":1,"column":20,"nodeType":"553","messageId":"554","endLine":1,"endColumn":29},{"ruleId":"556","severity":1,"message":"557","line":372,"column":19,"nodeType":"558","endLine":377,"endColumn":20},{"ruleId":"539","severity":1,"message":"559","line":49,"column":5,"nodeType":"541","endLine":49,"endColumn":22,"suggestions":"560"},{"ruleId":"551","severity":1,"message":"561","line":2,"column":17,"nodeType":"553","messageId":"554","endLine":2,"endColumn":20},{"ruleId":"551","severity":1,"message":"562","line":14,"column":10,"nodeType":"553","messageId":"554","endLine":14,"endColumn":24},{"ruleId":"539","severity":1,"message":"563","line":41,"column":6,"nodeType":"541","endLine":41,"endColumn":8,"suggestions":"564"},{"ruleId":"539","severity":1,"message":"565","line":65,"column":6,"nodeType":"541","endLine":68,"endColumn":4,"suggestions":"566"},{"ruleId":"539","severity":1,"message":"567","line":66,"column":5,"nodeType":"568","endLine":66,"endColumn":48},{"ruleId":"539","severity":1,"message":"567","line":67,"column":5,"nodeType":"568","endLine":67,"endColumn":48},{"ruleId":"539","severity":1,"message":"569","line":85,"column":6,"nodeType":"541","endLine":85,"endColumn":30,"suggestions":"570"},{"ruleId":"551","severity":1,"message":"571","line":30,"column":10,"nodeType":"553","messageId":"554","endLine":30,"endColumn":20},{"ruleId":"551","severity":1,"message":"572","line":30,"column":22,"nodeType":"553","messageId":"554","endLine":30,"endColumn":35},{"ruleId":"551","severity":1,"message":"573","line":6,"column":10,"nodeType":"553","messageId":"554","endLine":6,"endColumn":22},{"ruleId":"539","severity":1,"message":"574","line":58,"column":6,"nodeType":"541","endLine":58,"endColumn":8,"suggestions":"575"},{"ruleId":"576","severity":1,"message":"577","line":5,"column":1,"nodeType":"578","endLine":13,"endColumn":2},{"ruleId":"576","severity":1,"message":"577","line":28,"column":1,"nodeType":"578","endLine":57,"endColumn":2},{"ruleId":"551","severity":1,"message":"579","line":2,"column":3,"nodeType":"553","messageId":"554","endLine":2,"endColumn":23},{"ruleId":"576","severity":1,"message":"577","line":55,"column":1,"nodeType":"578","endLine":171,"endColumn":2},{"ruleId":"576","severity":1,"message":"577","line":48,"column":1,"nodeType":"578","endLine":157,"endColumn":2},{"ruleId":"576","severity":1,"message":"577","line":13,"column":1,"nodeType":"578","endLine":24,"endColumn":2},{"ruleId":"551","severity":1,"message":"555","line":1,"column":10,"nodeType":"553","messageId":"554","endLine":1,"endColumn":19},{"ruleId":"551","severity":1,"message":"580","line":73,"column":17,"nodeType":"553","messageId":"554","endLine":73,"endColumn":25},{"ruleId":"539","severity":1,"message":"581","line":58,"column":5,"nodeType":"541","endLine":58,"endColumn":7,"suggestions":"582"},{"ruleId":"539","severity":1,"message":"583","line":72,"column":6,"nodeType":"541","endLine":72,"endColumn":12,"suggestions":"584"},{"ruleId":"539","severity":1,"message":"585","line":95,"column":6,"nodeType":"541","endLine":95,"endColumn":11,"suggestions":"586"},{"ruleId":"539","severity":1,"message":"587","line":108,"column":6,"nodeType":"541","endLine":108,"endColumn":40,"suggestions":"588"},{"ruleId":"539","severity":1,"message":"589","line":147,"column":6,"nodeType":"541","endLine":147,"endColumn":8,"suggestions":"590"},{"ruleId":"539","severity":1,"message":"591","line":161,"column":6,"nodeType":"541","endLine":161,"endColumn":21,"suggestions":"592"},{"ruleId":"539","severity":1,"message":"593","line":165,"column":6,"nodeType":"541","endLine":165,"endColumn":26,"suggestions":"594"},{"ruleId":"539","severity":1,"message":"595","line":171,"column":6,"nodeType":"541","endLine":171,"endColumn":22,"suggestions":"596"},{"ruleId":"551","severity":1,"message":"597","line":187,"column":17,"nodeType":"553","messageId":"554","endLine":187,"endColumn":20},{"ruleId":"543","severity":1,"message":"598","line":2001,"column":3,"nodeType":"545","messageId":"546","endLine":2001,"endColumn":5},{"ruleId":"599","severity":1,"message":"600","line":146,"column":23,"nodeType":"601","messageId":"546","endLine":146,"endColumn":25},{"ruleId":"599","severity":1,"message":"600","line":146,"column":40,"nodeType":"601","messageId":"546","endLine":146,"endColumn":42},{"ruleId":"599","severity":1,"message":"600","line":149,"column":23,"nodeType":"601","messageId":"546","endLine":149,"endColumn":25},{"ruleId":"599","severity":1,"message":"600","line":149,"column":41,"nodeType":"601","messageId":"546","endLine":149,"endColumn":43},{"ruleId":"539","severity":1,"message":"574","line":73,"column":5,"nodeType":"541","endLine":73,"endColumn":38,"suggestions":"602"},{"ruleId":"539","severity":1,"message":"603","line":90,"column":5,"nodeType":"541","endLine":90,"endColumn":22,"suggestions":"604"},{"ruleId":"605","severity":1,"message":"606","line":76,"column":15,"nodeType":"558","messageId":"607","endLine":76,"endColumn":97,"fix":"608"},{"ruleId":"551","severity":1,"message":"609","line":1,"column":16,"nodeType":"553","messageId":"554","endLine":1,"endColumn":22},{"ruleId":"551","severity":1,"message":"610","line":1,"column":34,"nodeType":"553","messageId":"554","endLine":1,"endColumn":40},{"ruleId":"611","severity":1,"message":"612","line":53,"column":5,"nodeType":"613","messageId":"614","endLine":66,"endColumn":6},{"ruleId":"539","severity":1,"message":"615","line":270,"column":8,"nodeType":"541","endLine":270,"endColumn":14,"suggestions":"616"},{"ruleId":"539","severity":1,"message":"617","line":355,"column":8,"nodeType":"541","endLine":355,"endColumn":17,"suggestions":"618"},{"ruleId":"551","severity":1,"message":"619","line":10,"column":9,"nodeType":"553","messageId":"554","endLine":10,"endColumn":15},{"ruleId":"539","severity":1,"message":"620","line":29,"column":7,"nodeType":"541","endLine":29,"endColumn":9,"suggestions":"621"},{"ruleId":"551","severity":1,"message":"622","line":14,"column":10,"nodeType":"553","messageId":"554","endLine":14,"endColumn":27},{"ruleId":"551","severity":1,"message":"623","line":49,"column":26,"nodeType":"553","messageId":"554","endLine":49,"endColumn":43},{"ruleId":"539","severity":1,"message":"624","line":111,"column":6,"nodeType":"541","endLine":111,"endColumn":22,"suggestions":"625"},{"ruleId":"551","severity":1,"message":"626","line":1,"column":8,"nodeType":"553","messageId":"554","endLine":1,"endColumn":15},{"ruleId":"551","severity":1,"message":"627","line":2,"column":8,"nodeType":"553","messageId":"554","endLine":2,"endColumn":13},{"ruleId":"551","severity":1,"message":"628","line":5,"column":26,"nodeType":"553","messageId":"554","endLine":5,"endColumn":33},{"ruleId":"539","severity":1,"message":"629","line":104,"column":6,"nodeType":"541","endLine":104,"endColumn":34,"suggestions":"630"},{"ruleId":"539","severity":1,"message":"631","line":19,"column":6,"nodeType":"541","endLine":19,"endColumn":15,"suggestions":"632"},{"ruleId":"633","severity":1,"message":"634","line":162,"column":60,"nodeType":"548","messageId":"635","endLine":179,"endColumn":10},{"ruleId":"633","severity":1,"message":"636","line":217,"column":37,"nodeType":"548","messageId":"635","endLine":222,"endColumn":10},{"ruleId":"551","severity":1,"message":"637","line":12,"column":10,"nodeType":"553","messageId":"554","endLine":12,"endColumn":31},{"ruleId":"551","severity":1,"message":"638","line":22,"column":22,"nodeType":"553","messageId":"554","endLine":22,"endColumn":32},{"ruleId":"539","severity":1,"message":"639","line":47,"column":8,"nodeType":"541","endLine":47,"endColumn":10,"suggestions":"640"},{"ruleId":"551","severity":1,"message":"641","line":21,"column":5,"nodeType":"553","messageId":"554","endLine":21,"endColumn":15},{"ruleId":"551","severity":1,"message":"642","line":1,"column":28,"nodeType":"553","messageId":"554","endLine":1,"endColumn":33},{"ruleId":"551","severity":1,"message":"643","line":1,"column":10,"nodeType":"553","messageId":"554","endLine":1,"endColumn":22},{"ruleId":"551","severity":1,"message":"644","line":1,"column":23,"nodeType":"553","messageId":"554","endLine":1,"endColumn":36},{"ruleId":"551","severity":1,"message":"645","line":1,"column":18,"nodeType":"553","messageId":"554","endLine":1,"endColumn":23},{"ruleId":"551","severity":1,"message":"646","line":1,"column":22,"nodeType":"553","messageId":"554","endLine":1,"endColumn":34},{"ruleId":"551","severity":1,"message":"646","line":1,"column":22,"nodeType":"553","messageId":"554","endLine":1,"endColumn":34},{"ruleId":"551","severity":1,"message":"647","line":4,"column":10,"nodeType":"553","messageId":"554","endLine":4,"endColumn":29},{"ruleId":"551","severity":1,"message":"648","line":1,"column":10,"nodeType":"553","messageId":"554","endLine":1,"endColumn":16},{"ruleId":"551","severity":1,"message":"649","line":4,"column":13,"nodeType":"553","messageId":"554","endLine":4,"endColumn":18},{"ruleId":"539","severity":1,"message":"650","line":99,"column":8,"nodeType":"541","endLine":99,"endColumn":10,"suggestions":"651"},{"ruleId":"551","severity":1,"message":"652","line":1,"column":10,"nodeType":"553","messageId":"554","endLine":1,"endColumn":17},{"ruleId":"551","severity":1,"message":"653","line":3,"column":24,"nodeType":"553","messageId":"554","endLine":3,"endColumn":33},{"ruleId":"551","severity":1,"message":"654","line":3,"column":35,"nodeType":"553","messageId":"554","endLine":3,"endColumn":41},{"ruleId":"551","severity":1,"message":"655","line":3,"column":43,"nodeType":"553","messageId":"554","endLine":3,"endColumn":48},{"ruleId":"551","severity":1,"message":"656","line":3,"column":50,"nodeType":"553","messageId":"554","endLine":3,"endColumn":63},{"ruleId":"539","severity":1,"message":"657","line":11,"column":6,"nodeType":"541","endLine":11,"endColumn":8,"suggestions":"658"},{"ruleId":"539","severity":1,"message":"657","line":22,"column":6,"nodeType":"541","endLine":22,"endColumn":8,"suggestions":"659"},{"ruleId":"551","severity":1,"message":"660","line":13,"column":5,"nodeType":"553","messageId":"554","endLine":13,"endColumn":11},{"ruleId":"539","severity":1,"message":"661","line":24,"column":26,"nodeType":"553","endLine":24,"endColumn":37},{"ruleId":"539","severity":1,"message":"662","line":37,"column":6,"nodeType":"541","endLine":37,"endColumn":20,"suggestions":"663"},{"ruleId":"539","severity":1,"message":"664","line":41,"column":6,"nodeType":"541","endLine":41,"endColumn":19,"suggestions":"665"},{"ruleId":"539","severity":1,"message":"666","line":59,"column":6,"nodeType":"541","endLine":59,"endColumn":8,"suggestions":"667"},"no-native-reassign",["668"],"no-negated-in-lhs",["669"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'changeRoute', 'getICD11Options', 'getTrackedEntityTypes', 'metadataApi', 'setCertificateTemplate', 'setFemaleCode', 'setFormMapping', 'setFullnameOption', 'setIcdApiToken', 'setOrgUnitGroups', 'setOrgUnitLevels', 'setOrgUnits', 'setProgramMetadata', 'setTeas', 'setTrackerDataElements', 'setUILocale', 'setUserGroups', 'setUserRole', and 'setUsers'. Either include them or remove the dependency array. If 'setUILocale' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["670"],"no-dupe-keys","Duplicate key 'femaleOption'.","ObjectExpression","unexpected","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'data.pager', 'dataApi', and 'programMetadata.id'. Either include them or remove the dependency array.",["671"],"no-unused-vars","'value' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'admin.fullnameOption' and 'changeStep'. Either include them or remove the dependency array. If 'changeStep' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["672"],"'Tag' is defined but never used.","'SearchOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'size'. Either include it or remove the dependency array. You can also do a functional update 'setSize(s => ...)' if you only need 'size' in the 'setSize' call.",["673"],"React Hook useEffect has missing dependencies: 'dataApi', 'programMetadata', 'selectedOrgUnit', 'setupUI', 'sortTable', and 'tableData'. Either include them or remove the dependency array. You can also do a functional update 'setTableData(t => ...)' if you only need 'tableData' in the 'setTableData' call.",["674"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","ConditionalExpression","React Hook useEffect has missing dependencies: 'dataApi', 'programMetadata.id', 'selectedOrgUnit', 'setupUI', 'tableData.page', and 'tableData.pager'. Either include them or remove the dependency array.",["675"],"'periodType' is assigned a value but never used.","'setPeriodType' is assigned a value but never used.","'TRANSLATIONS' is defined but never used.","React Hook useEffect has a missing dependency: 'metadataApi'. Either include it or remove the dependency array.",["676"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'GET_PROGRAM_METADATA' is defined but never used.","'setPages' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'formMapping.attributes', 'getTeaValue', 'metadataApi', and 'mutateAttribute'. Either include them or remove the dependency array. If 'mutateAttribute' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["677"],"React Hook useEffect has missing dependencies: 'currentEnrollment', 'currentEvents', and 'formMapping.dataElements'. Either include them or remove the dependency array.",["678"],"React Hook useEffect has missing dependencies: 'currentEvent', 'formMapping.dataElements', 'isShowFetalOrInfantDeath', 'mutateDataValue', and 'mutateEvent'. Either include them or remove the dependency array. If 'mutateEvent' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["679"],"React Hook useEffect has missing dependencies: 'currentEvent', 'formMapping.dataElements', 'isShowMaternalDeath', 'mutateDataValue', and 'mutateEvent'. Either include them or remove the dependency array. If 'mutateEvent' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["680"],"React Hook useEffect has missing dependencies: 'currentEnrollment.incidentDate', 'currentEvent', 'formMapping.dataElements', 'initNewEvent', 'mutateEvent', 'programStage.id', and 'returnInitValue'. Either include them or remove the dependency array. If 'initNewEvent' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["681"],"React Hook useEffect has a missing dependency: 'formMapping.dataElements'. Either include it or remove the dependency array.",["682"],"React Hook useEffect has a missing dependency: 'flagUnderlying'. Either include it or remove the dependency array. You can also do a functional update 'setFlagUnderlying(f => ...)' if you only need 'flagUnderlying' in the 'setFlagUnderlying' call.",["683"],"React Hook useEffect has missing dependencies: 'causeOfDeaths' and 'fillUpUnderlying'. Either include them or remove the dependency array.",["684"],"'key' is assigned a value but never used.","Duplicate key 'de'.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["685"],"React Hook useEffect has missing dependencies: 'changeTrackedEntityType', 'changeTrackedEntityTypes', 'femaleCode', 'formMapping.attributes', 'fullnameOption', 'setFemaleOption', and 'setFullnameOption'. Either include them or remove the dependency array. If 'changeTrackedEntityTypes' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["686"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"687","text":"688"},"'Select' is defined but never used.","'Button' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'importMetadata', 'programMetadata', 'status.status', and 't'. Either include them or remove the dependency array.",["689"],"React Hook useEffect has missing dependencies: 'femaleOption', 'formMapping', 'fullnameOption', 'getICD11Options', 'metadata', 'metadataApi', 'open', 'setCertificateTemplate', 'setFemaleCode', and 't'. Either include them or remove the dependency array. If 'setFemaleCode' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["690"],"'Option' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["691"],"'defaultAttributes' is defined but never used.","'setgenerateNewUID' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'assignedOrgUnits', 'dataElements', 'femaleOption', 'fullnameOption', 'getUserGroupAccesses', 'installType', 'metadataApi', 'setFormMapping', 'setInstallingFile', 'trackedEntityAttributes', and 'trackedEntityType'. Either include them or remove the dependency array. If 'setInstallingFile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["692"],"'example' is defined but never used.","'page0' is defined but never used.","'Tooltip' is defined but never used.","React Hook useEffect has missing dependencies: 'currentChild', 'femaleCode', 'formMapping.attributes', 'metadataApi', 'props.widget.i', and 'selectedOrgUnit'. Either include them or remove the dependency array. If 'setData' needs the current value of 'props.widget.i', you can also switch to useReducer instead of useState and read 'props.widget.i' in the reducer.",["693"],"React Hook useEffect has a missing dependency: 'defaultValue'. Either include it or remove the dependency array. If 'setSelectedCod' needs the current value of 'defaultValue', you can also switch to useReducer instead of useState and read 'defaultValue' in the reducer.",["694"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'dataElements', 'dataElements', 'metadata', 'metadata', 'options', 'options', 'metadata'.","unsafeRefs","Function declared in a loop contains unsafe references to variable(s) 'uidReplacement', 'uidReplacement'.","'convertPdfDoc2FileURL' is defined but never used.","'setMapping' is assigned a value but never used.","React Hook useLayoutEffect has a missing dependency: 'metadataApi'. Either include it or remove the dependency array.",["695"],"'date_limit' is assigned a value but never used.","'SEXES' is defined but never used.","'randomNumber' is defined but never used.","'StandardFonts' is defined but never used.","'Radio' is defined but never used.","'generateData' is defined but never used.","'CloseCircleOutlined' is defined but never used.","'useRef' is defined but never used.","'am5xy' is defined but never used.","React Hook useLayoutEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["696"],"'control' is defined but never used.","'TileLayer' is defined but never used.","'Marker' is defined but never used.","'Popup' is defined but never used.","'LayersControl' is defined but never used.","React Hook useEffect has a missing dependency: 'map'. Either include it or remove the dependency array.",["697"],["698"],"'apiUrl' is assigned a value but never used.","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","React Hook useEffect has missing dependencies: 'iNo' and 'search'. Either include them or remove the dependency array.",["699"],"React Hook useEffect has a missing dependency: 'debounceSearch'. Either include it or remove the dependency array.",["700"],"React Hook useEffect has missing dependencies: 'iNo', 'keyUILocale', and 'onSelect'. Either include them or remove the dependency array. If 'onSelect' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["701"],"no-global-assign","no-unsafe-negation",{"desc":"702","fix":"703"},{"desc":"704","fix":"705"},{"desc":"706","fix":"707"},{"desc":"708","fix":"709"},{"desc":"710","fix":"711"},{"desc":"712","fix":"713"},{"desc":"714","fix":"715"},{"desc":"716","fix":"717"},{"desc":"718","fix":"719"},{"desc":"720","fix":"721"},{"desc":"722","fix":"723"},{"desc":"724","fix":"725"},{"desc":"726","fix":"727"},{"desc":"728","fix":"729"},{"desc":"730","fix":"731"},{"desc":"732","fix":"733"},{"desc":"734","fix":"735"},[3243,3243]," rel=\"noreferrer\"",{"desc":"736","fix":"737"},{"desc":"738","fix":"739"},{"desc":"740","fix":"741"},{"desc":"742","fix":"743"},{"desc":"744","fix":"745"},{"desc":"746","fix":"747"},{"desc":"714","fix":"748"},{"desc":"749","fix":"750"},{"desc":"751","fix":"752"},{"desc":"751","fix":"753"},{"desc":"754","fix":"755"},{"desc":"756","fix":"757"},{"desc":"758","fix":"759"},"Update the dependencies array to be: [changeRoute, getICD11Options, getTrackedEntityTypes, metadataApi, setCertificateTemplate, setFemaleCode, setFormMapping, setFullnameOption, setIcdApiToken, setOrgUnitGroups, setOrgUnitLevels, setOrgUnits, setProgramMetadata, setTeas, setTrackerDataElements, setUILocale, setUserGroups, setUserRole, setUsers]",{"range":"760","text":"761"},"Update the dependencies array to be: [data.pager, dataApi, filters, programMetadata.id]",{"range":"762","text":"763"},"Update the dependencies array to be: [admin.fullnameOption, changeStep, programMetadata]",{"range":"764","text":"765"},"Update the dependencies array to be: [size]",{"range":"766","text":"767"},"Update the dependencies array to be: [dataApi, programMetadata, selectedOrgUnit, setupUI, sortTable, tableData]",{"range":"768","text":"769"},"Update the dependencies array to be: [dataApi, filterTable, programMetadata.id, selectedOrgUnit, setupUI, sortTable, tableData.page, tableData.pager]",{"range":"770","text":"771"},"Update the dependencies array to be: [metadataApi]",{"range":"772","text":"773"},"Update the dependencies array to be: [formMapping.attributes, getTeaValue, metadataApi, mutateAttribute]",{"range":"774","text":"775"},"Update the dependencies array to be: [currentEnrollment, currentEvents, data, formMapping.dataElements]",{"range":"776","text":"777"},"Update the dependencies array to be: [age, currentEvent, formMapping.dataElements, isShowFetalOrInfantDeath, mutateDataValue, mutateEvent]",{"range":"778","text":"779"},"Update the dependencies array to be: [currentTeiSexAttributeValue, age, currentEvent, isShowMaternalDeath, formMapping.dataElements, mutateEvent, mutateDataValue]",{"range":"780","text":"781"},"Update the dependencies array to be: [currentEnrollment.incidentDate, currentEvent, formMapping.dataElements, initNewEvent, mutateEvent, programStage.id, returnInitValue]",{"range":"782","text":"783"},"Update the dependencies array to be: [causeOfDeaths, formMapping.dataElements]",{"range":"784","text":"785"},"Update the dependencies array to be: [checkBoxUnderlying, flagUnderlying]",{"range":"786","text":"787"},"Update the dependencies array to be: [causeOfDeaths, fillUpUnderlying, flagUnderlying]",{"range":"788","text":"789"},"Update the dependencies array to be: [metadataApi, selectedTrackedEntityAttributes]",{"range":"790","text":"791"},"Update the dependencies array to be: [changeTrackedEntityType, changeTrackedEntityTypes, femaleCode, formMapping.attributes, fullnameOption, programMetadata, setFemaleOption, setFullnameOption]",{"range":"792","text":"793"},"Update the dependencies array to be: [importMetadata, open, programMetadata, status.status, t]",{"range":"794","text":"795"},"Update the dependencies array to be: [femaleOption, formMapping, fullnameOption, getICD11Options, metadata, metadataApi, open, results, setCertificateTemplate, setFemaleCode, t]",{"range":"796","text":"797"},"Update the dependencies array to be: [props]",{"range":"798","text":"799"},"Update the dependencies array to be: [assignedOrgUnits, dataElements, femaleOption, fullnameOption, generateNewUID, getUserGroupAccesses, installType, metadataApi, setFormMapping, setInstallingFile, trackedEntityAttributes, trackedEntityType]",{"range":"800","text":"801"},"Update the dependencies array to be: [selectedChild, props.period, currentChild, props.widget.i, femaleCode, metadataApi, selectedOrgUnit, formMapping.attributes]",{"range":"802","text":"803"},"Update the dependencies array to be: [defaultValue, visible]",{"range":"804","text":"805"},{"range":"806","text":"773"},"Update the dependencies array to be: [data]",{"range":"807","text":"808"},"Update the dependencies array to be: [map]",{"range":"809","text":"810"},{"range":"811","text":"810"},"Update the dependencies array to be: [defaultValue, iNo, search]",{"range":"812","text":"813"},"Update the dependencies array to be: [debounceSearch, searchValue]",{"range":"814","text":"815"},"Update the dependencies array to be: [iNo, keyUILocale, onSelect]",{"range":"816","text":"817"},[8749,8751],"[changeRoute, getICD11Options, getTrackedEntityTypes, metadataApi, setCertificateTemplate, setFemaleCode, setFormMapping, setFullnameOption, setIcdApiToken, setOrgUnitGroups, setOrgUnitLevels, setOrgUnits, setProgramMetadata, setTeas, setTrackerDataElements, setUILocale, setUserGroups, setUserRole, setUsers]",[1523,1532],"[data.pager, dataApi, filters, programMetadata.id]",[1609,1626],"[admin.fullnameOption, changeStep, programMetadata]",[1404,1406],"[size]",[1958,2061],"[dataApi, programMetadata, selectedOrgUnit, setupUI, sortTable, tableData]",[2544,2568],"[dataApi, filterTable, programMetadata.id, selectedOrgUnit, setupUI, sortTable, tableData.page, tableData.pager]",[1874,1876],"[metadataApi]",[1713,1715],"[formMapping.attributes, getTeaValue, metadataApi, mutateAttribute]",[2182,2188],"[currentEnrollment, currentEvents, data, formMapping.dataElements]",[3280,3285],"[age, currentEvent, formMapping.dataElements, isShowFetalOrInfantDeath, mutateDataValue, mutateEvent]",[3704,3738],"[currentTeiSexAttributeValue, age, currentEvent, isShowMaternalDeath, formMapping.dataElements, mutateEvent, mutateDataValue]",[5540,5542],"[currentEnrollment.incidentDate, currentEvent, formMapping.dataElements, initNewEvent, mutateEvent, programStage.id, returnInitValue]",[6123,6138],"[causeOfDeaths, formMapping.dataElements]",[6206,6226],"[checkBoxUnderlying, flagUnderlying]",[6326,6342],"[causeOfDeaths, fillUpUnderlying, flagUnderlying]",[2667,2700],"[metadataApi, selectedTrackedEntityAttributes]",[3319,3336],"[changeTrackedEntityType, changeTrackedEntityTypes, femaleCode, formMapping.attributes, fullnameOption, programMetadata, setFemaleOption, setFullnameOption]",[9703,9709],"[importMetadata, open, programMetadata, status.status, t]",[13349,13358],"[femaleOption, formMapping, fullnameOption, getICD11Options, metadata, metadataApi, open, results, setCertificateTemplate, setFemaleCode, t]",[1020,1022],"[props]",[4129,4145],"[assignedOrgUnits, dataElements, femaleOption, fullnameOption, generateNewUID, getUserGroupAccesses, installType, metadataApi, setFormMapping, setInstallingFile, trackedEntityAttributes, trackedEntityType]",[3952,3980],"[selectedChild, props.period, currentChild, props.widget.i, femaleCode, metadataApi, selectedOrgUnit, formMapping.attributes]",[553,562],"[defaultValue, visible]",[1364,1366],[2879,2881],"[data]",[366,368],"[map]",[648,650],[1196,1210],"[defaultValue, iNo, search]",[1272,1285],"[debounceSearch, searchValue]",[1793,1795],"[iNo, keyUILocale, onSelect]"]