import { AGE_RANGES, generateData, randomNumber, SEXES } from "../utils";
import generateChildChart from "../../utils/generateChildChart";

const ALL_CAUSES = [
  "tuberculosis",
  "sexuallyTransmittedDiseasesExcludingHiv",
  "hiv",
  "diarrhoealDiseases",
  "pertussis",
  "poliomyelitis",
  "diphtheria",
  "measles",
  "tetanus",
  "meningitis",
  "hepatitisB",
  "hepatitisC",
  "malaria",
  "tropicalClusterDiseases",
  "lowerRespiratoryInfections",
  "maternalConditions",
  "conditionsArisingDuringThePerinatalPeriod",
  "nutritionalDeficiencies",
  "mouthAndOropharynxCancers",
  "oesophagusCancer",
  "stomachCancer",
  "colonAndRectumCancers",
  "liverCancer",
  "pancreasCancer",
  "tracheaBronchusAndLungCancers",
  "melanomaAndOtherSkinCancers",
  "breastCancer",
  "cervixUteriCancer",
  "corpusUteriCancer",
  "ovaryCancer",
  "prostateCancer",
  "bladderCancer",
  "lymphomasAndMultipleMyeloma",
  "leukaemia",
  "alzheimerAndOtherDementias",
  "parkinsonDisease",
  "hypertensiveDisease",
  "ischaemicHeartDisease",
  "cerebrovascularDisease",
  "chronicObstructivePulmonaryDisease",
  "asthma",
  "digestiveDiseases",
  "genitoUrinaryDiseases",
  "congenitalAnomalies",
  "roadTrafficAccidents",
  "suicide",
  "homicide",
];
const ALL_CAUSE_CODE = [
  "0030",
  "0040;0050;0060;0070;0080",
  "0090",
  "0100",
  "0120",
  "0130",
  "0140",
  "0150",
  "0160",
  "0170",
  "0180",
  "0190",
  "0200",
  "0210;0220;0230;0240;0250;0260;0270",
  "0390",
  "0420;0430;0440;0450;0460;0470;0480",
  "0490;0500;0510;0520",
  "0530;0540;0550;0560;0570;0580",
  "0610",
  "0620",
  "0630",
  "0640",
  "0650",
  "0660",
  "0670",
  "0680",
  "0690",
  "0700",
  "0710",
  "0720",
  "0730",
  "0740",
  "0750",
  "0760",
  "0870",
  "0880",
  "1060",
  "1070",
  "1080",
  "1120",
  "1130",
  "1150",
  "1200",
  "1310",
  "1500",
  "1570",
  "1580",
];

const generateStackedBarChart = (i, t) => {
  return {
    i,
    children: ALL_CAUSES.map((cause, index) => {
      return generateChildChart("stackedBar", {
        title: `${t("numberOfDeathBy")} ${t(cause)}`,
        dataLabels: SEXES,
        dataSets: AGE_RANGES.map((name) => ({
          name,
          data: Array(SEXES.length)
            .fill()
            .map(() => randomNumber(0, 30)),
        })),
        colors: ["#4C7FBC", "#ED7B2E"],
        codes: ALL_CAUSE_CODE[index],
      });
    }),
  };
};
export default generateStackedBarChart;
